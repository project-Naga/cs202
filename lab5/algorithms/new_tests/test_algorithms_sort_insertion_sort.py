# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.sort.insertion_sort as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xcf\x85\xa6c\xf4\xb3X\xf7Y\xd1z\xfd9A\xc0"
    module_0.insertion_sort(bytes_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.insertion_sort(list_0)
    var_1 = module_0.insertion_sort(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = " ko\tfe'dvgRY@3\x0cf,y"
    module_0.insertion_sort(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0]
    module_0.insertion_sort(list_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0]
    none_type_0 = None
    module_0.insertion_sort(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_1 = []
    var_0 = module_0.insertion_sort(list_1, list_1)
    var_1 = module_0.insertion_sort(list_0)
    module_0.insertion_sort(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_0, bool_1]
    var_0 = module_0.insertion_sort(list_0)
    var_1 = module_0.insertion_sort(var_0, var_0)
    module_0.insertion_sort(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    str_0 = "\n        Calculate tree balance factor\n\n        "
    bool_1 = False
    list_0 = [bool_1, bool_0, bool_0, bool_1, str_0]
    module_0.insertion_sort(list_0)
