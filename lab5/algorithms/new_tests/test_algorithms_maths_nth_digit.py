# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.maths.nth_digit as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.find_nth_digit(bool_0)
    assert var_0 == 0
    var_1 = module_0.find_nth_digit(var_0)
    assert var_1 == 0
    var_2 = module_0.find_nth_digit(bool_0)
    assert var_2 == 0
    var_3 = module_0.find_nth_digit(var_2)
    assert var_3 == 0
    var_4 = module_0.find_nth_digit(bool_0)
    assert var_4 == 0
    var_5 = module_0.find_nth_digit(var_0)
    assert var_5 == 0
    int_0 = 3539
    var_6 = module_0.find_nth_digit(var_0)
    assert var_6 == 0
    var_7 = module_0.find_nth_digit(var_6)
    assert var_7 == 0
    var_8 = module_0.find_nth_digit(var_4)
    assert var_8 == 0
    var_9 = module_0.find_nth_digit(var_4)
    assert var_9 == 0
    var_10 = module_0.find_nth_digit(var_4)
    assert var_10 == 0
    var_11 = module_0.find_nth_digit(int_0)
    assert var_11 == 1
    str_0 = "insert 2: "
    module_0.find_nth_digit(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -431
    module_0.find_nth_digit(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "\r6vCr>*NK\"YW'"
    module_0.find_nth_digit(str_0)
