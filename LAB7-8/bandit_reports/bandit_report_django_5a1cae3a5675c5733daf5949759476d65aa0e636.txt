[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.12.3
Working... ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 0:00:42
Run started:2025-02-27 05:28:31.835470

Test results:
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b110_try_except_pass.html
   Location: ./django/apps/config.py:112:8
111	            app_module = import_module(entry)
112	        except Exception:
113	            pass
114	        else:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b110_try_except_pass.html
   Location: ./django/apps/config.py:163:12
162	                app_config_class = import_string(entry)
163	            except Exception:
164	                pass
165	        # If both import_module and import_string failed, it means that entry

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/conf/global_settings.py:206:22
205	EMAIL_HOST_USER = ""
206	EMAIL_HOST_PASSWORD = ""
207	EMAIL_USE_TLS = False

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/conf/global_settings.py:267:13
266	# loudly.
267	SECRET_KEY = ""
268	

--------------------------------------------------
>> Issue: [B613:trojansource] A Python source file contains bidirectional control characters ('\u200f').
   Severity: High   Confidence: Medium
   CWE: CWE-838 (https://cwe.mitre.org/data/definitions/838.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b613_trojansource.html
   Location: ./django/conf/locale/ar/formats.py:10:23
9	MONTH_DAY_FORMAT = "j F"
10	SHORT_DATE_FORMAT = "d‏/m‏/Y"
11	# SHORT_DATETIME_FORMAT =
12	# FIRST_DAY_OF_WEEK =

--------------------------------------------------
>> Issue: [B613:trojansource] A Python source file contains bidirectional control characters ('\u200f').
   Severity: High   Confidence: Medium
   CWE: CWE-838 (https://cwe.mitre.org/data/definitions/838.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b613_trojansource.html
   Location: ./django/conf/locale/ckb/formats.py:11:32
10	SHORT_DATE_FORMAT = "Y/n/j"
11	SHORT_DATETIME_FORMAT = "Y/n/j،‏ G:i"
12	FIRST_DAY_OF_WEEK = 6
13	

--------------------------------------------------
>> Issue: [B613:trojansource] A Python source file contains bidirectional control characters ('\u200f').
   Severity: High   Confidence: Medium
   CWE: CWE-838 (https://cwe.mitre.org/data/definitions/838.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b613_trojansource.html
   Location: ./django/conf/locale/fa/formats.py:11:32
10	SHORT_DATE_FORMAT = "Y/n/j"
11	SHORT_DATETIME_FORMAT = "Y/n/j،‏ G:i"
12	FIRST_DAY_OF_WEEK = 6
13	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admin/helpers.py:161:15
160	    def errors(self):
161	        return mark_safe(
162	            "\n".join(
163	                self.form[f].errors.as_ul()
164	                for f in self.fields
165	                if f not in self.readonly_fields
166	            ).strip("\n")
167	        )
168	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/helpers.py:161:15
160	    def errors(self):
161	        return mark_safe(
162	            "\n".join(
163	                self.form[f].errors.as_ul()
164	                for f in self.fields
165	                if f not in self.readonly_fields
166	            ).strip("\n")
167	        )
168	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admin/helpers.py:191:21
190	        return self.field.label_tag(
191	            contents=mark_safe(contents),
192	            attrs=attrs,

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/helpers.py:191:21
190	        return self.field.label_tag(
191	            contents=mark_safe(contents),
192	            attrs=attrs,

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admin/helpers.py:197:15
196	    def errors(self):
197	        return mark_safe(self.field.errors.as_ul())
198	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/helpers.py:197:15
196	    def errors(self):
197	        return mark_safe(self.field.errors.as_ul())
198	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admin/options.py:379:19
378	        try:
379	            return mark_safe(self.empty_value_display)
380	        except AttributeError:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/options.py:379:19
378	        try:
379	            return mark_safe(self.empty_value_display)
380	        except AttributeError:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admin/options.py:381:19
380	        except AttributeError:
381	            return mark_safe(self.admin_site.empty_value_display)
382	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/options.py:381:19
380	        except AttributeError:
381	            return mark_safe(self.admin_site.empty_value_display)
382	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admin/templatetags/admin_list.py:50:12
49	            cl.get_query_string({PAGE_VAR: i}),
50	            mark_safe(' class="end"' if i == cl.paginator.num_pages else ""),
51	            i,

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/templatetags/admin_list.py:50:12
49	            cl.get_query_string({PAGE_VAR: i}),
50	            mark_safe(' class="end"' if i == cl.paginator.num_pages else ""),
51	            i,

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admin/templatetags/admin_list.py:103:28
102	                yield {
103	                    "text": mark_safe(
104	                        f'<input type="checkbox" id="action-toggle" '
105	                        f'aria-label="{aria_label}">'
106	                    ),
107	                    "class_attrib": mark_safe(' class="action-checkbox-column"'),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/templatetags/admin_list.py:103:28
102	                yield {
103	                    "text": mark_safe(
104	                        f'<input type="checkbox" id="action-toggle" '
105	                        f'aria-label="{aria_label}">'
106	                    ),
107	                    "class_attrib": mark_safe(' class="action-checkbox-column"'),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/templatetags/admin_list.py:107:36
106	                    ),
107	                    "class_attrib": mark_safe(' class="action-checkbox-column"'),
108	                    "sortable": False,

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admin/templatetags/admin_list.py:256:20
255	                    row_classes.append("nowrap")
256	        row_class = mark_safe(' class="%s"' % " ".join(row_classes))
257	        # If list_display_links not defined, add the link tag to the first field

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/templatetags/admin_list.py:256:20
255	                    row_classes.append("nowrap")
256	        row_class = mark_safe(' class="%s"' % " ".join(row_classes))
257	        # If list_display_links not defined, add the link tag to the first field

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admin/templatetags/admin_list.py:306:30
305	                bf = form[field_name]
306	                result_repr = mark_safe(str(bf.errors) + str(bf))
307	            yield format_html("<td{}>{}</td>", row_class, result_repr)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/templatetags/admin_list.py:306:30
305	                bf = form[field_name]
306	                result_repr = mark_safe(str(bf.errors) + str(bf))
307	            yield format_html("<td{}>{}</td>", row_class, result_repr)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admin/templatetags/admin_list.py:337:22
336	            if form[cl.model._meta.pk.name].is_hidden:
337	                yield mark_safe(form[cl.model._meta.pk.name])
338	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admin/templatetags/admin_list.py:337:22
336	            if form[cl.model._meta.pk.name].is_hidden:
337	                yield mark_safe(form[cl.model._meta.pk.name])
338	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admindocs/utils.py:88:11
87	    )
88	    return mark_safe(parts["fragment"])
89	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admindocs/utils.py:88:11
87	    )
88	    return mark_safe(parts["fragment"])
89	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/admindocs/utils.py:264:11
263	def strip_p_tags(value):
264	    return mark_safe(value.replace("<p>", "").replace("</p>", ""))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/admindocs/utils.py:264:11
263	def strip_p_tags(value):
264	    return mark_safe(value.replace("<p>", "").replace("</p>", ""))

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password2'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b107_hardcoded_password_default.html
   Location: ./django/contrib/auth/forms.py:143:4
142	    @sensitive_variables("password")
143	    def validate_password_for_user(self, user, password_field_name="password2"):
144	        password = self.cleaned_data.get(password_field_name)
145	        if password:
146	            try:
147	                password_validation.validate_password(password, user)
148	            except ValidationError as error:
149	                self.add_error(password_field_name, error)
150	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b107_hardcoded_password_default.html
   Location: ./django/contrib/auth/forms.py:151:4
150	
151	    def set_password_and_save(self, user, password_field_name="password1", commit=True):
152	        user.set_password(self.cleaned_data[password_field_name])
153	        if commit:
154	            user.save()
155	        return user
156	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'usable_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b107_hardcoded_password_default.html
   Location: ./django/contrib/auth/forms.py:183:4
182	    @sensitive_variables("password1", "password2")
183	    def validate_passwords(
184	        self,
185	        password1_field_name="password1",
186	        password2_field_name="password2",
187	        usable_password_field_name="usable_password",
188	    ):
189	        usable_password = (
190	            self.cleaned_data.pop(usable_password_field_name, None) != "false"
191	        )
192	        self.cleaned_data["set_usable_password"] = usable_password
193	
194	        if not usable_password:
195	            return
196	
197	        password1 = self.cleaned_data.get(password1_field_name)
198	        password2 = self.cleaned_data.get(password2_field_name)
199	
200	        if not password1 and password1_field_name not in self.errors:
201	            error = ValidationError(
202	                self.fields[password1_field_name].error_messages["required"],
203	                code="required",
204	            )
205	            self.add_error(password1_field_name, error)
206	
207	        if not password2 and password2_field_name not in self.errors:
208	            error = ValidationError(
209	                self.fields[password2_field_name].error_messages["required"],
210	                code="required",
211	            )
212	            self.add_error(password2_field_name, error)
213	
214	        super().validate_passwords(password1_field_name, password2_field_name)
215	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '!'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/contrib/auth/hashers.py:22:27
21	
22	UNUSABLE_PASSWORD_PREFIX = "!"  # This will never be a valid encoded hash
23	UNUSABLE_PASSWORD_SUFFIX_LENGTH = (

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/contrib/auth/hashers.py:333:8
332	        algorithm, iterations, salt, hash = encoded.split("$", 3)
333	        assert algorithm == self.algorithm
334	        return {

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/contrib/auth/hashers.py:412:8
411	        algorithm, rest = encoded.split("$", 1)
412	        assert algorithm == self.algorithm
413	        params = argon2.extract_parameters("$" + rest)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/contrib/auth/hashers.py:433:8
432	        algorithm, rest = encoded.split("$", 1)
433	        assert algorithm == self.algorithm
434	        try:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/contrib/auth/hashers.py:514:8
513	        algorithm, empty, algostr, work_factor, data = encoded.split("$", 4)
514	        assert algorithm == self.algorithm
515	        return {

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/contrib/auth/hashers.py:525:8
524	        algorithm, data = encoded.split("$", 1)
525	        assert algorithm == self.algorithm
526	        encoded_2 = self.encode(password, data.encode("ascii"))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/contrib/auth/hashers.py:603:8
602	        )
603	        assert algorithm == self.algorithm
604	        return {

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b324_hashlib.html
   Location: ./django/contrib/auth/hashers.py:658:15
657	        self._check_encode_args(password, salt)
658	        hash = hashlib.md5((salt + password).encode()).hexdigest()
659	        return "%s$%s$%s" % (self.algorithm, salt, hash)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/contrib/auth/hashers.py:663:8
662	        algorithm, salt, hash = encoded.split("$", 2)
663	        assert algorithm == self.algorithm
664	        return {

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/contrib/auth/management/commands/createsuperuser.py:23:17
22	
23	PASSWORD_FIELD = "password"
24	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '_password_reset_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/contrib/auth/views.py:246:31
245	
246	INTERNAL_RESET_SESSION_TOKEN = "_password_reset_token"
247	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'set-password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/contrib/auth/views.py:260:22
259	    post_reset_login_backend = None
260	    reset_url_token = "set-password"
261	    success_url = reverse_lazy("password_reset_complete")

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/flatpages/views.py:67:14
66	    # content in the first place).
67	    f.title = mark_safe(f.title)
68	    f.content = mark_safe(f.content)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/flatpages/views.py:67:14
66	    # content in the first place).
67	    f.title = mark_safe(f.title)
68	    f.content = mark_safe(f.content)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/flatpages/views.py:68:16
67	    f.title = mark_safe(f.title)
68	    f.content = mark_safe(f.content)
69	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/flatpages/views.py:68:16
67	    f.title = mark_safe(f.title)
68	    f.content = mark_safe(f.content)
69	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/contrib/gis/db/backends/postgis/operations.py:204:20
203	                raise ImproperlyConfigured(
204	                    'Cannot determine PostGIS version for database "%s" '
205	                    'using command "SELECT postgis_lib_version()". '
206	                    "GeoDjango requires at least PostGIS version 3.1. "
207	                    "Was the database created from a spatial database "
208	                    "template?" % self.connection.settings_dict["NAME"]
209	                )

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/humanize/templatetags/humanize.py:63:11
62	    # Mark value safe so i18n does not break with <sup> or <sub> see #19988
63	    return mark_safe(value)
64	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/humanize/templatetags/humanize.py:63:11
62	    # Mark value safe so i18n does not break with <sup> or <sub> see #19988
63	    return mark_safe(value)
64	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/contrib/messages/storage/cookie.py:38:29
37	                if obj[1]:
38	                    obj[3] = mark_safe(obj[3])
39	                return Message(*obj[2:])

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/contrib/messages/storage/cookie.py:38:29
37	                if obj[1]:
38	                    obj[3] = mark_safe(obj[3])
39	                return Message(*obj[2:])

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b110_try_except_pass.html
   Location: ./django/contrib/sessions/backends/base.py:139:8
138	            logger.warning("Session data corrupted")
139	        except Exception:
140	            # ValueError, unpickling exceptions. If any of these happen, just
141	            # return an empty dictionary (an empty session).
142	            pass
143	        return {}

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/contrib/staticfiles/storage.py:242:16
241	                # Otherwise the condition above would have returned prematurely.
242	                assert url_path.startswith(settings.STATIC_URL)
243	                target_name = url_path.removeprefix(settings.STATIC_URL)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./django/core/cache/backends/db.py:3:0
2	import base64
3	import pickle
4	from datetime import UTC, datetime

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:69:16
68	            cursor.execute(
69	                "SELECT %s, %s, %s FROM %s WHERE %s IN (%s)"
70	                % (
71	                    quote_name("cache_key"),
72	                    quote_name("value"),
73	                    quote_name("expires"),
74	                    table,
75	                    quote_name("cache_key"),
76	                    ", ".join(["%s"] * len(key_map)),
77	                ),
78	                list(key_map),

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./django/core/cache/backends/db.py:95:24
94	                value = connection.ops.process_clob(value)
95	                value = pickle.loads(base64.b64decode(value.encode()))
96	                result[key_map.get(key)] = value

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:120:27
119	        with connection.cursor() as cursor:
120	            cursor.execute("SELECT COUNT(*) FROM %s" % table)
121	            num = cursor.fetchone()[0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:143:24
142	                    cursor.execute(
143	                        "SELECT %s, %s FROM %s WHERE %s = %%s"
144	                        % (
145	                            quote_name("cache_key"),
146	                            quote_name("expires"),
147	                            table,
148	                            quote_name("cache_key"),
149	                        ),
150	                        [key],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:169:28
168	                        cursor.execute(
169	                            "UPDATE %s SET %s = %%s WHERE %s = %%s"
170	                            % (table, quote_name("expires"), quote_name("cache_key")),
171	                            [exp, key],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:177:28
176	                        cursor.execute(
177	                            "UPDATE %s SET %s = %%s, %s = %%s WHERE %s = %%s"
178	                            % (
179	                                table,
180	                                quote_name("value"),
181	                                quote_name("expires"),
182	                                quote_name("cache_key"),
183	                            ),
184	                            [b64encoded, exp, key],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:188:28
187	                        cursor.execute(
188	                            "INSERT INTO %s (%s, %s, %s) VALUES (%%s, %%s, %%s)"
189	                            % (
190	                                table,
191	                                quote_name("cache_key"),
192	                                quote_name("value"),
193	                                quote_name("expires"),
194	                            ),
195	                            [key, b64encoded, exp],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:224:16
223	            cursor.execute(
224	                "DELETE FROM %s WHERE %s IN (%s)"
225	                % (
226	                    table,
227	                    quote_name("cache_key"),
228	                    ", ".join(["%s"] * len(keys)),
229	                ),
230	                keys,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:245:16
244	            cursor.execute(
245	                "SELECT %s FROM %s WHERE %s = %%s and %s > %%s"
246	                % (
247	                    quote_name("cache_key"),
248	                    quote_name(self._table),
249	                    quote_name("cache_key"),
250	                    quote_name("expires"),
251	                ),
252	                [key, connection.ops.adapt_datetimefield_value(now)],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:263:16
262	            cursor.execute(
263	                "DELETE FROM %s WHERE %s < %%s"
264	                % (
265	                    table,
266	                    connection.ops.quote_name("expires"),
267	                ),
268	                [connection.ops.adapt_datetimefield_value(now)],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:280:24
279	                    cursor.execute(
280	                        "DELETE FROM %s WHERE %s < %%s"
281	                        % (
282	                            table,
283	                            connection.ops.quote_name("cache_key"),
284	                        ),
285	                        [last_cache_key[0]],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/core/cache/backends/db.py:293:27
292	        with connection.cursor() as cursor:
293	            cursor.execute("DELETE FROM %s" % table)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./django/core/cache/backends/filebased.py:4:0
3	import os
4	import pickle
5	import random

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./django/core/cache/backends/filebased.py:36:27
35	                if not self._is_expired(f):
36	                    return pickle.loads(zlib.decompress(f.read()))
37	        except FileNotFoundError:

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./django/core/cache/backends/filebased.py:69:41
68	                    else:
69	                        previous_value = pickle.loads(zlib.decompress(f.read()))
70	                        f.seek(0)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./django/core/cache/backends/filebased.py:153:18
152	        try:
153	            exp = pickle.load(f)
154	        except EOFError:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./django/core/cache/backends/locmem.py:2:0
1	"Thread-safe in-memory cache backend."
2	import pickle
3	import time

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./django/core/cache/backends/locmem.py:42:15
41	            self._cache.move_to_end(key, last=False)
42	        return pickle.loads(pickled)
43	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./django/core/cache/backends/locmem.py:72:20
71	            pickled = self._cache[key]
72	            value = pickle.loads(pickled)
73	            new_value = value + delta

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./django/core/cache/backends/redis.py:3:0
2	
3	import pickle
4	import random

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./django/core/cache/backends/redis.py:27:19
26	        except ValueError:
27	            return pickle.loads(data)
28	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./django/core/cache/backends/redis.py:68:15
67	            return 0
68	        return random.randint(1, len(self._servers) - 1)
69	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'django-insecure-'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/core/checks/security/base.py:22:29
21	
22	SECRET_KEY_INSECURE_PREFIX = "django-insecure-"
23	SECRET_KEY_MIN_LENGTH = 50

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/core/handlers/asgi.py:239:8
238	        # This should never happen.
239	        assert False, "Invalid ASGI message after request body: %s" % message["type"]
240	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./django/core/management/commands/dbshell.py:1:0
1	import subprocess
2	
3	from django.core.management.base import BaseCommand, CommandError

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: ./django/core/management/commands/runserver.py:178:19
177	        elif self.addr == "0":
178	            addr = "0.0.0.0"
179	        else:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b102_exec_used.html
   Location: ./django/core/management/commands/shell.py:87:20
86	                try:
87	                    exec(compile(pythonrc_code, pythonrc, "exec"), imported_objects)
88	                except Exception:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b102_exec_used.html
   Location: ./django/core/management/commands/shell.py:231:12
230	        if options["command"]:
231	            exec(options["command"], {**globals(), **self.get_namespace()})
232	            return

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b102_exec_used.html
   Location: ./django/core/management/commands/shell.py:241:12
240	        ):
241	            exec(sys.stdin.read(), {**globals(), **self.get_namespace()})
242	            return

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./django/core/management/utils.py:4:0
3	import shutil
4	import subprocess
5	import sys

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./django/core/management/utils.py:8:0
7	from pathlib import Path
8	from subprocess import run
9	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./django/core/management/utils.py:24:12
23	    try:
24	        p = run(args, capture_output=True, close_fds=os.name != "nt")
25	    except OSError as err:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./django/core/management/utils.py:175:12
174	        try:
175	            subprocess.run(
176	                [black_path, "--fast", "--", *written_files],
177	                capture_output=True,
178	            )
179	        except OSError:

--------------------------------------------------
>> Issue: [B409:blacklist] Using pulldom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace pulldom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b409-import-xml-pulldom
   Location: ./django/core/serializers/xml_serializer.py:6:0
5	import json
6	from xml.dom import pulldom
7	from xml.sax import handler

--------------------------------------------------
>> Issue: [B406:blacklist] Using handler to parse untrusted XML data is known to be vulnerable to XML attacks. Replace handler with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: ./django/core/serializers/xml_serializer.py:7:0
6	from xml.dom import pulldom
7	from xml.sax import handler
8	from xml.sax.expatreader import ExpatParser as _ExpatParser

--------------------------------------------------
>> Issue: [B406:blacklist] Using ExpatParser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ExpatParser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: ./django/core/serializers/xml_serializer.py:8:0
7	from xml.sax import handler
8	from xml.sax.expatreader import ExpatParser as _ExpatParser
9	

--------------------------------------------------
>> Issue: [B319:blacklist] Using xml.dom.pulldom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-pulldom
   Location: ./django/core/serializers/xml_serializer.py:202:28
201	        self.handle_forward_references = options.pop("handle_forward_references", False)
202	        self.event_stream = pulldom.parse(self.stream, self._make_parser())
203	        self.db = using

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./django/db/backends/base/client.py:2:0
1	import os
2	import subprocess
3	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./django/db/backends/base/client.py:28:8
27	        env = {**os.environ, **env} if env else None
28	        subprocess.run(args, env=env, check=True)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/base/operations.py:94:17
93	        cache_key = self.quote_name("cache_key")
94	        return f"SELECT {cache_key} FROM %s ORDER BY {cache_key} LIMIT 1 OFFSET %%s"
95	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/mysql/base.py:340:24
339	                    cursor.execute(
340	                        """
341	                        SELECT REFERRING.`%s`, REFERRING.`%s` FROM `%s` as REFERRING
342	                        LEFT JOIN `%s` as REFERRED
343	                        ON (REFERRING.`%s` = REFERRED.`%s`)
344	                        WHERE REFERRING.`%s` IS NOT NULL AND REFERRED.`%s` IS NULL
345	                        """
346	                        % (
347	                            primary_key_column_name,
348	                            column_name,
349	                            table_name,
350	                            referenced_table_name,
351	                            column_name,
352	                            referenced_column_name,
353	                            column_name,
354	                            referenced_column_name,
355	                        )
356	                    )

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./django/db/backends/mysql/creation.py:2:0
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./django/db/backends/mysql/creation.py:77:13
76	
77	        with subprocess.Popen(
78	            dump_cmd, stdout=subprocess.PIPE, env=dump_env
79	        ) as dump_proc:
80	            with subprocess.Popen(

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./django/db/backends/mysql/creation.py:80:17
79	        ) as dump_proc:
80	            with subprocess.Popen(
81	                load_cmd,
82	                stdin=dump_proc.stdout,
83	                stdout=subprocess.DEVNULL,
84	                env=load_env,
85	            ):
86	                # Allow dump_proc to receive a SIGPIPE if the load process exits.

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/mysql/introspection.py:155:12
154	        cursor.execute(
155	            "SELECT * FROM %s LIMIT 1" % self.connection.ops.quote_name(table_name)
156	        )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/mysql/schema.py:111:16
110	            self.execute(
111	                "UPDATE %(table)s SET %(column)s = %%s"
112	                % {
113	                    "table": self.quote_name(model._meta.db_table),
114	                    "column": self.quote_name(field.column),
115	                },
116	                [effective_default],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/oracle/base.py:331:20
330	                cursor.execute(
331	                    "SELECT 1 FROM DUAL WHERE DUMMY %s"
332	                    % self._standard_operators["contains"],
333	                    ["X"],

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'ALTER USER %(user)s IDENTIFIED BY "%(password)s"'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/db/backends/oracle/creation.py:289:27
288	        if not success and self._test_settings_get("PASSWORD") is None:
289	            set_password = 'ALTER USER %(user)s IDENTIFIED BY "%(password)s"'
290	            self._execute_statements(cursor, [set_password], parameters, verbosity)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/oracle/introspection.py:181:12
180	        cursor.execute(
181	            "SELECT * FROM {} WHERE ROWNUM < 2 AND {} > 0".format(
182	                self.connection.ops.quote_name(table_name), self.cache_bust_counter

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/oracle/operations.py:82:14
81	        return (
82	            f"SELECT {cache_key} "
83	            f"FROM %s "
84	            f"ORDER BY {cache_key} OFFSET %%s ROWS FETCH FIRST 1 ROWS ONLY"
85	        )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/oracle/operations.py:694:15
693	        # UNION operator. To prevent incorrect SQL, move UNION to a subquery.
694	        return "SELECT * FROM (%s)" % " UNION ALL ".join(query)
695	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/oracle/schema.py:55:12
54	        self.execute(
55	            """
56	            DECLARE
57	                i INTEGER;
58	            BEGIN
59	                SELECT COUNT(1) INTO i FROM USER_SEQUENCES
60	                    WHERE SEQUENCE_NAME = '%(sq_name)s';
61	                IF i = 1 THEN
62	                    EXECUTE IMMEDIATE 'DROP SEQUENCE "%(sq_name)s"';
63	                END IF;
64	            END;
65	        /"""
66	            % {
67	                "sq_name": self.connection.ops._get_no_autofield_sequence_name(
68	                    model._meta.db_table
69	                )
70	            }
71	        )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/oracle/schema.py:145:12
144	        self.execute(
145	            "UPDATE %s set %s=%s"
146	            % (
147	                self.quote_name(model._meta.db_table),
148	                self.quote_name(new_temp_field.column),
149	                new_value,
150	            )
151	        )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/postgresql/introspection.py:113:12
112	        cursor.execute(
113	            "SELECT * FROM %s LIMIT 1" % self.connection.ops.quote_name(table_name)
114	        )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/postgresql/operations.py:155:21
154	        if isinstance(placeholder_rows, InsertUnnest):
155	            return f"SELECT * FROM {placeholder_rows}"
156	        return super().bulk_insert_sql(fields, placeholder_rows)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/postgresql/operations.py:398:19
397	        if on_conflict == OnConflict.UPDATE:
398	            return "ON CONFLICT(%s) DO UPDATE SET %s" % (
399	                ", ".join(map(self.quote_name, unique_fields)),
400	                ", ".join(
401	                    [
402	                        f"{field} = EXCLUDED.{field}"
403	                        for field in map(self.quote_name, update_fields)
404	                    ]
405	                ),
406	            )
407	        return super().on_conflict_suffix_sql(

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b324_hashlib.html
   Location: ./django/db/backends/sqlite3/_functions.py:401:11
400	        return None
401	    return md5(text.encode()).hexdigest()
402	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b324_hashlib.html
   Location: ./django/db/backends/sqlite3/_functions.py:447:11
446	        return None
447	    return sha1(text.encode()).hexdigest()
448	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/sqlite3/base.py:296:20
295	                primary_key_value, bad_value = cursor.execute(
296	                    "SELECT %s, %s FROM %s WHERE rowid = %%s"
297	                    % (
298	                        self.ops.quote_name(primary_key_column_name),
299	                        self.ops.quote_name(column_name),
300	                        self.ops.quote_name(table_name),
301	                    ),
302	                    (rowid,),

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'COLLATE'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/db/backends/sqlite3/introspection.py:434:28
433	            for index, token in enumerate(tokens):
434	                if token == "COLLATE":
435	                    collation = tokens[index + 1]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/sqlite3/operations.py:426:19
425	        ):
426	            return "ON CONFLICT(%s) DO UPDATE SET %s" % (
427	                ", ".join(map(self.quote_name, unique_fields)),
428	                ", ".join(
429	                    [
430	                        f"{field} = EXCLUDED.{field}"
431	                        for field in map(self.quote_name, update_fields)
432	                    ]
433	                ),
434	            )
435	        return super().on_conflict_suffix_sql(

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/sqlite3/schema.py:254:12
253	        self.execute(
254	            "INSERT INTO %s (%s) SELECT %s FROM %s"
255	            % (
256	                self.quote_name(new_model._meta.db_table),
257	                ", ".join(self.quote_name(x) for x in mapping),
258	                ", ".join(mapping.values()),
259	                self.quote_name(model._meta.db_table),
260	            )
261	        )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/backends/sqlite3/schema.py:457:12
456	        self.execute(
457	            "INSERT INTO %s (%s) SELECT %s FROM %s"
458	            % (
459	                self.quote_name(new_field.remote_field.through._meta.db_table),
460	                ", ".join(
461	                    [
462	                        "id",
463	                        new_field.m2m_column_name(),
464	                        new_field.m2m_reverse_name(),
465	                    ]
466	                ),
467	                ", ".join(
468	                    [
469	                        "id",
470	                        old_field.m2m_column_name(),
471	                        old_field.m2m_reverse_name(),
472	                    ]
473	                ),
474	                self.quote_name(old_field.remote_field.through._meta.db_table),
475	            )
476	        )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/migrations/autodetector.py:865:12
864	            model_state = self.to_state.models[app_label, model_name]
865	            assert model_state.options.get("proxy")
866	            # Depend on the deletion of any possible non-proxy version of us

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/migrations/autodetector.py:998:12
997	            model_state = self.from_state.models[app_label, model_name]
998	            assert model_state.options.get("proxy")
999	            self.add_operation(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/migrations/graph.py:91:8
90	    def add_node(self, key, migration):
91	        assert key not in self.node_map
92	        node = Node(key)

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b307-eval
   Location: ./django/db/migrations/questioner.py:168:27
167	                try:
168	                    return eval(code, {}, {"datetime": datetime, "timezone": timezone})
169	                except Exception as e:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/migrations/state.py:106:12
105	        else:
106	            assert isinstance(real_apps, set)
107	        self.real_apps = real_apps

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/migrations/state.py:476:12
475	            # alter_field().
476	            assert field_name not in relations_to_remote_model[model_key]
477	            relations_to_remote_model[model_key][field_name] = field

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/base.py:914:8
913	        using = using or router.db_for_write(self.__class__, instance=self)
914	        assert not (force_insert and (force_update or update_fields))
915	        assert update_fields is None or update_fields

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/base.py:915:8
914	        assert not (force_insert and (force_update or update_fields))
915	        assert update_fields is None or update_fields
916	        cls = origin = self.__class__

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/expressions.py:213:8
212	    def set_source_expressions(self, exprs):
213	        assert not exprs
214	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/expressions.py:1355:8
1354	    def set_source_expressions(self, exprs):
1355	        assert all(isinstance(expr, Col) and expr.alias == self.alias for expr in exprs)
1356	        self.targets = [col.target for col in exprs]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/fields/__init__.py:1403:12
1402	        else:
1403	            assert isinstance(value, datetime.date)
1404	            lower = lower.date()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/fields/related.py:1507:12
1506	        else:
1507	            assert from_model is not None, (
1508	                "ManyToManyField with intermediate "
1509	                "tables cannot be checked if you don't pass the model "
1510	                "where the field is attached to."
1511	            )
1512	            # Set some useful local variables

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/fields/related.py:1654:16
1653	            else:
1654	                assert from_model is not None, (
1655	                    "ManyToManyField with intermediate "
1656	                    "tables cannot be checked if you don't pass the model "
1657	                    "where the field is attached to."
1658	                )
1659	

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./django/db/models/fields/related_descriptors.py:1137:23
1136	            qn = connection.ops.quote_name
1137	            queryset = queryset.extra(
1138	                select={
1139	                    "_prefetch_related_val_%s"
1140	                    % f.attname: "%s.%s"
1141	                    % (qn(join_table), qn(f.column))
1142	                    for f in fk.local_related_fields
1143	                }
1144	            )
1145	            return (

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/functions/datetime.py:82:12
81	            # assert should never be hit.
82	            assert False, "Tried to Extract from an invalid type."
83	        return sql, params

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/models/functions/text.py:271:16
270	            template=(
271	                "(SELECT LISTAGG(s) WITHIN GROUP (ORDER BY n DESC) FROM "
272	                f"(SELECT LEVEL n, SUBSTR(%(expressions)s, LEVEL, 1) s{suffix} "
273	                "CONNECT BY LEVEL <= LENGTH(%(expressions)s)) "
274	                "GROUP BY %(expressions)s)"
275	            ),

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/query.py:824:20
823	                ):
824	                    assert len(returned_columns) == len(objs_without_pk)
825	                for obj_without_pk, results in zip(objs_without_pk, returned_columns):

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/sql/compiler.py:251:8
250	        annotations = {}
251	        assert not (self.query.select and self.query.default_cols)
252	        select_mask = self.query.get_select_mask()

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./django/db/models/sql/compiler.py:273:28
272	                *(
273	                    (alias, RawSQL(*args))
274	                    for alias, args in self.query.extra_select.items()

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./django/db/models/sql/compiler.py:441:24
440	                    OrderBy(
441	                        RawSQL(
442	                            "%s.%s" % (self.quote_name_unless_alias(table), col), []
443	                        ),
444	                        descending=descending,

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./django/db/models/sql/compiler.py:454:37
453	                        OrderBy(
454	                            Ref(col, RawSQL(*self.query.extra[col])),
455	                            descending=descending,

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./django/db/models/sql/compiler.py:461:32
460	                    yield (
461	                        OrderBy(RawSQL(*self.query.extra[col]), descending=descending),
462	                        False,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/models/sql/compiler.py:646:27
645	            if not features.supports_parentheses_in_compound:
646	                part_sql = "SELECT * FROM ({})".format(part_sql)
647	            # Add parentheses when combining with compound query if not

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/models/sql/compiler.py:971:23
970	                        sub_params.extend(subparams)
971	                return "SELECT %s FROM (%s) subquery" % (
972	                    ", ".join(sub_selects),
973	                    " ".join(result),
974	                ), tuple(sub_params + params)
975	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/sql/compiler.py:1913:8
1912	    def execute_sql(self, returning_fields=None):
1913	        assert not (
1914	            returning_fields
1915	            and len(self.query.objs) != 1
1916	            and not self.connection.features.can_return_rows_from_bulk_insert
1917	        )
1918	        opts = self.query.get_meta()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/sql/compiler.py:1933:16
1932	            elif self.connection.features.can_return_columns_from_insert:
1933	                assert len(self.query.objs) == 1
1934	                rows = [

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/models/sql/compiler.py:1992:17
1991	    def _as_sql(self, query):
1992	        delete = "DELETE FROM %s" % self.quote_name_unless_alias(query.base_table)
1993	        try:

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./django/db/models/sql/compiler.py:2019:21
2018	            sql, params = innerq.get_compiler(connection=self.connection).as_sql()
2019	            innerq = RawSQL("SELECT * FROM (%s) subquery" % sql, params)
2020	        outerq.add_filter("pk__in", innerq)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/models/sql/compiler.py:2019:28
2018	            sql, params = innerq.get_compiler(connection=self.connection).as_sql()
2019	            innerq = RawSQL("SELECT * FROM (%s) subquery" % sql, params)
2020	        outerq.add_filter("pk__in", innerq)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./django/db/models/sql/compiler.py:2201:14
2200	        ).as_sql(with_col_aliases=True)
2201	        sql = "SELECT %s FROM (%s) subquery" % (sql, inner_query_sql)
2202	        params += inner_query_params

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/sql/query.py:942:12
941	            # Only the first alias (skipped above) should have None join_type
942	            assert self.alias_map[alias].join_type is not None
943	            parent_alias = self.alias_map[alias].parent_alias

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/sql/query.py:998:8
997	        # on their order in change_map.
998	        assert set(change_map).isdisjoint(change_map.values())
999	

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./django/db/models/sql/query.py:2514:38
2513	                        extra_names.append(f)
2514	                        selected[f] = RawSQL(*extra)
2515	                    elif f in self.annotation_select:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/sql/where.py:200:8
199	    def set_source_expressions(self, children):
200	        assert len(children) == len(self.children)
201	        self.children = children

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/db/models/utils.py:19:8
18	            model_tuple = model._meta.app_label, model._meta.model_name
19	        assert len(model_tuple) == 2
20	        return model_tuple

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/forms/utils.py:55:15
54	        context = context or self.get_context()
55	        return mark_safe(renderer.render(template, context))
56	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/forms/utils.py:55:15
54	        context = context or self.get_context()
55	        return mark_safe(renderer.render(template, context))
56	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/forms/widgets.py:145:15
144	    def render(self):
145	        return mark_safe(
146	            "\n".join(
147	                chain.from_iterable(
148	                    getattr(self, "render_" + name)() for name in MEDIA_TYPES
149	                )
150	            )
151	        )
152	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/forms/widgets.py:145:15
144	    def render(self):
145	        return mark_safe(
146	            "\n".join(
147	                chain.from_iterable(
148	                    getattr(self, "render_" + name)() for name in MEDIA_TYPES
149	                )
150	            )
151	        )
152	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/forms/widgets.py:335:15
334	            renderer = get_default_renderer()
335	        return mark_safe(renderer.render(template_name, context))
336	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/forms/widgets.py:335:15
334	            renderer = get_default_renderer()
335	        return mark_safe(renderer.render(template_name, context))
336	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/http/multipartparser.py:455:16
454	            while remaining != 0:
455	                assert remaining > 0, "remaining bytes to read should never go negative"
456	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b110_try_except_pass.html
   Location: ./django/http/response.py:331:12
330	                closer()
331	            except Exception:
332	                pass
333	        # Free resources that were still referenced.

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b110_try_except_pass.html
   Location: ./django/http/response.py:406:16
405	                    value.close()
406	                except Exception:
407	                    pass
408	        else:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'CSRF token missing.'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/middleware/csrf.py:33:28
32	REASON_NO_CSRF_COOKIE = "CSRF cookie not set."
33	REASON_CSRF_TOKEN_MISSING = "CSRF token missing."
34	REASON_MALFORMED_REFERER = "Referer checking failed - Referer is malformed."

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/middleware/csrf.py:156:4
155	        request_csrf_token = _unmask_cipher_token(request_csrf_token)
156	    assert len(request_csrf_token) == CSRF_SECRET_LENGTH
157	    return constant_time_compare(request_csrf_token, csrf_secret)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'POST'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/middleware/csrf.py:343:27
342	    def _bad_token_message(self, reason, token_source):
343	        if token_source != "POST":
344	            # Assume it is a settings.CSRF_HEADER_NAME value.

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/middleware/csrf.py:365:29
364	        # Check non-cookie token for match.
365	        request_csrf_token = ""
366	        if request.method == "POST":

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/middleware/csrf.py:376:33
375	
376	        if request_csrf_token == "":
377	            # Fall back to X-CSRFToken, to make things easier for AJAX, and

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'POST'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/middleware/csrf.py:389:27
388	        else:
389	            token_source = "POST"
390	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/template/base.py:396:16
395	                # BLOCK_TAG_START was handled above.
396	                assert token_start == COMMENT_TAG_START
397	                return Token(TokenType.COMMENT, content, position, lineno)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/base.py:741:36
740	                if not lookup:
741	                    arg_vals.append(mark_safe(arg))
742	                else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/base.py:741:36
740	                if not lookup:
741	                    arg_vals.append(mark_safe(arg))
742	                else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/base.py:751:22
750	            if getattr(func, "is_safe", False) and isinstance(obj, SafeData):
751	                obj = mark_safe(new_obj)
752	            else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/base.py:751:22
750	            if getattr(func, "is_safe", False) and isinstance(obj, SafeData):
751	                obj = mark_safe(new_obj)
752	            else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/base.py:839:31
838	            try:
839	                self.literal = mark_safe(unescape_string_literal(var))
840	            except ValueError:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/base.py:839:31
838	            try:
839	                self.literal = mark_safe(unescape_string_literal(var))
840	            except ValueError:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/base.py:861:20
860	            msgid = value.replace("%", "%%")
861	            msgid = mark_safe(msgid) if is_safe else msgid
862	            if self.message_context:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/base.py:861:20
860	            msgid = value.replace("%", "%%")
861	            msgid = mark_safe(msgid) if is_safe else msgid
862	            if self.message_context:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/base.py:1016:15
1015	    def render(self, context):
1016	        return SafeString("".join([node.render_annotated(context) for node in self]))
1017	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:49:21
48	        if isinstance(first, SafeData) and getattr(unwrap(func), "is_safe", False):
49	            result = mark_safe(result)
50	        return result

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:49:21
48	        if isinstance(first, SafeData) and getattr(unwrap(func), "is_safe", False):
49	            result = mark_safe(result)
50	        return result

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:184:15
183	    if not m and p <= 0:
184	        return mark_safe(
185	            formats.number_format(
186	                "%d" % (int(d)),
187	                0,
188	                use_l10n=use_l10n,
189	                force_grouping=force_grouping,
190	            )
191	        )
192	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:184:15
183	    if not m and p <= 0:
184	        return mark_safe(
185	            formats.number_format(
186	                "%d" % (int(d)),
187	                0,
188	                use_l10n=use_l10n,
189	                force_grouping=force_grouping,
190	            )
191	        )
192	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:212:11
211	    number = "".join(reversed(digits))
212	    return mark_safe(
213	        formats.number_format(
214	            number,
215	            abs(p),
216	            use_l10n=use_l10n,
217	            force_grouping=force_grouping,
218	        )
219	    )
220	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:212:11
211	    number = "".join(reversed(digits))
212	    return mark_safe(
213	        formats.number_format(
214	            number,
215	            abs(p),
216	            use_l10n=use_l10n,
217	            force_grouping=force_grouping,
218	        )
219	    )
220	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:243:11
242	            lines[i] = ("%0" + width + "d. %s") % (i + 1, escape(line))
243	    return mark_safe("\n".join(lines))
244	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:243:11
242	            lines[i] = ("%0" + width + "d. %s") % (i + 1, escape(line))
243	    return mark_safe("\n".join(lines))
244	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:384:11
383	    """Convert URLs in plain text into clickable links."""
384	    return mark_safe(_urlize(value, nofollow=True, autoescape=autoescape))
385	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:384:11
383	    """Convert URLs in plain text into clickable links."""
384	    return mark_safe(_urlize(value, nofollow=True, autoescape=autoescape))
385	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:396:11
395	    """
396	    return mark_safe(
397	        _urlize(value, trim_url_limit=int(limit), nofollow=True, autoescape=autoescape)
398	    )
399	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:396:11
395	    """
396	    return mark_safe(
397	        _urlize(value, trim_url_limit=int(limit), nofollow=True, autoescape=autoescape)
398	    )
399	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:443:15
442	    if safe and arg != ";":
443	        return mark_safe(value)
444	    return value

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:443:15
442	    if safe and arg != ";":
443	        return mark_safe(value)
444	    return value

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:489:11
488	    autoescape = autoescape and not isinstance(value, SafeData)
489	    return mark_safe(linebreaks(value, autoescape))
490	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:489:11
488	    autoescape = autoescape and not isinstance(value, SafeData)
489	    return mark_safe(linebreaks(value, autoescape))
490	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:503:11
502	        value = escape(value)
503	    return mark_safe(value.replace("\n", "<br>"))
504	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:503:11
502	        value = escape(value)
503	    return mark_safe(value.replace("\n", "<br>"))
504	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:510:11
509	    """Mark the value as a string that should not be auto-escaped."""
510	    return mark_safe(value)
511	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:510:11
509	    """Mark the value as a string that should not be auto-escaped."""
510	    return mark_safe(value)
511	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:520:12
519	    """
520	    return [mark_safe(obj) for obj in value]
521	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:520:12
519	    """
520	    return [mark_safe(obj) for obj in value]
521	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:616:11
615	        return value
616	    return mark_safe(data)
617	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:616:11
615	        return value
616	    return mark_safe(data)
617	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./django/template/defaultfilters.py:641:15
640	    try:
641	        return random_module.choice(value)
642	    except IndexError:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaultfilters.py:732:11
731	
732	    return mark_safe(list_formatter(value))
733	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaultfilters.py:732:11
731	
732	    return mark_safe(list_formatter(value))
733	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaulttags.py:58:19
57	        if self.setting:
58	            return mark_safe(output)
59	        else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaulttags.py:58:19
57	        if self.setting:
58	            return mark_safe(output)
59	        else:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'NOTPROVIDED'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/template/defaulttags.py:76:29
75	        if csrf_token:
76	            if csrf_token == "NOTPROVIDED":
77	                return format_html("")

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/defaulttags.py:253:15
252	                    context.pop()
253	        return mark_safe("".join(nodelist))
254	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/defaulttags.py:253:15
252	                    context.pop()
253	        return mark_safe("".join(nodelist))
254	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/template/loader_tags.py:81:19
80	        ):
81	            return mark_safe(self.render(self.context))
82	        return ""

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/template/loader_tags.py:81:19
80	        ):
81	            return mark_safe(self.render(self.context))
82	        return ""

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b324_hashlib.html
   Location: ./django/template/loaders/cached.py:96:15
95	    def generate_hash(self, values):
96	        return hashlib.sha1("|".join(values).encode()).hexdigest()
97	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'is'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/template/smartif.py:165:24
164	            token = tokens[i]
165	            if token == "is" and i + 1 < num_tokens and tokens[i + 1] == "not":
166	                token = "is not"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'is not'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/template/smartif.py:166:24
165	            if token == "is" and i + 1 < num_tokens and tokens[i + 1] == "not":
166	                token = "is not"
167	                i += 1  # skip 'not'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'not'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/template/smartif.py:168:26
167	                i += 1  # skip 'not'
168	            elif token == "not" and i + 1 < num_tokens and tokens[i + 1] == "in":
169	                token = "not in"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'not in'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./django/template/smartif.py:169:24
168	            elif token == "not" and i + 1 < num_tokens and tokens[i + 1] == "in":
169	                token = "not in"
170	                i += 1  # skip 'in'

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/templatetags/i18n.py:96:16
95	        value = value.replace("%%", "%")
96	        value = mark_safe(value) if is_safe else value
97	        if self.asvar:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/templatetags/i18n.py:96:16
95	        value = value.replace("%%", "%")
96	        value = mark_safe(value) if is_safe else value
97	        if self.asvar:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/templatetags/i18n.py:201:34
200	        if self.asvar:
201	            context[self.asvar] = SafeString(result)
202	            return ""

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/test/client.py:92:8
91	            size = self.__len
92	        assert (
93	            self.__len >= size
94	        ), "Cannot read more than the available bytes from the HTTP incoming data."
95	        content = self.__content.read(size)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/test/client.py:105:8
104	            size = self.__len
105	        assert (
106	            self.__len >= size
107	        ), "Cannot read more than the available bytes from the HTTP incoming data."
108	        content = self.__content.readline(size)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./django/test/runner.py:10:0
9	import os
10	import pickle
11	import random

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./django/test/runner.py:185:8
184	        """
185	        pickle.loads(pickle.dumps(obj))
186	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./django/test/runner.py:621:19
620	            # Limit seeds to 10 digits for simpler output.
621	            seed = random.randint(0, 10**10 - 1)
622	            seed_source = "generated"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/test/runner.py:903:16
902	            if os.path.exists(label_as_path):
903	                assert tests is None
904	                raise RuntimeError(

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: ./django/test/selenium.py:45:71
44	            # Listen on an external interface if using a selenium hub.
45	            host = test_class.host if not test_class.selenium_hub else "0.0.0.0"
46	            test_class.host = host

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./django/test/testcases.py:4:0
3	import logging
4	import pickle
5	import posixpath

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./django/test/testcases.py:86:8
85	    try:
86	        pickle.loads(pickle.dumps(obj))
87	    except (AttributeError, TypeError, pickle.PickleError):

--------------------------------------------------
>> Issue: [B408:blacklist] Using Node to parse untrusted XML data is known to be vulnerable to XML attacks. Replace Node with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: ./django/test/utils.py:15:0
14	from unittest import TestCase, skipIf, skipUnless
15	from xml.dom.minidom import Node, parseString
16	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/test/utils.py:561:12
560	            # Hack used when instantiating from SimpleTestCase.setUpClass.
561	            assert not kwargs
562	            self.operations = args[0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/test/utils.py:564:12
563	        else:
564	            assert not args
565	            self.operations = list(kwargs.items())

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./django/test/utils.py:696:27
695	    # Parse the want and got strings, and compare the parsings.
696	    want_root = first_node(parseString(want))
697	    got_root = first_node(parseString(got))

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./django/test/utils.py:697:26
696	    want_root = first_node(parseString(want))
697	    got_root = first_node(parseString(got))
698	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with PicklingError module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./django/urls/resolvers.py:14:0
13	from importlib import import_module
14	from pickle import PicklingError
15	from urllib.parse import quote

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./django/utils/autoreload.py:5:0
4	import signal
5	import subprocess
6	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./django/utils/autoreload.py:274:12
273	    while True:
274	        p = subprocess.run(args, env=new_environ, close_fds=False)
275	        if p.returncode != 3:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b110_try_except_pass.html
   Location: ./django/utils/autoreload.py:338:8
337	            get_resolver().urlconf_module
338	        except Exception:
339	            # Loading the urlconf can result in errors during development.
340	            # If this occurs then swallow the error and continue.
341	            pass
342	        logger.debug("Apps ready_event triggered. Sending autoreload_started signal.")

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/html.py:55:11
54	    """
55	    return SafeString(html.escape(str(text)))
56	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/html.py:80:11
79	    """Hex encode characters for use in JavaScript strings."""
80	    return mark_safe(str(value).translate(_js_escapes))
81	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/html.py:80:11
79	    """Hex encode characters for use in JavaScript strings."""
80	    return mark_safe(str(value).translate(_js_escapes))
81	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/html.py:103:28
102	        template = '<script id="{}" type="application/json">{}</script>'
103	        args = (element_id, mark_safe(json_str))
104	    else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/html.py:103:28
102	        template = '<script id="{}" type="application/json">{}</script>'
103	        args = (element_id, mark_safe(json_str))
104	    else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/html.py:106:16
105	        template = '<script type="application/json">{}</script>'
106	        args = (mark_safe(json_str),)
107	    return format_html(template, *args)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/html.py:106:16
105	        template = '<script type="application/json">{}</script>'
106	        args = (mark_safe(json_str),)
107	    return format_html(template, *args)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/html.py:135:11
134	    kwargs_safe = {k: conditional_escape(v) for (k, v) in kwargs.items()}
135	    return mark_safe(format_string.format(*args_safe, **kwargs_safe))
136	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/html.py:135:11
134	    kwargs_safe = {k: conditional_escape(v) for (k, v) in kwargs.items()}
135	    return mark_safe(format_string.format(*args_safe, **kwargs_safe))
136	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/html.py:152:11
151	    """
152	    return mark_safe(
153	        conditional_escape(sep).join(
154	            (
155	                format_html(format_string, **args)
156	                if isinstance(args, Mapping)
157	                else format_html(format_string, *args)
158	            )
159	            for args in args_generator
160	        )
161	    )
162	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/html.py:152:11
151	    """
152	    return mark_safe(
153	        conditional_escape(sep).join(
154	            (
155	                format_html(format_string, **args)
156	                if isinstance(args, Mapping)
157	                else format_html(format_string, *args)
158	            )
159	            for args in args_generator
160	        )
161	    )
162	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/html.py:366:23
365	                )
366	                return mark_safe(f"{lead}{middle}{trail}")
367	            else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/html.py:366:23
365	                )
366	                return mark_safe(f"{lead}{middle}{trail}")
367	            else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/html.py:369:27
368	                if safe_input:
369	                    return mark_safe(word)
370	                elif autoescape:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/html.py:369:27
368	                if safe_input:
369	                    return mark_safe(word)
370	                elif autoescape:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/html.py:373:19
372	        elif safe_input:
373	            return mark_safe(word)
374	        elif autoescape:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/html.py:373:19
372	        elif safe_input:
373	            return mark_safe(word)
374	        elif autoescape:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/html.py:496:33
495	    klass_str = klass.__str__
496	    klass.__str__ = lambda self: mark_safe(klass_str(self))
497	    klass.__html__ = lambda self: str(self)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/html.py:496:33
495	    klass_str = klass.__str__
496	    klass.__str__ = lambda self: mark_safe(klass_str(self))
497	    klass.__html__ = lambda self: str(self)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b110_try_except_pass.html
   Location: ./django/utils/http.py:143:4
142	        return parse_http_date(date)
143	    except Exception:
144	        pass
145	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./django/utils/lorem_ipsum.py:235:38
234	    sections = [
235	        " ".join(random.sample(WORDS, random.randint(3, 12)))
236	        for i in range(random.randint(1, 5))

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./django/utils/lorem_ipsum.py:236:23
235	        " ".join(random.sample(WORDS, random.randint(3, 12)))
236	        for i in range(random.randint(1, 5))
237	    ]

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./django/utils/lorem_ipsum.py:240:44
239	    # Convert to sentence case and add end punctuation.
240	    return "%s%s%s" % (s[0].upper(), s[1:], random.choice("?."))
241	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./django/utils/lorem_ipsum.py:249:46
248	    """
249	    return " ".join(sentence() for i in range(random.randint(1, 4)))
250	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/numberformat.py:29:15
28	    if number is None or number == "":
29	        return mark_safe(number)
30	    if use_l10n is None:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/numberformat.py:29:15
28	    if number is None or number == "":
29	        return mark_safe(number)
30	    if use_l10n is None:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/numberformat.py:37:15
36	    if isinstance(number, int) and not use_grouping and not decimal_pos:
37	        return mark_safe(number)
38	    # sign

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/numberformat.py:37:15
36	    if isinstance(number, int) and not use_grouping and not decimal_pos:
37	        return mark_safe(number)
38	    # sign

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/utils/regex_helper.py:351:12
350	        else:
351	            assert not flags, "flags must be empty if regex is passed pre-compiled"
352	            return regex

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/translation/trans_real.py:389:15
388	    if isinstance(message, SafeData):
389	        return mark_safe(result)
390	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/translation/trans_real.py:389:15
388	    if isinstance(message, SafeData):
389	        return mark_safe(result)
390	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./django/utils/translation/trans_real.py:401:17
400	    elif isinstance(message, SafeData):
401	        result = mark_safe(result)
402	    return result

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./django/utils/translation/trans_real.py:401:17
400	    elif isinstance(message, SafeData):
401	        result = mark_safe(result)
402	    return result

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./django/utils/version.py:4:0
3	import os
4	import subprocess
5	import sys

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/utils/version.py:64:8
63	    else:
64	        assert len(version) == 5
65	        assert version[3] in ("alpha", "beta", "rc", "final")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./django/utils/version.py:65:8
64	        assert len(version) == 5
65	        assert version[3] in ("alpha", "beta", "rc", "final")
66	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html
   Location: ./django/utils/version.py:91:14
90	    repo_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
91	    git_log = subprocess.run(
92	        "git log --pretty=format:%ct --quiet -1 HEAD",
93	        capture_output=True,
94	        shell=True,
95	        cwd=repo_dir,
96	        text=True,
97	    )
98	    timestamp = git_log.stdout

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: ./django/utils/version.py:94:14
93	        capture_output=True,
94	        shell=True,
95	        cwd=repo_dir,
96	        text=True,
97	    )
98	    timestamp = git_log.stdout
99	    tz = datetime.UTC
100	    try:
101	        timestamp = datetime.datetime.fromtimestamp(int(timestamp), tz=tz)

--------------------------------------------------
>> Issue: [B406:blacklist] Using XMLGenerator to parse untrusted XML data is known to be vulnerable to XML attacks. Replace XMLGenerator with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: ./django/utils/xmlutils.py:6:0
5	import re
6	from xml.sax.saxutils import XMLGenerator
7	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'make'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./docs/_ext/djangodocs.py:320:30
319	                    changed = True
320	                elif token == "make":
321	                    token = "make.bat"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'make.bat'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./docs/_ext/djangodocs.py:321:28
320	                elif token == "make":
321	                    token = "make.bat"
322	                    changed = True

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./scripts/manage_translations.py:26:0
25	from datetime import datetime
26	from subprocess import run
27	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./scripts/manage_translations.py:52:4
51	
52	    assert api_token, "Please define the TRANSIFEX_API_TOKEN env var."
53	    headers = {"Authorization": f"Bearer {api_token}"}

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Call to requests without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b113_request_without_timeout.html
   Location: ./scripts/manage_translations.py:60:15
59	
60	    response = requests.get(resources_url, headers=headers, params=base_params)
61	    assert response.ok, response.content

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./scripts/manage_translations.py:61:4
60	    response = requests.get(resources_url, headers=headers, params=base_params)
61	    assert response.ok, response.content
62	    data = response.json()["data"]

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Call to requests without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b113_request_without_timeout.html
   Location: ./scripts/manage_translations.py:71:16
70	        params.update({"filter[resource]": resource_id})
71	        stats = requests.get(resource_stats_url, headers=headers, params=params)
72	        stats_data = stats.json()["data"]

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: ./scripts/manage_translations.py:156:8
155	        capture_output=True,
156	        shell=True,
157	    )
158	    num_changes = int(p.stdout.strip())
159	    print("%d changed/added messages in '%s' catalog." % (num_changes, cat_name))
160	
161	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html
   Location: ./scripts/manage_translations.py:204:16
203	            )
204	            p = run(
205	                ["msgfmt", "-vc", "-o", "/dev/null", po_path],
206	                capture_output=True,
207	                env={"LANG": "C"},
208	                encoding="utf-8",
209	            )
210	            if p.returncode == 0:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/manage_translations.py:204:16
203	            )
204	            p = run(
205	                ["msgfmt", "-vc", "-o", "/dev/null", po_path],
206	                capture_output=True,
207	                env={"LANG": "C"},
208	                encoding="utf-8",
209	            )
210	            if p.returncode == 0:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/manage_translations.py:238:12
237	        if languages is None:
238	            run(cmd + ["--all"])
239	            target_langs = sorted(

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/manage_translations.py:244:16
243	            for lang in languages:
244	                run(cmd + ["-l", lang])
245	            target_langs = languages

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html
   Location: ./scripts/manage_translations.py:262:12
261	                continue
262	            run(["msgcat", "--no-location", "-o", po_path, po_path])
263	            msgfmt = run(["msgfmt", "-c", "-o", "%s.mo" % po_path[:-3], po_path])

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/manage_translations.py:262:12
261	                continue
262	            run(["msgcat", "--no-location", "-o", po_path, po_path])
263	            msgfmt = run(["msgfmt", "-c", "-o", "%s.mo" % po_path[:-3], po_path])

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html
   Location: ./scripts/manage_translations.py:263:21
262	            run(["msgcat", "--no-location", "-o", po_path, po_path])
263	            msgfmt = run(["msgfmt", "-c", "-o", "%s.mo" % po_path[:-3], po_path])
264	            if msgfmt.returncode != 0:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/manage_translations.py:263:21
262	            run(["msgcat", "--no-location", "-o", po_path, po_path])
263	            msgfmt = run(["msgfmt", "-c", "-o", "%s.mo" % po_path[:-3], po_path])
264	            if msgfmt.returncode != 0:

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b307-eval
   Location: ./scripts/manage_translations.py:360:4
359	    cmd = kwargs.pop("cmd")
360	    eval(cmd)(**kwargs)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'xxx'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/test_date_hierarchy.py:18:24
17	    def setUpTestData(cls):
18	        cls.superuser = User.objects.create_superuser(
19	            username="super", email="a@b.com", password="xxx"
20	        )
21	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'xxx'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:96:24
95	    def setUpTestData(cls):
96	        cls.superuser = User.objects.create_superuser(
97	            username="super", email="a@b.com", password="xxx"
98	        )
99	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'xxx'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:101:15
100	    def _create_superuser(self, username):
101	        return User.objects.create_superuser(
102	            username=username, email="a@b.com", password="xxx"
103	        )
104	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:1846:15
1845	        """{% get_admin_log %} works without specifying a user."""
1846	        user = User(username="jondoe", password="secret", email="super@example.com")
1847	        user.save()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:1887:8
1886	    def setUp(self):
1887	        User.objects.create_superuser(username="super", password="secret", email=None)
1888	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:1895:8
1894	
1895	        self.admin_login(username="super", password="secret")
1896	        self.selenium.get(self.live_server_url + reverse("admin:auth_user_changelist"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:1943:8
1942	        Parent.objects.bulk_create([Parent(name="parent%d" % i) for i in range(5)])
1943	        self.admin_login(username="super", password="secret")
1944	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:1965:8
1964	
1965	        self.admin_login(username="super", password="secret")
1966	        self.selenium.get(self.live_server_url + reverse("admin:auth_user_changelist"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:2001:8
2000	        Parent.objects.bulk_create([Parent(name="parent%d" % i) for i in range(101)])
2001	        self.admin_login(username="super", password="secret")
2002	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:2060:8
2059	
2060	        self.admin_login(username="super", password="secret")
2061	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:2086:8
2085	
2086	        self.admin_login(username="super", password="secret")
2087	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:2115:8
2114	
2115	        self.admin_login(username="super", password="secret")
2116	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:2138:8
2137	
2138	        self.admin_login(username="super", password="secret")
2139	        self.selenium.get(self.live_server_url + reverse("admin:auth_user_changelist"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:2190:8
2189	
2190	        self.admin_login(username="super", password="secret")
2191	        changelist_url = reverse("admin:admin_changelist_proxyuser_changelist")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_changelist/tests.py:2217:8
2216	
2217	        self.admin_login(username="super", password="secret")
2218	        changelist_url = reverse("admin:admin_changelist_grandchild_changelist")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_custom_urls/tests.py:24:24
23	    def setUpTestData(cls):
24	        cls.superuser = User.objects.create_superuser(
25	            username="super", password="secret", email="super@example.com"
26	        )
27	        Action.objects.create(name="delete", description="Remove things.")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_docs/test_views.py:494:21
493	        )
494	        staff_user = User.objects.create_user(
495	            username="staff", password="secret", is_staff=True
496	        )
497	        self.client.force_login(staff_user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_docs/test_views.py:543:21
542	    def test_model_index_with_model_permission(self):
543	        staff_user = User.objects.create_user(
544	            username="staff", password="secret", is_staff=True
545	        )
546	        self.client.force_login(staff_user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_docs/tests.py:8:24
7	    def setUpTestData(cls):
8	        cls.superuser = User.objects.create_superuser(
9	            username="super", password="secret", email="super@example.com"
10	        )
11	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/admin_inlines/models.py:60:22
59	        while not self.rand_pk:
60	            test_pk = random.randint(1, 99999)
61	            if not NonAutoPKBook.objects.filter(rand_pk=test_pk).exists():

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:60:24
59	    def setUpTestData(cls):
60	        cls.superuser = User.objects.create_superuser(
61	            username="super", email="super@example.com", password="secret"
62	        )
63	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:79:29
78	
79	        cls.view_only_user = User.objects.create_user(
80	            username="user",
81	            password="pwd",
82	            is_staff=True,
83	        )
84	        parent_ct = ContentType.objects.get_for_model(SomeParentModel)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:1393:19
1392	    def setUpTestData(cls):
1393	        cls.user = User.objects.create_user(
1394	            "testing", password="password", is_staff=True
1395	        )
1396	        cls.user.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:1881:8
1880	    def setUp(self):
1881	        User.objects.create_superuser(
1882	            username="super", password="secret", email="super@example.com"
1883	        )
1884	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:1892:8
1891	
1892	        self.admin_login(username="super", password="secret")
1893	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:1911:8
1910	
1911	        self.admin_login(username="super", password="secret")
1912	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:1939:8
1938	
1939	        self.admin_login(username="super", password="secret")
1940	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2005:8
2004	
2005	        self.admin_login(username="super", password="secret")
2006	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2076:8
2075	
2076	        self.admin_login(username="super", password="secret")
2077	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2161:15
2160	
2161	        user = User.objects.create_user("testing", password="password", is_staff=True)
2162	        user.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2174:8
2173	        )
2174	        self.admin_login(username="testing", password="password")
2175	        poll = Poll.objects.create(name="Survey")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2185:8
2184	
2185	        self.admin_login(username="super", password="secret")
2186	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2243:8
2242	        # Collapsed inlines use details and summary elements.
2243	        self.admin_login(username="super", password="secret")
2244	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2270:8
2269	
2270	        self.admin_login(username="super", password="secret")
2271	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2318:8
2317	
2318	        self.admin_login(username="super", password="secret")
2319	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2361:8
2360	
2361	        self.admin_login(username="super", password="secret")
2362	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2407:8
2406	
2407	        self.admin_login(username="super", password="secret")
2408	        # Hide sidebar.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2465:8
2464	
2465	        self.admin_login(username="super", password="secret")
2466	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2502:15
2501	
2502	        user = User.objects.create_user("testing", password="password", is_staff=True)
2503	        et_permission = Permission.objects.filter(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_inlines/tests.py:2511:8
2510	        user.user_permissions.add(*et_permission, *s_permission)
2511	        self.admin_login(username="testing", password="password")
2512	        cf = ExtraTerrestrial.objects.create(name="test")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/admin_scripts/tests.py:12:0
11	import stat
12	import subprocess
13	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/admin_scripts/tests.py:139:12
138	
139	        p = subprocess.run(
140	            [sys.executable, *args],
141	            capture_output=True,
142	            cwd=self.test_dir,
143	            env=test_environ,
144	            text=True,
145	            umask=umask,
146	        )
147	        return p.stdout, p.stderr

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: ./tests/admin_scripts/tests.py:1678:32
1677	    def test_runner_custom_defaults(self):
1678	        self.cmd.default_addr = "0.0.0.0"
1679	        self.cmd.default_port = "5000"

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: ./tests/admin_scripts/tests.py:1681:34
1680	        call_command(self.cmd)
1681	        self.assertServerSettings("0.0.0.0", "5000")
1682	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_utils/test_logentry.py:20:19
19	    def setUpTestData(cls):
20	        cls.user = User.objects.create_superuser(
21	            username="super", password="secret", email="super@example.com"
22	        )
23	        cls.site = Site.objects.create(domain="example.org")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/admin_utils/tests.py:393:41
392	        class MyForm(forms.Form):
393	            text = forms.CharField(label=mark_safe("<i>text</i>"))
394	            cb = forms.BooleanField(label=mark_safe("<i>cb</i>"))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/admin_utils/tests.py:394:42
393	            text = forms.CharField(label=mark_safe("<i>text</i>"))
394	            cb = forms.BooleanField(label=mark_safe("<i>cb</i>"))
395	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/admin_views/admin.py:626:15
625	    def multiline_html(self, instance):
626	        return mark_safe("Multiline<br>\nhtml<br>\ncontent")
627	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'custom_admin/password_change_form.html'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/admin_views/customadmin.py:22:31
21	    password_change_form = forms.CustomAdminPasswordChangeForm
22	    password_change_template = "custom_admin/password_change_form.html"
23	    password_change_done_template = "custom_admin/password_change_done.html"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'custom_admin/password_change_done.html'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/admin_views/customadmin.py:23:36
22	    password_change_template = "custom_admin/password_change_form.html"
23	    password_change_done_template = "custom_admin/password_change_done.html"
24	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_actions.py:31:24
30	    def setUpTestData(cls):
31	        cls.superuser = User.objects.create_superuser(
32	            username="super", password="secret", email="super@example.com"
33	        )
34	        cls.s1 = ExternalSubscriber.objects.create(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_actions.py:505:19
504	        )
505	        cls.user = User.objects.create_user(
506	            username="user",
507	            password="secret",
508	            email="user@example.com",
509	            is_staff=True,
510	        )
511	        permission = Permission.objects.get(codename="change_subscriber")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_adminsite.py:41:17
40	    def setUpTestData(cls):
41	        cls.u1 = User.objects.create_superuser(
42	            username="super", password="secret", email="super@example.com"
43	        )
44	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_autocomplete_view.py:91:19
90	    def setUpTestData(cls):
91	        cls.user = User.objects.create_user(
92	            username="user",
93	            password="secret",
94	            email="user@example.com",
95	            is_staff=True,
96	        )
97	        super().setUpTestData()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_autocomplete_view.py:401:25
400	    def setUp(self):
401	        self.superuser = User.objects.create_superuser(
402	            username="super",
403	            password="secret",
404	            email="super@example.com",
405	        )
406	        self.admin_login(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_autocomplete_view.py:406:8
405	        )
406	        self.admin_login(
407	            username="super",
408	            password="secret",
409	            login_url=reverse("autocomplete_admin:index"),
410	        )
411	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_breadcrumbs.py:10:24
9	    def setUpTestData(cls):
10	        cls.superuser = User.objects.create_superuser(
11	            username="super",
12	            password="secret",
13	            email="super@example.com",
14	        )
15	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_forms.py:17:8
16	    def setUpTestData(cls):
17	        User.objects.create_user(
18	            username="inactive", password="password", is_active=False
19	        )
20	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_history_view.py:15:24
14	    def setUpTestData(cls):
15	        cls.superuser = User.objects.create_superuser(
16	            username="super",
17	            password="secret",
18	            email="super@example.com",
19	        )
20	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_history_view.py:58:25
57	    def setUp(self):
58	        self.superuser = User.objects.create_superuser(
59	            username="super",
60	            password="secret",
61	            email="super@example.com",
62	        )
63	        for i in range(1, 1101):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_history_view.py:71:8
70	            )
71	        self.admin_login(
72	            username="super",
73	            password="secret",
74	            login_url=reverse("admin:index"),
75	        )
76	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'something'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_multidb.py:51:33
50	            Router.target_db = db
51	            cls.superusers[db] = User.objects.create_superuser(
52	                username="admin",
53	                password="something",
54	                email="test@test.org",
55	            )
56	            b = Book(name="Test Book")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_multidb.py:199:15
198	        book = Book.objects.using("other").create(name="other book")
199	        user = User.objects.create_superuser(
200	            username="super", password="secret", email="super@example.com"
201	        )
202	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_nav_sidebar.py:34:24
33	    def setUpTestData(cls):
34	        cls.superuser = User.objects.create_superuser(
35	            username="super",
36	            password="secret",
37	            email="super@example.com",
38	        )
39	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_nav_sidebar.py:126:25
125	    def setUp(self):
126	        self.superuser = User.objects.create_superuser(
127	            username="super",
128	            password="secret",
129	            email="super@example.com",
130	        )
131	        self.admin_login(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_nav_sidebar.py:131:8
130	        )
131	        self.admin_login(
132	            username="super",
133	            password="secret",
134	            login_url=reverse("test_with_sidebar:index"),
135	        )
136	        self.selenium.execute_script(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_password_form.py:12:25
11	    def setUp(self):
12	        self.superuser = User.objects.create_superuser(
13	            username="super",
14	            password="secret",
15	            email="super@example.com",
16	        )
17	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_password_form.py:28:8
27	        user_add_url = reverse("auth_test_admin:auth_user_add")
28	        self.admin_login(username="super", password="secret")
29	        self.selenium.get(self.live_server_url + user_add_url)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'charles'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_password_form.py:75:15
74	
75	        user = User.objects.create_user(
76	            username="ada", password="charles", email="ada@example.com"
77	        )
78	        user_url = reverse("auth_test_admin:auth_user_password_change", args=(user.pk,))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_password_form.py:79:8
78	        user_url = reverse("auth_test_admin:auth_user_password_change", args=(user.pk,))
79	        self.admin_login(username="super", password="secret")
80	        self.selenium.get(self.live_server_url + user_url)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_related_object_lookups.py:14:25
13	    def setUp(self):
14	        self.superuser = User.objects.create_superuser(
15	            username="super", password="secret", email="super@example.com"
16	        )
17	        self.admin_login(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_related_object_lookups.py:17:8
16	        )
17	        self.admin_login(
18	            username="super", password="secret", login_url=reverse("admin:index")
19	        )
20	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_skip_link_to_content.py:12:25
11	    def setUp(self):
12	        self.superuser = User.objects.create_superuser(
13	            username="super",
14	            password="secret",
15	            email="super@example.com",
16	        )
17	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_skip_link_to_content.py:23:8
22	
23	        self.admin_login(
24	            username="super",
25	            password="secret",
26	            login_url=reverse("admin:index"),
27	        )
28	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_skip_link_to_content.py:74:8
73	
74	        self.admin_login(
75	            username="super",
76	            password="secret",
77	            login_url=reverse("admin:index"),
78	        )
79	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_skip_link_to_content.py:104:12
103	        with override_settings(LANGUAGE_CODE="ar"):
104	            self.admin_login(
105	                username="super",
106	                password="secret",
107	                login_url=reverse("admin:index"),
108	            )
109	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_templatetags.py:38:22
37	    def test_submit_row_save_as_new_add_permission_required(self):
38	        change_user = User.objects.create_user(
39	            username="change_user", password="secret", is_staff=True
40	        )
41	        change_user.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_templatetags.py:54:19
53	
54	        add_user = User.objects.create_user(
55	            username="add_user", password="secret", is_staff=True
56	        )
57	        add_user.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/test_templatetags.py:140:24
139	    def setUpTestData(cls):
140	        cls.superuser = User.objects.create_superuser(
141	            username="super", password="secret", email="super@example.com"
142	        )
143	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:193:24
192	    def setUpTestData(cls):
193	        cls.superuser = User.objects.create_superuser(
194	            username="super", password="secret", email="super@example.com"
195	        )
196	        cls.s1 = Section.objects.create(name="Test section")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:1526:19
1525	    def test_view_subtitle_per_object(self):
1526	        viewuser = User.objects.create_user(
1527	            username="viewuser",
1528	            password="secret",
1529	            is_staff=True,
1530	        )
1531	        viewuser.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:1892:24
1891	    def setUpTestData(cls):
1892	        cls.superuser = User.objects.create_superuser(
1893	            username="super", password="secret", email="super@example.com"
1894	        )
1895	        cls.s1 = Section.objects.create(name="Test section")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:1953:24
1952	    def setUpTestData(cls):
1953	        cls.superuser = User.objects.create_superuser(
1954	            username="super", password="secret", email="super@example.com"
1955	        )
1956	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:1984:24
1983	    def setUpTestData(cls):
1984	        cls.superuser = User.objects.create_superuser(
1985	            username="super", password="secret", email="super@example.com"
1986	        )
1987	        cls.per1 = Person.objects.create(name="John Mauchly", gender=1, alive=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:2197:24
2196	    def setUpTestData(cls):
2197	        cls.superuser = User.objects.create_superuser(
2198	            username="super", password="secret", email="super@example.com"
2199	        )
2200	        cls.viewuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:2200:23
2199	        )
2200	        cls.viewuser = User.objects.create_user(
2201	            username="viewuser", password="secret", is_staff=True
2202	        )
2203	        cls.adduser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:2203:22
2202	        )
2203	        cls.adduser = User.objects.create_user(
2204	            username="adduser", password="secret", is_staff=True
2205	        )
2206	        cls.changeuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:2206:25
2205	        )
2206	        cls.changeuser = User.objects.create_user(
2207	            username="changeuser", password="secret", is_staff=True
2208	        )
2209	        cls.deleteuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:2209:25
2208	        )
2209	        cls.deleteuser = User.objects.create_user(
2210	            username="deleteuser", password="secret", is_staff=True
2211	        )
2212	        cls.joepublicuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:2212:28
2211	        )
2212	        cls.joepublicuser = User.objects.create_user(
2213	            username="joepublic", password="secret"
2214	        )
2215	        cls.nostaffuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:2215:26
2214	        )
2215	        cls.nostaffuser = User.objects.create_user(
2216	            username="nostaff", password="secret"
2217	        )
2218	        cls.s1 = Section.objects.create(name="Test section")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:2343:19
2342	        self.assertContains(login, ERROR_MESSAGE)
2343	        new_user = User(username="jondoe", password="secret", email="super@example.com")
2344	        new_user.save()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:3442:23
3441	    def setUpTestData(cls):
3442	        cls.viewuser = User.objects.create_user(
3443	            username="viewuser", password="secret", is_staff=True
3444	        )
3445	        cls.adduser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:3445:22
3444	        )
3445	        cls.adduser = User.objects.create_user(
3446	            username="adduser", password="secret", is_staff=True
3447	        )
3448	        cls.changeuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:3448:25
3447	        )
3448	        cls.changeuser = User.objects.create_user(
3449	            username="changeuser", password="secret", is_staff=True
3450	        )
3451	        cls.deleteuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:3451:25
3450	        )
3451	        cls.deleteuser = User.objects.create_user(
3452	            username="deleteuser", password="secret", is_staff=True
3453	        )
3454	        # Setup permissions.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:3469:25
3468	        # UserProxy instances.
3469	        cls.user_proxy = UserProxy.objects.create(
3470	            username="user_proxy", password="secret"
3471	        )
3472	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:3529:25
3528	        # User who can change Reports
3529	        cls.changeuser = User.objects.create_user(
3530	            username="changeuser", password="secret", is_staff=True
3531	        )
3532	        cls.changeuser.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:3550:24
3549	    def setUpTestData(cls):
3550	        cls.superuser = User.objects.create_superuser(
3551	            username="super", password="secret", email="super@example.com"
3552	        )
3553	        cls.deleteuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:3553:25
3552	        )
3553	        cls.deleteuser = User.objects.create_user(
3554	            username="deleteuser", password="secret", is_staff=True
3555	        )
3556	        cls.s1 = Section.objects.create(name="Test section")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:3833:24
3832	    def setUpTestData(cls):
3833	        cls.superuser = User.objects.create_superuser(
3834	            username="super", password="secret", email="super@example.com"
3835	        )
3836	        cls.v1 = Villain.objects.create(name="Adam")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:3854:24
3853	    def setUpTestData(cls):
3854	        cls.superuser = User.objects.create_superuser(
3855	            username="super", password="secret", email="super@example.com"
3856	        )
3857	        cls.s1 = Section.objects.create(name="Test section")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:4116:24
4115	    def setUpTestData(cls):
4116	        cls.superuser = User.objects.create_superuser(
4117	            username="super", password="secret", email="super@example.com"
4118	        )
4119	        cls.b1 = Book.objects.create(name="Lærdommer")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:4211:24
4210	    def setUpTestData(cls):
4211	        cls.superuser = User.objects.create_superuser(
4212	            username="super", password="secret", email="super@example.com"
4213	        )
4214	        cls.s1 = Section.objects.create(name="Test section")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:4649:24
4648	    def setUpTestData(cls):
4649	        cls.superuser = User.objects.create_superuser(
4650	            username="super", password="secret", email="super@example.com"
4651	        )
4652	        cls.joepublicuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:4652:28
4651	        )
4652	        cls.joepublicuser = User.objects.create_user(
4653	            username="joepublic", password="secret"
4654	        )
4655	        cls.s1 = Section.objects.create(name="Test section")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:4825:24
4824	    def setUpTestData(cls):
4825	        cls.superuser = User.objects.create_superuser(
4826	            username="super", password="secret", email="super@example.com"
4827	        )
4828	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:4916:24
4915	    def setUpTestData(cls):
4916	        cls.superuser = User.objects.create_superuser(
4917	            username="super", password="secret", email="super@example.com"
4918	        )
4919	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:4942:24
4941	    def setUpTestData(cls):
4942	        cls.superuser = User.objects.create_superuser(
4943	            username="super", password="secret", email="super@example.com"
4944	        )
4945	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:4961:24
4960	    def setUpTestData(cls):
4961	        cls.superuser = User.objects.create_superuser(
4962	            username="super", password="secret", email="super@example.com"
4963	        )
4964	        cls.pks = [EmptyModel.objects.create().id for i in range(3)]

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:5263:24
5262	    def setUpTestData(cls):
5263	        cls.superuser = User.objects.create_superuser(
5264	            username="super", password="secret", email="super@example.com"
5265	        )
5266	        file1 = tempfile.NamedTemporaryFile(suffix=".file1")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:5316:24
5315	    def setUpTestData(cls):
5316	        cls.superuser = User.objects.create_superuser(
5317	            username="super", password="secret", email="super@example.com"
5318	        )
5319	        cls.collector = Collector.objects.create(pk=1, name="John Fowles")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:5642:24
5641	    def setUpTestData(cls):
5642	        cls.superuser = User.objects.create_superuser(
5643	            username="super", password="secret", email="super@example.com"
5644	        )
5645	        cls.s1 = Section.objects.create(name="Test section")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:5723:24
5722	    def setUpTestData(cls):
5723	        cls.superuser = User.objects.create_superuser(
5724	            username="super", password="secret", email="super@example.com"
5725	        )
5726	        cls.p1 = PrePopulatedPost.objects.create(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:5800:25
5799	    def setUp(self):
5800	        self.superuser = User.objects.create_superuser(
5801	            username="super", password="secret", email="super@example.com"
5802	        )
5803	        self.p1 = PrePopulatedPost.objects.create(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:5830:8
5829	
5830	        self.admin_login(
5831	            username="super", password="secret", login_url=reverse("admin:index")
5832	        )
5833	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6083:8
6082	        )
6083	        self.admin_login(
6084	            username="super", password="secret", login_url=reverse("admin:index")
6085	        )
6086	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6121:8
6120	
6121	        self.admin_login(
6122	            username="super", password="secret", login_url=reverse("admin:index")
6123	        )
6124	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6137:8
6136	
6137	        self.admin_login(
6138	            username="super",
6139	            password="secret",
6140	            login_url=reverse("admin7:index"),
6141	        )
6142	        url = self.live_server_url + reverse("admin7:admin_views_pizza_add")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6165:8
6164	
6165	        self.admin_login(
6166	            username="super",
6167	            password="secret",
6168	            login_url=reverse("admin7:index"),
6169	        )
6170	        url = self.live_server_url + reverse("admin7:admin_views_question_add")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6198:8
6197	
6198	        self.admin_login(
6199	            username="super", password="secret", login_url=reverse("admin:index")
6200	        )
6201	        # Create a new user to ensure that no extra permissions have been set.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'newuser'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6202:15
6201	        # Create a new user to ensure that no extra permissions have been set.
6202	        user = User.objects.create_user(username="new", password="newuser")
6203	        url = self.live_server_url + reverse("admin:auth_user_change", args=[user.id])

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6255:8
6254	        # First form field has a single widget
6255	        self.admin_login(
6256	            username="super", password="secret", login_url=reverse("admin:index")
6257	        )
6258	        with self.wait_page_loaded():

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6286:8
6285	        full_url = self.live_server_url + url
6286	        self.admin_login(
6287	            username="super", password="secret", login_url=reverse("admin:index")
6288	        )
6289	        self.selenium.get(full_url)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6311:8
6310	        full_url = self.live_server_url + url
6311	        self.admin_login(
6312	            username="super", password="secret", login_url=reverse("admin:index")
6313	        )
6314	        self.selenium.get(full_url)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6338:8
6337	        )
6338	        self.admin_login(
6339	            username="super", password="secret", login_url=reverse("admin:index")
6340	        )
6341	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6392:8
6391	        related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)
6392	        self.admin_login(
6393	            username="super", password="secret", login_url=reverse("admin:index")
6394	        )
6395	        change_url = reverse(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6416:8
6415	
6416	        self.admin_login(
6417	            username="super", password="secret", login_url=reverse("admin:index")
6418	        )
6419	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6441:8
6440	        related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)
6441	        self.admin_login(
6442	            username="super", password="secret", login_url=reverse("admin:index")
6443	        )
6444	        change_url = reverse(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6467:8
6466	        related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)
6467	        self.admin_login(
6468	            username="super", password="secret", login_url=reverse("admin:index")
6469	        )
6470	        change_url = reverse(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6489:8
6488	        RelatedWithUUIDPKModel.objects.create(parent=parent)
6489	        self.admin_login(
6490	            username="super", password="secret", login_url=reverse("admin:index")
6491	        )
6492	        change_url = reverse(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6543:8
6542	        Person.objects.create(name="Grace Hopper", gender=1, alive=False)
6543	        self.admin_login(
6544	            username="super", password="secret", login_url=reverse("admin:index")
6545	        )
6546	        person_url = reverse("admin:admin_views_person_changelist") + "?q=Gui"

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6566:8
6565	
6566	        self.admin_login(
6567	            username="super", password="secret", login_url=reverse("admin:index")
6568	        )
6569	        add_url = reverse("admin:admin_views_box_add", current_app=site.name)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6617:8
6616	
6617	        self.admin_login(
6618	            username="super", password="secret", login_url=reverse("admin:index")
6619	        )
6620	        add_url = reverse("admin:admin_views_box_add", current_app=site.name)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6651:8
6650	
6651	        self.admin_login(
6652	            username="super",
6653	            password="secret",
6654	            login_url=reverse("admin:index"),
6655	        )
6656	        self.selenium.get(self.live_server_url + reverse("admin:admin_views_story_add"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6682:8
6681	
6682	        self.admin_login(
6683	            username="super", password="secret", login_url=reverse("admin:index")
6684	        )
6685	        add_url = reverse("admin:admin_views_traveler_add")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6832:8
6831	
6832	        self.admin_login(
6833	            username="super", password="secret", login_url=reverse("admin:index")
6834	        )
6835	        add_url = reverse("admin7:admin_views_section_add")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6853:8
6852	
6853	        self.admin_login(
6854	            username="super", password="secret", login_url=reverse("admin:index")
6855	        )
6856	        add_url = reverse("admin7:admin_views_section_add")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6872:8
6871	
6872	        self.admin_login(
6873	            username="super", password="secret", login_url=reverse("admin:index")
6874	        )
6875	        s = Subscriber.objects.create(name="a " * 40, email="b " * 80)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:6891:24
6890	    def setUpTestData(cls):
6891	        cls.superuser = User.objects.create_superuser(
6892	            username="super", password="secret", email="super@example.com"
6893	        )
6894	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7168:24
7167	    def setUpTestData(cls):
7168	        cls.superuser = User.objects.create_superuser(
7169	            username="super", password="secret", email="super@example.com"
7170	        )
7171	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7195:24
7194	    def setUpTestData(cls):
7195	        cls.superuser = User.objects.create_superuser(
7196	            username="super", password="secret", email="super@example.com"
7197	        )
7198	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7291:24
7290	    def setUpTestData(cls):
7291	        cls.superuser = User.objects.create_superuser(
7292	            username="super", password="secret", email="super@example.com"
7293	        )
7294	        cls.adduser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7294:22
7293	        )
7294	        cls.adduser = User.objects.create_user(
7295	            username="adduser", password="secret", is_staff=True
7296	        )
7297	        cls.changeuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7297:25
7296	        )
7297	        cls.changeuser = User.objects.create_user(
7298	            username="changeuser", password="secret", is_staff=True
7299	        )
7300	        cls.s1 = Section.objects.create(name="Test section")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7518:24
7517	    def setUpTestData(cls):
7518	        cls.superuser = User.objects.create_superuser(
7519	            username="super", password="secret", email="super@example.com"
7520	        )
7521	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7553:24
7552	    def setUpTestData(cls):
7553	        cls.superuser = User.objects.create_superuser(
7554	            username="super", password="secret", email="super@example.com"
7555	        )
7556	        cls.s1 = Section.objects.create(name="Test section")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7701:24
7700	    def setUpTestData(cls):
7701	        cls.superuser = User.objects.create_superuser(
7702	            username="super", password="secret", email="super@example.com"
7703	        )
7704	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7790:24
7789	    def setUpTestData(cls):
7790	        cls.superuser = User.objects.create_superuser(
7791	            username="super", password="secret", email="super@example.com"
7792	        )
7793	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7808:24
7807	    def setUpTestData(cls):
7808	        cls.superuser = User.objects.create_superuser(
7809	            username="super", password="secret", email="super@example.com"
7810	        )
7811	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:7966:24
7965	    def setUpTestData(cls):
7966	        cls.superuser = User.objects.create_superuser(
7967	            username="super", password="secret", email="super@example.com"
7968	        )
7969	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8042:24
8041	    def setUpTestData(cls):
8042	        cls.superuser = User.objects.create_superuser(
8043	            username="super", password="secret", email="super@example.com"
8044	        )
8045	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8077:24
8076	    def setUpTestData(cls):
8077	        cls.superuser = User.objects.create_superuser(
8078	            username="super", password="secret", email="super@example.com"
8079	        )
8080	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8143:24
8142	    def setUpTestData(cls):
8143	        cls.superuser = User.objects.create_superuser(
8144	            username="super", password="secret", email="super@example.com"
8145	        )
8146	        cls.joepublicuser = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8146:28
8145	        )
8146	        cls.joepublicuser = User.objects.create_user(
8147	            username="joepublic", password="secret"
8148	        )
8149	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8349:19
8348	    def test_change_view_close_link(self):
8349	        viewuser = User.objects.create_user(
8350	            username="view", password="secret", is_staff=True
8351	        )
8352	        viewuser.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8449:24
8448	    def setUpTestData(cls):
8449	        cls.superuser = User.objects.create_superuser(
8450	            username="super", password="secret", email="super@example.com"
8451	        )
8452	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8495:24
8494	    def setUpTestData(cls):
8495	        cls.superuser = User.objects.create_superuser(
8496	            username="super", password="secret", email="super@example.com"
8497	        )
8498	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8697:24
8696	    def setUpTestData(cls):
8697	        cls.superuser = User.objects.create_superuser(
8698	            username="super", password="secret", email="super@example.com"
8699	        )
8700	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8764:24
8763	    def setUpTestData(cls):
8764	        cls.superuser = User.objects.create_superuser(
8765	            username="super", password="secret", email="super@example.com"
8766	        )
8767	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8814:25
8813	    def setUpTestData(cls):
8814	        cls.staff_user = User.objects.create_user(
8815	            username="staff",
8816	            password="secret",
8817	            email="staff@example.com",
8818	            is_staff=True,
8819	        )
8820	        cls.non_staff_user = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_views/tests.py:8820:29
8819	        )
8820	        cls.non_staff_user = User.objects.create_user(
8821	            username="user",
8822	            password="secret",
8823	            email="user@example.com",
8824	            is_staff=False,
8825	        )
8826	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:58:24
57	    def setUpTestData(cls):
58	        cls.superuser = User.objects.create_superuser(
59	            username="super", password="secret", email=None
60	        )
61	        cls.u2 = User.objects.create_user(username="testser", password="secret")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:61:17
60	        )
61	        cls.u2 = User.objects.create_user(username="testser", password="secret")
62	        Car.objects.create(owner=cls.superuser, make="Volkswagen", model="Passat")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:973:18
972	    def setUp(self):
973	        self.u1 = User.objects.create_superuser(
974	            username="super", password="secret", email="super@example.com"
975	        )
976	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:987:8
986	
987	        self.admin_login(username="super", password="secret", login_url="/")
988	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1059:8
1058	
1059	        self.admin_login(username="super", password="secret", login_url="/")
1060	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1086:8
1085	
1086	        self.admin_login(username="super", password="secret", login_url="/")
1087	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1115:8
1114	
1115	        self.admin_login(username="super", password="secret", login_url="/")
1116	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1140:8
1139	
1140	        self.admin_login(username="super", password="secret", login_url="/")
1141	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1192:8
1191	
1192	        self.admin_login(username="super", password="secret", login_url="/")
1193	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1536:12
1535	        with self.small_screen_size():
1536	            self.admin_login(username="super", password="secret", login_url="/")
1537	            self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1572:12
1571	        with self.small_screen_size():
1572	            self.admin_login(username="super", password="secret", login_url="/")
1573	            self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1692:8
1691	        self.school.alumni.set([self.lisa, self.peter])
1692	        self.admin_login(username="super", password="secret", login_url="/")
1693	        change_url = reverse(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1723:8
1722	
1723	        self.admin_login(username="super", password="secret", login_url="/")
1724	        change_url = reverse(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1750:8
1749	
1750	        self.admin_login(username="super", password="secret", login_url="/")
1751	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1787:8
1786	
1787	        self.admin_login(username="super", password="secret", login_url="/")
1788	        self.selenium.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1838:8
1837	
1838	        self.admin_login(username="super", password="secret", login_url="/")
1839	        with self.wait_page_loaded():

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/admin_widgets/tests.py:1923:8
1922	
1923	        self.admin_login(username="super", password="secret", login_url="/")
1924	        self.selenium.get(

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/aggregation_regress/tests.py:2:0
1	import datetime
2	import pickle
3	from decimal import Decimal

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/aggregation_regress/tests.py:257:13
256	        # subselect being (erroneously) added to the GROUP BY parameters
257	        qs = Publisher.objects.extra(
258	            select={
259	                "name_of_shortest_book": shortest_book_sql,
260	            }
261	        ).annotate(total_books=Count("book"))
262	        # force execution of the query

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/aggregation_regress/tests.py:1020:14
1019	        query = qs.query.get_compiler(qs.db).as_sql()[0]
1020	        qs2 = pickle.loads(pickle.dumps(qs))
1021	        self.assertEqual(

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./tests/annotations/tests.py:711:35
710	                    DepartmentStore.objects.annotate(
711	                        annotation=RawSQL(sql, ()),
712	                    ).values_list("annotation", flat=True),

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/async/test_async_auth.py:22:21
21	    async def test_aauthenticate(self):
22	        user = await aauthenticate(username="testuser", password="testpw")
23	        self.assertIsInstance(user, User)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/async/test_async_auth.py:27:32
26	        await user.asave()
27	        self.assertIsNone(await aauthenticate(username="testuser", password="testpw"))
28	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/async/test_async_auth.py:127:14
126	    async def test_alogout(self):
127	        await self.client.alogin(username="testuser", password="testpw")
128	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/async/test_async_auth.py:135:14
134	    async def test_client_alogout(self):
135	        await self.client.alogin(username="testuser", password="testpw")
136	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/async/test_async_auth.py:143:14
142	    async def test_change_password(self):
143	        await self.client.alogin(username="testuser", password="testpw")
144	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/async/test_async_auth.py:153:18
152	        self.assertEqual(
153	            await self.client.alogin(username="testuser", password=""), False
154	        )

--------------------------------------------------
>> Issue: [B405:blacklist] Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b405-import-xml-etree
   Location: ./tests/async/test_async_queryset.py:2:0
1	import json
2	import xml.etree.ElementTree
3	from datetime import datetime

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
   Location: ./tests/async/test_async_queryset.py:247:24
246	                    try:
247	                        xml.etree.ElementTree.fromstring(result)
248	                    except xml.etree.ElementTree.ParseError as e:

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'something'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_admin_multidb.py:40:33
39	            Router.target_db = db
40	            cls.superusers[db] = User.objects.create_superuser(
41	                username="admin",
42	                password="something",
43	                email="test@test.org",
44	            )
45	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:467:8
466	        username = getattr(self.user, self.UserModel.USERNAME_FIELD)
467	        authenticate(username=username, password="test")
468	        self.assertEqual(CountingMD5PasswordHasher.calls, 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:471:8
470	        CountingMD5PasswordHasher.calls = 0
471	        authenticate(username="no_such_user", password="test")
472	        self.assertEqual(CountingMD5PasswordHasher.calls, 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:485:14
484	        username = getattr(self.user, self.UserModel.USERNAME_FIELD)
485	        await aauthenticate(username=username, password="test")
486	        self.assertEqual(CountingMD5PasswordHasher.calls, 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:489:14
488	        CountingMD5PasswordHasher.calls = 0
489	        await aauthenticate(username="no_such_user", password="test")
490	        self.assertEqual(CountingMD5PasswordHasher.calls, 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:520:25
519	        )
520	        self.superuser = User.objects.create_superuser(
521	            username="test2",
522	            email="test2@example.com",
523	            password="test",
524	        )
525	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:549:15
548	        """
549	        user = CustomUserWithoutIsActiveField.objects._create_user(
550	            username="test",
551	            email="test@example.com",
552	            password="test",
553	        )
554	        self.assertEqual(authenticate(username="test", password="test"), user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:554:25
553	        )
554	        self.assertEqual(authenticate(username="test", password="test"), user)
555	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:561:21
560	        """
561	        user = await CustomUserWithoutIsActiveField.objects._acreate_user(
562	            username="test",
563	            email="test@example.com",
564	            password="test",
565	        )
566	        self.assertEqual(await aauthenticate(username="test", password="test"), user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:566:31
565	        )
566	        self.assertEqual(await aauthenticate(username="test", password="test"), user)
567	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:590:20
589	    def create_users(self):
590	        self.user = ExtensionUser._default_manager.create_user(
591	            username="test",
592	            email="test@example.com",
593	            password="test",
594	            date_of_birth=date(2006, 4, 25),
595	        )
596	        self.superuser = ExtensionUser._default_manager.create_superuser(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:596:25
595	        )
596	        self.superuser = ExtensionUser._default_manager.create_superuser(
597	            username="test2",
598	            email="test2@example.com",
599	            password="test",
600	            date_of_birth=date(1976, 11, 8),
601	        )
602	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:617:20
616	    def create_users(self):
617	        self.user = CustomPermissionsUser._default_manager.create_user(
618	            email="test@example.com", password="test", date_of_birth=date(2006, 4, 25)
619	        )
620	        self.superuser = CustomPermissionsUser._default_manager.create_superuser(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:620:25
619	        )
620	        self.superuser = CustomPermissionsUser._default_manager.create_superuser(
621	            email="test2@example.com", password="test", date_of_birth=date(1976, 11, 8)
622	        )
623	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:633:20
632	    def test_authenticate(self):
633	        test_user = CustomUser._default_manager.create_user(
634	            email="test@example.com", password="test", date_of_birth=date(2006, 4, 25)
635	        )
636	        authenticated_user = authenticate(email="test@example.com", password="test")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:636:29
635	        )
636	        authenticated_user = authenticate(email="test@example.com", password="test")
637	        self.assertEqual(test_user, authenticated_user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:640:26
639	    async def test_aauthenticate(self):
640	        test_user = await CustomUser._default_manager.acreate_user(
641	            email="test@example.com", password="test", date_of_birth=date(2006, 4, 25)
642	        )
643	        authenticated_user = await aauthenticate(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:643:35
642	        )
643	        authenticated_user = await aauthenticate(
644	            email="test@example.com", password="test"
645	        )
646	        self.assertEqual(test_user, authenticated_user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:655:15
654	        """
655	        user = UUIDUser.objects.create_user(username="uuid", password="test")
656	        self.assertTrue(self.client.login(username="uuid", password="test"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:656:24
655	        user = UUIDUser.objects.create_user(username="uuid", password="test")
656	        self.assertTrue(self.client.login(username="uuid", password="test"))
657	        self.assertEqual(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:663:21
662	        """See test_login()"""
663	        user = await UUIDUser.objects.acreate_user(username="uuid", password="test")
664	        self.assertTrue(await self.client.alogin(username="uuid", password="test"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:664:30
663	        user = await UUIDUser.objects.acreate_user(username="uuid", password="test")
664	        self.assertTrue(await self.client.alogin(username="uuid", password="test"))
665	        session_key = await self.client.session.aget(SESSION_KEY)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:924:26
923	        "user is not authenticated after a backend raises permission denied #2550"
924	        self.assertIsNone(authenticate(username="test", password="test"))
925	        # user_login_failed signal is sent.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:933:32
932	    async def test_aauthenticate_permission_denied(self):
933	        self.assertIsNone(await aauthenticate(username="test", password="test"))
934	        # user_login_failed signal is sent.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:942:25
941	    def test_authenticates(self):
942	        self.assertEqual(authenticate(username="test", password="test"), self.user1)
943	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:947:18
946	        self.assertEqual(
947	            await aauthenticate(username="test", password="test"), self.user1
948	        )

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_auth_backends.py:1007:20
1006	    TEST_USERNAME = "test_user"
1007	    TEST_PASSWORD = "test_password"
1008	    TEST_EMAIL = "test@example.com"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'mypassword'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_auth_backends.py:1084:34
1083	    def setUp(self):
1084	        self.sensitive_password = "mypassword"
1085	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:1092:12
1091	        with self.assertRaises(TypeError):
1092	            authenticate(username="test", password="test")
1093	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:1271:25
1270	        """
1271	        self.assertEqual(authenticate(username="test", password="test"), self.user1)
1272	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:1280:25
1279	    def test_skips_backends_with_decorated_method(self):
1280	        self.assertEqual(authenticate(username="test", password="test"), self.user1)
1281	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_auth_backends.py:1294:8
1293	    def setUp(self):
1294	        self.client.login(username="test", password="test")
1295	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_auth_backends.py:1333:19
1332	        username = "username"
1333	        password = "password"
1334	        User.objects.create_user(username, "email", password)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_auth_backends.py:1345:15
1344	    username = "username"
1345	    password = "password"
1346	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_basic.py:157:8
156	        )
157	        self.client.login(username="testuser", password="testpw")
158	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_basic.py:168:8
167	        )
168	        self.client.login(username="testuser", password="testpw")
169	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'newsecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_basic.py:172:13
171	        prev_session_key = request.session.session_key
172	        with override_settings(
173	            SECRET_KEY="newsecret",
174	            SECRET_KEY_FALLBACKS=[settings.SECRET_KEY],
175	        ):
176	            user = get_user(request)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'newsecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_basic.py:182:13
181	        # The session hash should be updated using the current secret.
182	        with override_settings(SECRET_KEY="newsecret"):
183	            user = get_user(request)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_basic.py:191:14
190	        )
191	        await self.client.alogin(username="testuser", password="testpw")
192	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'newsecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_basic.py:195:13
194	        prev_session_key = request.session.session_key
195	        with override_settings(
196	            SECRET_KEY="newsecret",
197	            SECRET_KEY_FALLBACKS=[settings.SECRET_KEY],
198	        ):
199	            user = await aget_user(request)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'newsecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_basic.py:205:13
204	        # The session hash should be updated using the current secret.
205	        with override_settings(SECRET_KEY="newsecret"):
206	            user = await aget_user(request)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_context_processors.py:77:24
76	    def setUpTestData(cls):
77	        cls.superuser = User.objects.create_superuser(
78	            username="super", password="secret", email="super@example.com"
79	        )
80	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_context_processors.py:100:12
99	    def test_perms_attrs(self):
100	        u = User.objects.create_user(username="normal", password="secret")
101	        u.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_context_processors.py:114:12
113	    def test_perm_in_perms_attrs(self):
114	        u = User.objects.create_user(username="normal", password="secret")
115	        u.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_context_processors.py:121:8
120	        )
121	        self.client.login(username="normal", password="secret")
122	        response = self.client.get("/auth_processor_perm_in_perms/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_context_processors.py:139:8
138	        # tests.
139	        self.client.login(username="super", password="secret")
140	        user = authenticate(username="super", password="secret")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_context_processors.py:140:15
139	        self.client.login(username="super", password="secret")
140	        user = authenticate(username="super", password="secret")
141	        response = self.client.get("/auth_processor_user/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_decorators.py:158:19
157	    def setUpTestData(cls):
158	        cls.user = models.User.objects.create(username="joe", password="qwerty")
159	        # Add permissions auth.add_customuser and auth.change_customuser

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_decorators.py:323:24
322	    def setUpTestData(cls):
323	        cls.user_pass = models.User.objects.create(username="joe", password="qwerty")
324	        cls.user_deny = models.User.objects.create(username="jim", password="qwerty")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_decorators.py:324:24
323	        cls.user_pass = models.User.objects.create(username="joe", password="qwerty")
324	        cls.user_deny = models.User.objects.create(username="jim", password="qwerty")
325	        models.Group.objects.create(name="Joe group")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_forms.py:53:17
52	    def setUpTestData(cls):
53	        cls.u1 = User.objects.create_user(
54	            username="testclient", password="password", email="testclient@example.com"
55	        )
56	        cls.u2 = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_forms.py:56:17
55	        )
56	        cls.u2 = User.objects.create_user(
57	            username="inactive", password="password", is_active=False
58	        )
59	        cls.u3 = User.objects.create_user(username="staff", password="password")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_forms.py:59:17
58	        )
59	        cls.u3 = User.objects.create_user(username="staff", password="password")
60	        cls.u4 = User.objects.create(username="empty_password", password="")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_forms.py:60:17
59	        cls.u3 = User.objects.create_user(username="staff", password="password")
60	        cls.u4 = User.objects.create(username="empty_password", password="")
61	        cls.u5 = User.objects.create(username="unmanageable_password", password="$")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '$'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_forms.py:61:17
60	        cls.u4 = User.objects.create(username="empty_password", password="")
61	        cls.u5 = User.objects.create(username="unmanageable_password", password="$")
62	        cls.u6 = User.objects.create(username="unknown_password", password="foo$bar")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo$bar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_forms.py:62:17
61	        cls.u5 = User.objects.create(username="unmanageable_password", password="$")
62	        cls.u6 = User.objects.create(username="unknown_password", password="foo$bar")
63	        cls.u7 = User.objects.create(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_forms.py:206:8
205	        self.assertNotEqual(omega_username, ohm_username)
206	        User.objects.create_user(username=omega_username, password="pwd")
207	        data = {

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_forms.py:460:8
459	
460	        ExtensionUser.objects.create_user(
461	            username="testclient",
462	            password="password",
463	            email="testclient@example.com",
464	            date_of_birth=datetime.date(1984, 3, 5),
465	        )
466	        data = {

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_forms.py:623:8
622	    def test_unicode_username(self):
623	        User.objects.create_user(username="Σαρα", password="pwd")
624	        data = {

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_forms.py:703:15
702	
703	        user = IntegerUsernameUser.objects.create_user(username=0, password="pwd")
704	        data = {

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'new password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_forms.py:1061:18
1060	        # password field.
1061	        post_data["password"] = "new password"
1062	        form = UserChangeForm(instance=user, data=post_data)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<a class="button" href="([^"]*)">([^<]*)</a>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_forms.py:1092:30
1091	        ]
1092	        password_reset_link = r'<a class="button" href="([^"]*)">([^<]*)</a>'
1093	        for username, expected_help_text, expected_button_label in cases:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'VSK0UYV6FFQVZ0KG88DYN9WADAADZO1CTSIVDJUNZSUML6IBX7LN7ZS3R5JGB3RGZ7VI7G7DJQ9NI8BQFSRPTG6UWTTVESA5ZPUN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_hashers.py:141:12
140	        password = (
141	            "VSK0UYV6FFQVZ0KG88DYN9WADAADZO1CTSIVDJUNZSUML6IBX7LN7ZS3R5"
142	            "JGB3RGZ7VI7G7DJQ9NI8BQFSRPTG6UWTTVESA5ZPUN"
143	        )
144	        encoded = make_password(password, hasher="bcrypt_sha256")
145	        self.assertTrue(check_password(password, encoded))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'letmein'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_hashers.py:486:24
485	            ("foo", make_password(password=None), None),  # unusable encoded
486	            ("letmein", make_password(password="letmein"), ValueError),  # valid encoded
487	        ]

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'letmein'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_hashers.py:499:24
498	            ("foo", make_password(password=None), None),  # unusable encoded
499	            ("letmein", make_password(password="letmein"), ValueError),  # valid encoded
500	        ]

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_login.py:11:19
10	    def setUpTestData(cls):
11	        cls.user = User.objects.create_user(username="testuser", password="password")
12	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/auth_tests/test_management.py:61:16
60	            def mock_input(prompt):
61	                assert "__proxy__" not in prompt
62	                response = None

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_management.py:169:19
168	    def setUpTestData(cls):
169	        cls.user = User.objects.create_user(username="joe", password="qwerty")
170	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_management.py:191:8
190	        username = getpass.getuser()
191	        User.objects.create_user(username=username, password="qwerty")
192	        call_command("changepassword", stdout=self.stdout)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_management.py:252:8
251	        # 'Julia' with accented 'u':
252	        User.objects.create_user(username="J\xfalia", password="qwerty")
253	        call_command("changepassword", username="J\xfalia", stdout=self.stdout)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_management.py:266:15
265	        """
266	        user = User.objects.db_manager("other").create_user(
267	            username="joe", password="qwerty"
268	        )
269	        self.assertTrue(user.check_password("qwerty"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_middleware.py:124:8
123	        ]
124	        self.client.login(username="test_user", password="test_password")
125	        for path in paths:

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_mixins.py:57:15
56	    def test_stacked_mixins_success(self):
57	        user = models.User.objects.create(username="joe", password="qwerty")
58	        perms = models.Permission.objects.filter(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_mixins.py:74:15
73	    def test_stacked_mixins_missing_permission(self):
74	        user = models.User.objects.create(username="joe", password="qwerty")
75	        perms = models.Permission.objects.filter(codename__in=("add_customuser",))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_mixins.py:89:15
88	    def test_access_mixin_permission_denied_response(self):
89	        user = models.User.objects.create(username="joe", password="qwerty")
90	        # Authenticated users receive PermissionDenied.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_mixins.py:118:15
117	    def test_stacked_mixins_not_logged_in(self):
118	        user = models.User.objects.create(username="joe", password="qwerty")
119	        perms = models.Permission.objects.filter(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_mixins.py:218:19
217	    def setUpTestData(cls):
218	        cls.user = models.User.objects.create(username="joe", password="qwerty")
219	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_mixins.py:247:19
246	    def setUpTestData(cls):
247	        cls.user = models.User.objects.create(username="joe", password="qwerty")
248	        perms = models.Permission.objects.filter(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_models.py:160:12
159	        ):
160	            User.objects.create_superuser(
161	                username="test",
162	                email="test@test.com",
163	                password="test",
164	                is_superuser=False,
165	            )
166	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_models.py:171:18
170	        ):
171	            await User.objects.acreate_superuser(
172	                username="test",
173	                email="test@test.com",
174	                password="test",
175	                is_superuser=False,
176	            )
177	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_models.py:180:12
179	        with self.assertRaisesMessage(ValueError, "Superuser must have is_staff=True."):
180	            User.objects.create_superuser(
181	                username="test",
182	                email="test@test.com",
183	                password="test",
184	                is_staff=False,
185	            )
186	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_models.py:189:18
188	        with self.assertRaisesMessage(ValueError, "Superuser must have is_staff=True."):
189	            await User.objects.acreate_superuser(
190	                username="test",
191	                email="test@test.com",
192	                password="test",
193	                is_staff=False,
194	            )
195	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secure'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_models.py:199:19
198	            UserModel = apps.get_model("auth", "User")
199	            user = UserModel.objects.create_user("user1", password="secure")
200	            self.assertIsInstance(user, UserModel)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'some-gibbberish'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_models.py:227:22
226	        """
227	        self.assertIs(User(password="some-gibbberish").has_usable_password(), True)
228	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_models.py:286:15
285	    def test_user_clean_normalize_email(self):
286	        user = User(username="user", password="foo", email="foo@BAR.com")
287	        user.clean()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_models.py:294:15
293	        """
294	        user = User.objects.create_user(username="user", password="foo")
295	        user.set_password("bar")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_models.py:310:15
309	        """
310	        user = User.objects.create_user(username="user", password="foo")
311	        initial_password = user.password

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_models.py:331:21
330	    async def test_acheck_password_upgrade(self):
331	        user = await User.objects.acreate_user(username="user", password="foo")
332	        initial_password = user.password

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_remote_user.py:250:8
249	        # authenticated via another backend
250	        User.objects.create_user(username="modeluser", password="foo")
251	        self.client.login(username="modeluser", password="foo")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_remote_user.py:251:8
250	        User.objects.create_user(username="modeluser", password="foo")
251	        self.client.login(username="modeluser", password="foo")
252	        authenticate(username="modeluser", password="foo")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_remote_user.py:252:8
251	        self.client.login(username="modeluser", password="foo")
252	        authenticate(username="modeluser", password="foo")
253	        response = self.client.get("/remote_user/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_remote_user.py:269:14
268	        # authenticated via another backend
269	        await User.objects.acreate_user(username="modeluser", password="foo")
270	        await self.async_client.alogin(username="modeluser", password="foo")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_remote_user.py:270:14
269	        await User.objects.acreate_user(username="modeluser", password="foo")
270	        await self.async_client.alogin(username="modeluser", password="foo")
271	        await aauthenticate(username="modeluser", password="foo")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_remote_user.py:271:14
270	        await self.async_client.alogin(username="modeluser", password="foo")
271	        await aauthenticate(username="modeluser", password="foo")
272	        response = await self.async_client.get("/remote_user/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_signals.py:15:17
14	    def setUpTestData(cls):
15	        cls.u1 = User.objects.create_user(username="testclient", password="password")
16	        cls.u3 = User.objects.create_user(username="staff", password="password")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_signals.py:16:17
15	        cls.u1 = User.objects.create_user(username="testclient", password="password")
16	        cls.u3 = User.objects.create_user(username="staff", password="password")
17	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bad'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_signals.py:43:8
42	        # Only a successful login will trigger the success signal.
43	        self.client.login(username="testclient", password="bad")
44	        self.assertEqual(len(self.logged_in), 0)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_signals.py:52:8
51	        # Like this:
52	        self.client.login(username="testclient", password="password")
53	        self.assertEqual(len(self.logged_in), 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_signals.py:67:8
66	    def test_logout(self):
67	        self.client.login(username="testclient", password="password")
68	        self.client.post("/logout/next_page/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bad'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_signals.py:85:8
84	    def test_failed_login_without_request(self):
85	        authenticate(username="testclient", password="bad")
86	        self.assertIsNone(self.login_failed[0]["request"])

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pass'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_templates.py:28:15
27	        user = User.objects.create_user("jsmith", "jsmith@example.com", "pass")
28	        user = authenticate(username=user.username, password="pass")
29	        request = cls.request_factory.get("/somepath/")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_tokens.py:50:23
49	            with self.subTest(model=model.__qualname__, email=email):
50	                user = model.objects.create_user(
51	                    "changeemailuser",
52	                    email=email,
53	                    password="testpw",
54	                )
55	                p0 = PasswordResetTokenGenerator()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'abcdefghijkl'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_tokens.py:101:21
100	        user = User.objects.create_user("tokentestuser", "test2@example.com", "testpw")
101	        new_secret = "abcdefghijkl"
102	        # Create and check a token with a different secret.

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test-secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_tokens.py:118:21
117	        class CustomPasswordResetTokenGenerator(PasswordResetTokenGenerator):
118	            secret = "test-secret"
119	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_tokens.py:136:5
135	
136	    @override_settings(SECRET_KEY="")
137	    def test_secret_lazy_validation(self):

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_tokens.py:146:20
145	        p1 = PasswordResetTokenGenerator()
146	        p1.secret = "secret"
147	        tk = p1.make_token(user)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'newsecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_tokens.py:149:20
148	        p2 = PasswordResetTokenGenerator()
149	        p2.secret = "newsecret"
150	        p2.secret_fallbacks = ["secret"]

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'oldsecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_tokens.py:161:20
160	        p1 = PasswordResetTokenGenerator()
161	        p1.secret = "oldsecret"
162	        tk = p1.make_token(user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_tokens.py:154:5
153	
154	    @override_settings(
155	        SECRET_KEY="secret",
156	        SECRET_KEY_FALLBACKS=["oldsecret"],
157	    )
158	    def test_check_token_secret_key_fallbacks(self):

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'oldsecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_tokens.py:173:20
172	        p1 = PasswordResetTokenGenerator()
173	        p1.secret = "oldsecret"
174	        tk = p1.make_token(user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_tokens.py:166:5
165	
166	    @override_settings(
167	        SECRET_KEY="secret",
168	        SECRET_KEY_FALLBACKS=["oldsecret"],
169	    )
170	    def test_check_token_secret_key_fallbacks_override(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_validators.py:164:15
163	    def test_validate(self):
164	        user = User.objects.create_user(
165	            username="testclient",
166	            password="password",
167	            email="testclient@example.com",
168	            first_name="Test",
169	            last_name="Client",
170	        )
171	        expected_error = "The password is too similar to the %s."

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_validators.py:235:15
234	
235	        user = User.objects.create_user(
236	            username="testclient",
237	            password="password",
238	            email="testclient@example.com",
239	            first_name="Test",
240	            last_name="Client",
241	        )
242	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_validators.py:253:15
252	
253	        user = User.objects.create_user(
254	            username="testclient",
255	            password="password",
256	            email="testclient@example.com",
257	            first_name="Test",
258	            last_name="Client",
259	        )
260	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_views.py:72:17
71	    def setUpTestData(cls):
72	        cls.u1 = User.objects.create_user(
73	            username="testclient", password="password", email="testclient@example.com"
74	        )
75	        cls.u3 = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_views.py:75:17
74	        )
75	        cls.u3 = User.objects.create_user(
76	            username="staff", password="password", email="staffmember@example.com"
77	        )
78	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b107_hardcoded_password_default.html
   Location: ./tests/auth_tests/test_views.py:79:4
78	
79	    def login(self, username="testclient", password="password", url="/login/"):
80	        response = self.client.post(
81	            url,
82	            {
83	                "username": username,
84	                "password": password,
85	            },
86	        )
87	        self.assertIn(SESSION_KEY, self.client.session)
88	        return response
89	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'set-passwordcustom'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_views.py:383:38
382	        path = path.replace("/reset/", "/reset/custom/token/")
383	        self.client.reset_url_token = "set-passwordcustom"
384	        response = self.client.post(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_views.py:559:8
558	        # instead of fixture
559	        UUIDUser.objects.create_user(
560	            email=self.user_email,
561	            username="foo",
562	            password="foo",
563	        )
564	        return super()._test_confirm_start()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_views.py:634:8
633	        self.fail_login()
634	        self.login(password="password1")
635	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foobar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_views.py:928:8
927	
928	        self.login(password="foobar")
929	        self.assertNotEqual(original_session_key, self.client.session.session_key)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_views.py:1568:8
1567	        self.logout()
1568	        self.login(password="password1")
1569	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_views.py:1590:8
1589	        # No password change yet.
1590	        self.login(password="password1")
1591	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_views.py:1612:12
1611	        with self.assertRaises(AssertionError):
1612	            self.login(password="password1")
1613	        self.admin.refresh_from_db()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'shouldnotchange'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/auth_tests/test_views.py:1721:13
1720	        data = self.get_user_data(u)
1721	        data["password"] = "shouldnotchange"
1722	        change_url = reverse("auth_test_admin:auth_user_change", args=(u.pk,))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_views.py:1735:12
1734	    def test_admin_password_change(self):
1735	        u = UUIDUser.objects.create_superuser(
1736	            username="uuid", email="foo@bar.com", password="test"
1737	        )
1738	        self.assertTrue(self.client.login(username="uuid", password="test"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/test_views.py:1738:24
1737	        )
1738	        self.assertTrue(self.client.login(username="uuid", password="test"))
1739	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/auth_tests/urls.py:24:8
23	    def __init__(self, request, *args, **kwargs):
24	        assert isinstance(request, HttpRequest)
25	        super().__init__(request, *args, **kwargs)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'set-passwordcustom'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/auth_tests/urls.py:183:8
182	        "reset/custom/token/<uidb64>/<token>/",
183	        views.PasswordResetConfirmView.as_view(reset_url_token="set-passwordcustom"),
184	    ),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/base/test_base.py:126:14
125	        # by putting a false condition in the WHERE clause.
126	        sql = "DELETE FROM {} WHERE 0=1 AND 0=%s".format(Square._meta.db_table)
127	        if params is None:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/backends/mysql/test_creation.py:1:0
1	import subprocess
2	import unittest
3	from io import StringIO

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/oracle/test_introspection.py:48:18
47	            cursor.execute(
48	                f"CREATE VIEW {person_view} "
49	                f"AS SELECT {first_name_column} FROM {person_table}"
50	            )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/oracle/test_introspection.py:74:18
73	            cursor.execute(
74	                f"CREATE MATERIALIZED VIEW {person_mview} "
75	                f"DEFAULT COLLATION {collation} "
76	                f"AS SELECT {first_name_column} FROM {person_table}"
77	            )

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'p@ssword'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/backends/oracle/tests.py:150:33
149	        old_password = connection.settings_dict["PASSWORD"]
150	        connection.settings_dict["PASSWORD"] = "p@ssword"
151	        try:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/postgresql/test_server_side_cursors.py:35:16
34	            cursor.execute(
35	                "SELECT {fields} FROM pg_cursors;".format(fields=self.cursor_fields)
36	            )

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/backends/tests.py:98:15
97	        """last_executed_query() returns a string."""
98	        data = RawData.objects.filter(raw_data=b"\x00\x46  \xFE").extra(
99	            select={"föö": 1}
100	        )
101	        sql, params = data.query.sql_with_params()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/tests.py:128:14
127	        square_opts = Square._meta
128	        sql = "INSERT INTO %s (%s, %s) VALUES (%%(root)s, %%(square)s)" % (
129	            connection.introspection.identifier_converter(square_opts.db_table),
130	            connection.ops.quote_name(square_opts.get_field("root").column),
131	            connection.ops.quote_name(square_opts.get_field("square").column),
132	        )
133	        with connection.cursor() as cursor:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/tests.py:144:14
143	        square_opts = Square._meta
144	        sql = "INSERT INTO %s (%s, %s) VALUES (%%(root)s, %%(root2)s)" % (
145	            connection.introspection.identifier_converter(square_opts.db_table),
146	            connection.ops.quote_name(square_opts.get_field("root").column),
147	            connection.ops.quote_name(square_opts.get_field("square").column),
148	        )
149	        with connection.cursor() as cursor:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/tests.py:162:16
161	        root_column = connection.ops.quote_name(square_opts.get_field("root").column)
162	        sql = f"UPDATE {table} SET {root_column} = %s + %s WHERE {id_column} = %s"
163	        with connection.cursor() as cursor:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/tests.py:171:18
170	                last_executed_query,
171	                f"UPDATE {table} SET {root_column} = 42 + 42 WHERE {id_column} = 1",
172	            )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/tests.py:182:20
181	        with connection.cursor() as cursor:
182	            query = "INSERT INTO %s (%s, %s) VALUES (%%s, %%s)" % (
183	                connection.introspection.identifier_converter("backends_square"),
184	                connection.ops.quote_name("root"),
185	                connection.ops.quote_name("square"),
186	            )
187	            with self.assertRaises(Exception):

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/tests.py:323:20
322	        if paramstyle == "format":
323	            query = "INSERT INTO %s (%s, %s) VALUES (%%s, %%s)" % (tbl, f1, f2)
324	        elif paramstyle == "pyformat":

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/tests.py:325:20
324	        elif paramstyle == "pyformat":
325	            query = "INSERT INTO %s (%s, %s) VALUES (%%(root)s, %%(square)s)" % (
326	                tbl,
327	                f1,
328	                f2,
329	            )
330	        else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/tests.py:406:16
405	            cursor.execute(
406	                "SELECT %s, %s FROM %s ORDER BY %s"
407	                % (
408	                    qn(f3.column),
409	                    qn(f4.column),
410	                    connection.introspection.identifier_converter(opts2.db_table),
411	                    qn(f3.column),
412	                )
413	            )

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'françois'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/backends/tests.py:424:33
423	        old_password = connection.settings_dict["PASSWORD"]
424	        connection.settings_dict["PASSWORD"] = "françois"
425	        try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b110_try_except_pass.html
   Location: ./tests/backends/tests.py:505:12
504	                connection.close()
505	            except Exception:
506	                pass
507	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/backends/tests.py:526:14
525	
526	        sql = "INSERT INTO %s (%s, %s) VALUES (%%s, %%s)" % (
527	            connection.introspection.identifier_converter("backends_square"),
528	            connection.ops.quote_name("root"),
529	            connection.ops.quote_name("square"),
530	        )
531	        with connection.cursor() as cursor:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/builtin_server/tests.py:24:8
23	
24	        assert isinstance(data, bytes), "write() argument must be bytestring"
25	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/bulk_create/models.py:129:48
128	    file_field = models.FileField(null=True, default="file.txt")
129	    file_path_field = models.FilePathField(path="/tmp", null=True, default="file.txt")
130	    generic_ip_address_field = models.GenericIPAddressField(

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/cache/tests.py:6:0
5	import os
6	import pickle
7	import re

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b110_try_except_pass.html
   Location: ./tests/cache/tests.py:1574:8
1573	            cache.set("small_value", large_value)
1574	        except Exception:
1575	            # Most clients (e.g. pymemcache or pylibmc) raise when the value is
1576	            # too large. This test is primarily checking that the key was
1577	            # deleted, so the return/exception behavior for the set() itself is
1578	            # not important.
1579	            pass
1580	        # small_value should be deleted, or set if configured to accept larger values

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/check_framework/test_security.py:419:5
418	
419	    @override_settings(SECRET_KEY="")
420	    def test_empty_secret_key(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/composite_pk/test_update.py:164:17
163	    def test_update_token_by_tenant_name(self):
164	        result = Token.objects.filter(tenant__name="A").update(secret="bar")
165	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'lcccccccX2kcccccccY2jcccccccssIC'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/csrf_tests/tests.py:39:14
38	# This is a test (unmasked) CSRF cookie / secret.
39	TEST_SECRET = "lcccccccX2kcccccccY2jcccccccssIC"
40	# Two masked versions of TEST_SECRET for testing purposes.

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'HTTP_X_CSRFTOKEN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/csrf_tests/tests.py:270:27
269	        if token_header is None:
270	            token_header = "HTTP_X_CSRFTOKEN"
271	        req = self._get_request(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'HTTP_X_CSRFTOKEN_CUSTOMIZED'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/csrf_tests/tests.py:422:8
421	        )
422	        self._check_bad_or_missing_token(
423	            expected,
424	            meta_token=16 * "a",
425	            token_header="HTTP_X_CSRFTOKEN_CUSTOMIZED",
426	        )
427	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'HTTP_X_CSRFTOKEN_CUSTOMIZED'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/csrf_tests/tests.py:464:14
463	        """
464	        req = self._get_POST_csrf_cookie_request(
465	            meta_token=self._csrf_id_token,
466	            token_header="HTTP_X_CSRFTOKEN_CUSTOMIZED",
467	        )
468	        mw = CsrfViewMiddleware(post_form_view)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/dbshell/test_mysql.py:3:0
2	import signal
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/dbshell/test_mysql.py:222:12
221	        with self.assertRaises(subprocess.CalledProcessError) as ctx:
222	            subprocess.run(args, check=True, env=env)
223	        self.assertNotIn("somepassword", str(ctx.exception))

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/dbshell/test_postgresql.py:3:0
2	import signal
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'sésame'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/dbshell/test_postgresql.py:138:19
137	        username = "rôle"
138	        password = "sésame"
139	        self.assertEqual(

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/dbshell/test_postgresql.py:186:12
185	        with self.assertRaises(subprocess.CalledProcessError) as ctx:
186	            subprocess.run(args, check=True, env=env)
187	        self.assertNotIn("somepassword", str(ctx.exception))

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/dbshell/test_sqlite.py:1:0
1	import subprocess
2	from pathlib import Path
3	from unittest import mock, skipUnless

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '1bcdefghij2bcdefghij3bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/decorators/test_csrf.py:13:13
12	
13	CSRF_TOKEN = "1bcdefghij2bcdefghij3bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD"
14	

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/defer/tests.py:87:28
86	        qs = Primary.objects.all()
87	        self.assert_delayed(qs.defer("name").extra(select={"a": 1})[0], 1)
88	        self.assert_delayed(qs.extra(select={"a": 1}).defer("name")[0], 1)

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/defer/tests.py:88:28
87	        self.assert_delayed(qs.defer("name").extra(select={"a": 1})[0], 1)
88	        self.assert_delayed(qs.extra(select={"a": 1}).defer("name")[0], 1)
89	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/expressions/tests.py:2:0
1	import datetime
2	import pickle
3	import unittest

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/expressions/tests.py:1008:25
1007	        expr.convert_value  # populate cached property
1008	        self.assertEqual(pickle.loads(pickle.dumps(expr)), expr)
1009	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/extra_regress/tests.py:12:16
11	    def setUpTestData(cls):
12	        cls.u = User.objects.create_user(
13	            username="fred", password="secret", email="fred@example.com"
14	        )
15	

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/extra_regress/tests.py:37:13
36	        # Queryset to match most recent revision:
37	        qs = RevisionableModel.objects.extra(
38	            where=[
39	                "%(table)s.id IN "
40	                "(SELECT MAX(rev.id) FROM %(table)s rev GROUP BY rev.base_id)"
41	                % {
42	                    "table": RevisionableModel._meta.db_table,
43	                }
44	            ]
45	        )
46	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/extra_regress/tests.py:39:16
38	            where=[
39	                "%(table)s.id IN "
40	                "(SELECT MAX(rev.id) FROM %(table)s rev GROUP BY rev.base_id)"
41	                % {
42	                    "table": RevisionableModel._meta.db_table,
43	                }
44	            ]

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/extra_regress/tests.py:80:13
79	        )
80	        qs = qs.extra(select={"beta": 4})
81	        qs = qs.extra(select={"alpha": "%s"}, select_params=[5])

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/extra_regress/tests.py:157:12
156	        self.assertSequenceEqual(
157	            User.objects.filter(pk=self.u.id)
158	            .extra(select={"extra_field": 1})
159	            .distinct(),

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/extra_regress/tests.py:163:12
162	        self.assertSequenceEqual(
163	            User.objects.filter(pk=self.u.id).extra(
164	                select={"extra_field": 1}, order_by=["extra_field"]
165	            ),
166	            [self.u],

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/extra_regress/tests.py:169:12
168	        self.assertSequenceEqual(
169	            User.objects.filter(pk=self.u.id)
170	            .extra(select={"extra_field": 1}, order_by=["extra_field"])
171	            .distinct(),

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/extra_regress/tests.py:397:17
396	        self.assertEqual(
397	            list(TestObject.objects.extra(select={"extra": 1}).values("pk")),
398	            [{"pk": obj.pk}],

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/extra_regress/tests.py:403:23
402	            TestObject.objects.filter(
403	                pk__in=TestObject.objects.extra(select={"extra": 1}).values("pk")
404	            ),

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/extra_regress/tests.py:409:17
408	        self.assertEqual(
409	            list(TestObject.objects.values("pk").extra(select={"extra": 1})),
410	            [{"pk": obj.pk}],

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/extra_regress/tests.py:415:23
414	            TestObject.objects.filter(
415	                pk__in=TestObject.objects.values("pk").extra(select={"extra": 1})
416	            ),

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/file_storage/models.py:47:26
46	        # to make sure it only gets called once.
47	        return "%s/%s" % (random.randint(100, 999), filename)
48	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:74:13
73	        candidates = [
74	            ("/tmp/..", ".."),
75	            ("\\tmp\\..", ".."),

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:76:13
75	            ("\\tmp\\..", ".."),
76	            ("/tmp/.", "."),
77	            ("\\tmp\\.", "."),

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:100:13
99	            ("tmp\\..\\path", "tmp/.."),
100	            ("/tmp/../path", "/tmp/.."),
101	            ("\\tmp\\..\\path", "/tmp/.."),

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:100:29
99	            ("tmp\\..\\path", "tmp/.."),
100	            ("/tmp/../path", "/tmp/.."),
101	            ("\\tmp\\..\\path", "/tmp/.."),

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:101:32
100	            ("/tmp/../path", "/tmp/.."),
101	            ("\\tmp\\..\\path", "/tmp/.."),
102	        ]

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:139:12
138	        candidates = [
139	            "/tmp/path",
140	            "/tmp/../path",
141	        ]
142	        for file_name in candidates:
143	            msg = f"Detected path traversal attempt in '{file_name}'"

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:140:12
139	            "/tmp/path",
140	            "/tmp/../path",
141	        ]
142	        for file_name in candidates:
143	            msg = f"Detected path traversal attempt in '{file_name}'"
144	            with self.subTest(file_name=file_name):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:171:12
170	        candidates = [
171	            "/tmp/.",
172	            "/tmp/..",
173	            "/tmp/../path",
174	            "/tmp/path",
175	            "some/folder/",
176	            "some/folder/.",
177	            "some/folder/..",
178	            "some/folder/???",
179	            "some/folder/$.$.$",
180	            "some/../test.txt",
181	            "",
182	        ]
183	        for file_name in candidates:
184	            with self.subTest(file_name=file_name):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:172:12
171	            "/tmp/.",
172	            "/tmp/..",
173	            "/tmp/../path",
174	            "/tmp/path",
175	            "some/folder/",
176	            "some/folder/.",
177	            "some/folder/..",
178	            "some/folder/???",
179	            "some/folder/$.$.$",
180	            "some/../test.txt",
181	            "",
182	        ]
183	        for file_name in candidates:
184	            with self.subTest(file_name=file_name):
185	                self.assertEqual(f.generate_filename(None, file_name), "test.txt")

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:173:12
172	            "/tmp/..",
173	            "/tmp/../path",
174	            "/tmp/path",
175	            "some/folder/",
176	            "some/folder/.",
177	            "some/folder/..",
178	            "some/folder/???",
179	            "some/folder/$.$.$",
180	            "some/../test.txt",
181	            "",
182	        ]
183	        for file_name in candidates:
184	            with self.subTest(file_name=file_name):
185	                self.assertEqual(f.generate_filename(None, file_name), "test.txt")
186	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:174:12
173	            "/tmp/../path",
174	            "/tmp/path",
175	            "some/folder/",
176	            "some/folder/.",
177	            "some/folder/..",
178	            "some/folder/???",
179	            "some/folder/$.$.$",
180	            "some/../test.txt",
181	            "",
182	        ]
183	        for file_name in candidates:
184	            with self.subTest(file_name=file_name):
185	                self.assertEqual(f.generate_filename(None, file_name), "test.txt")
186	
187	    def test_filefield_generate_filename_upload_to_absolute_path(self):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:189:19
188	        def upload_to(instance, filename):
189	            return "/tmp/" + filename
190	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_storage/test_generate_filename.py:206:19
205	        def upload_to(instance, filename):
206	            return "/tmp/" + filename
207	

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: ./tests/file_storage/tests.py:1204:27
1203	        """
1204	        file_like_object = urlopen(self.live_server_url + "/")
1205	        f = File(file_like_object)

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: ./tests/file_storage/tests.py:1208:22
1207	
1208	        remote_file = urlopen(self.live_server_url + "/")
1209	        with self.storage.open(stored_filename) as stored_file:

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_uploads/tests.py:35:4
34	CANDIDATE_TRAVERSAL_FILE_NAMES = [
35	    "/tmp/hax0rd.txt",  # Absolute path, *nix-style.
36	    "C:\\Windows\\hax0rd.txt",  # Absolute path, win-style.
37	    "C:/Windows/hax0rd.txt",  # Absolute path, broken-style.
38	    "\\tmp\\hax0rd.txt",  # Absolute path, broken in a different way.
39	    "/tmp\\hax0rd.txt",  # Absolute path, broken by mixing.
40	    "subdir/hax0rd.txt",  # Descendant path, *nix-style.
41	    "subdir\\hax0rd.txt",  # Descendant path, win-style.
42	    "sub/dir\\hax0rd.txt",  # Descendant path, mixed.
43	    "../../hax0rd.txt",  # Relative path, *nix-style.
44	    "..\\..\\hax0rd.txt",  # Relative path, win-style.
45	    "../..\\hax0rd.txt",  # Relative path, mixed.
46	    "..&#x2F;hax0rd.txt",  # HTML entities.
47	    "..&sol;hax0rd.txt",  # HTML entities.
48	]
49	
50	CANDIDATE_INVALID_FILE_NAMES = [

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_uploads/tests.py:39:4
38	    "\\tmp\\hax0rd.txt",  # Absolute path, broken in a different way.
39	    "/tmp\\hax0rd.txt",  # Absolute path, broken by mixing.
40	    "subdir/hax0rd.txt",  # Descendant path, *nix-style.
41	    "subdir\\hax0rd.txt",  # Descendant path, win-style.
42	    "sub/dir\\hax0rd.txt",  # Descendant path, mixed.
43	    "../../hax0rd.txt",  # Relative path, *nix-style.
44	    "..\\..\\hax0rd.txt",  # Relative path, win-style.
45	    "../..\\hax0rd.txt",  # Relative path, mixed.
46	    "..&#x2F;hax0rd.txt",  # HTML entities.
47	    "..&sol;hax0rd.txt",  # HTML entities.
48	]
49	
50	CANDIDATE_INVALID_FILE_NAMES = [
51	    "/tmp/",  # Directory, *nix-style.
52	    "c:\\tmp\\",  # Directory, win-style.
53	    "/tmp/.",  # Directory dot, *nix-style.
54	    "c:\\tmp\\.",  # Directory dot, *nix-style.

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_uploads/tests.py:51:4
50	CANDIDATE_INVALID_FILE_NAMES = [
51	    "/tmp/",  # Directory, *nix-style.
52	    "c:\\tmp\\",  # Directory, win-style.
53	    "/tmp/.",  # Directory dot, *nix-style.
54	    "c:\\tmp\\.",  # Directory dot, *nix-style.
55	    "/tmp/..",  # Parent directory, *nix-style.
56	    "c:\\tmp\\..",  # Parent directory, win-style.
57	    "",  # Empty filename.
58	]
59	
60	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_uploads/tests.py:53:4
52	    "c:\\tmp\\",  # Directory, win-style.
53	    "/tmp/.",  # Directory dot, *nix-style.
54	    "c:\\tmp\\.",  # Directory dot, *nix-style.
55	    "/tmp/..",  # Parent directory, *nix-style.
56	    "c:\\tmp\\..",  # Parent directory, win-style.
57	    "",  # Empty filename.
58	]
59	
60	
61	@override_settings(
62	    MEDIA_ROOT=MEDIA_ROOT, ROOT_URLCONF="file_uploads.urls", MIDDLEWARE=[]

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_uploads/tests.py:55:4
54	    "c:\\tmp\\.",  # Directory dot, *nix-style.
55	    "/tmp/..",  # Parent directory, *nix-style.
56	    "c:\\tmp\\..",  # Parent directory, win-style.
57	    "",  # Empty filename.
58	]
59	
60	
61	@override_settings(
62	    MEDIA_ROOT=MEDIA_ROOT, ROOT_URLCONF="file_uploads.urls", MIDDLEWARE=[]
63	)
64	class FileUploadTests(TestCase):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_uploads/tests.py:73:12
72	        candidates = [
73	            "/tmp/",
74	            "/tmp/..",
75	            "/tmp/.",
76	        ]
77	        if sys.platform == "win32":
78	            candidates.extend(

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_uploads/tests.py:74:12
73	            "/tmp/",
74	            "/tmp/..",
75	            "/tmp/.",
76	        ]
77	        if sys.platform == "win32":
78	            candidates.extend(
79	                [

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/file_uploads/tests.py:75:12
74	            "/tmp/..",
75	            "/tmp/.",
76	        ]
77	        if sys.platform == "win32":
78	            candidates.extend(
79	                [
80	                    "c:\\tmp\\",

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b324_hashlib.html
   Location: ./tests/file_uploads/tests.py:115:47
114	                try:
115	                    post_data[key + "_hash"] = hashlib.sha1(
116	                        post_data[key].read()
117	                    ).hexdigest()
118	                    post_data[key].seek(0)

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b324_hashlib.html
   Location: ./tests/file_uploads/tests.py:120:47
119	                except AttributeError:
120	                    post_data[key + "_hash"] = hashlib.sha1(
121	                        post_data[key].encode()
122	                    ).hexdigest()
123	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b324_hashlib.html
   Location: ./tests/file_uploads/views.py:50:23
49	        if isinstance(value, UploadedFile):
50	            new_hash = hashlib.sha1(value.read()).hexdigest()
51	        else:

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b324_hashlib.html
   Location: ./tests/file_uploads/views.py:52:23
51	        else:
52	            new_hash = hashlib.sha1(value.encode()).hexdigest()
53	        if new_hash != submitted_hash:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/foreign_object/tests.py:3:0
2	import datetime
3	import pickle
4	from operator import attrgetter

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/foreign_object/tests.py:727:38
726	        self.assertIn("path_infos", foreign_object_rel.__dict__)
727	        foreign_object_rel_restored = pickle.loads(pickle.dumps(foreign_object_rel))
728	        self.assertNotIn("path_infos", foreign_object_rel_restored.__dict__)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/foreign_object/tests.py:744:34
743	        self.assertIn("reverse_path_infos", foreign_object.__dict__)
744	        foreign_object_restored = pickle.loads(pickle.dumps(foreign_object))
745	        self.assertIn("path_infos", foreign_object_restored.__dict__)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/forms_tests/field_tests/test_booleanfield.py:1:0
1	import pickle
2	
3	from django.core.exceptions import ValidationError

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/forms_tests/field_tests/test_booleanfield.py:42:30
41	    def test_boolean_picklable(self):
42	        self.assertIsInstance(pickle.loads(pickle.dumps(BooleanField())), BooleanField)
43	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/forms_tests/field_tests/test_filefield.py:1:0
1	import pickle
2	import unittest
3	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/forms_tests/field_tests/test_filefield.py:121:30
120	    def test_file_picklable(self):
121	        self.assertIsInstance(pickle.loads(pickle.dumps(FileField())), FileField)
122	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/forms_tests/tests/test_error_messages.py:241:23
240	                    return ""
241	                return mark_safe(
242	                    '<div class="error">%s</div>'
243	                    % "".join("<p>%s</p>" % e for e in self)
244	                )
245	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/forms_tests/tests/test_error_messages.py:241:23
240	                    return ""
241	                return mark_safe(
242	                    '<div class="error">%s</div>'
243	                    % "".join("<p>%s</p>" % e for e in self)
244	                )
245	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/forms_tests/tests/test_forms.py:1405:48
1404	            special_name = CharField(label="<em>Special</em> Field")
1405	            special_safe_name = CharField(label=mark_safe("<em>Special</em> Field"))
1406	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/forms_tests/tests/test_forms.py:1414:20
1413	                raise ValidationError(
1414	                    mark_safe(
1415	                        "'<b>%s</b>' is a safe string"
1416	                        % self.cleaned_data["special_safe_name"]
1417	                    )
1418	                )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/forms_tests/tests/test_forms.py:1414:20
1413	                raise ValidationError(
1414	                    mark_safe(
1415	                        "'<b>%s</b>' is a safe string"
1416	                        % self.cleaned_data["special_safe_name"]
1417	                    )
1418	                )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/forms_tests/tests/test_forms.py:4181:14
4180	            (("custom&",), {}, '<%(tag)s for="id_field">custom&amp;:</%(tag)s>'),
4181	            ((mark_safe("custom&"),), {}, '<%(tag)s for="id_field">custom&:</%(tag)s>'),
4182	            # Passing attrs to add extra attributes on the <label>

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/forms_tests/tests/test_utils.py:149:27
148	        self.assertHTMLEqual(
149	            str(ErrorList([mark_safe(example)])),
150	            '<ul class="errorlist"><li>Example of link: '

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/forms_tests/tests/test_utils.py:160:35
159	        self.assertHTMLEqual(
160	            str(ErrorDict({"name": mark_safe(example)})),
161	            '<ul class="errorlist"><li>nameExample of link: '

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/forms_tests/widget_tests/test_radioselect.py:259:49
258	    def test_choices_escaping(self):
259	        choices = (("bad", "you & me"), ("good", mark_safe("you &gt; me")))
260	        html = """

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/forms_tests/widget_tests/test_select.py:202:49
201	    def test_choices_escaping(self):
202	        choices = (("bad", "you & me"), ("good", mark_safe("you &gt; me")))
203	        self.check_html(

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/forms_tests/widget_tests/test_textarea.py:59:12
58	            "msg",
59	            mark_safe("pre &quot;quoted&quot; value"),
60	            html=(

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/forms_tests/widget_tests/test_textinput.py:109:44
108	    def test_attrs_safestring(self):
109	        widget = TextInput(attrs={"onBlur": mark_safe("function('foo')")})
110	        self.check_html(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/generic_inline_admin/tests.py:19:24
18	    def setUpTestData(cls):
19	        cls.superuser = User.objects.create_superuser(
20	            username="super", password="secret", email="super@example.com"
21	        )
22	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/generic_views/test_base.py:262:16
261	            def dispatch(self, request, *args, **kwargs):
262	                assert hasattr(self, "attr")
263	                return super().dispatch(request, *args, **kwargs)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/gis_tests/gdal_tests/test_geom.py:2:0
1	import json
2	import pickle
3	from unittest import mock, skipIf

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/gis_tests/gdal_tests/test_geom.py:496:13
495	        g1 = OGRGeometry("LINESTRING(1 1 1,2 2 2,3 3 3)", "WGS84")
496	        g2 = pickle.loads(pickle.dumps(g1))
497	        self.assertEqual(g1, g2)

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: ./tests/gis_tests/geoapp/test_feeds.py:1:0
1	from xml.dom import minidom
2	
3	from django.conf import settings

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/gis_tests/geoapp/test_feeds.py:28:15
27	        # Uses `GEOSGeometry` in `item_geometry`
28	        doc1 = minidom.parseString(self.client.get("/feeds/rss1/").content)
29	        # Uses a 2-tuple in `item_geometry`

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/gis_tests/geoapp/test_feeds.py:30:15
29	        # Uses a 2-tuple in `item_geometry`
30	        doc2 = minidom.parseString(self.client.get("/feeds/rss2/").content)
31	        feed1, feed2 = doc1.firstChild, doc2.firstChild

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/gis_tests/geoapp/test_feeds.py:66:15
65	        "Testing geographic feeds using GeoRSS over Atom."
66	        doc1 = minidom.parseString(self.client.get("/feeds/atom1/").content)
67	        doc2 = minidom.parseString(self.client.get("/feeds/atom2/").content)

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/gis_tests/geoapp/test_feeds.py:67:15
66	        doc1 = minidom.parseString(self.client.get("/feeds/atom1/").content)
67	        doc2 = minidom.parseString(self.client.get("/feeds/atom2/").content)
68	        feed1, feed2 = doc1.firstChild, doc2.firstChild

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/gis_tests/geoapp/test_feeds.py:91:14
90	        "Testing geographic feeds using W3C Geo."
91	        doc = minidom.parseString(self.client.get("/feeds/w3cgeo1/").content)
92	        feed = doc.firstChild

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: ./tests/gis_tests/geoapp/test_sitemaps.py:3:0
2	from io import BytesIO
3	from xml.dom import minidom
4	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/gis_tests/geoapp/test_sitemaps.py:30:18
29	        for kml_type in ("kml", "kmz"):
30	            doc = minidom.parseString(
31	                self.client.get("/sitemaps/%s.xml" % kml_type).content
32	            )
33	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/gis_tests/geoapp/test_sitemaps.py:54:30
53	                if kml_type == "kml":
54	                    kml_doc = minidom.parseString(self.client.get(kml_url).content)
55	                elif kml_type == "kmz":

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/gis_tests/geoapp/test_sitemaps.py:61:34
60	                        self.assertEqual("doc.kml", zf.filelist[0].filename)
61	                        kml_doc = minidom.parseString(zf.read("doc.kml"))
62	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/gis_tests/geoapp/tests.py:209:16
208	            City.objects.raw(
209	                "select id, name, %s as point from geoapp_city" % point_select
210	            )

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/gis_tests/geos_tests/test_geos.py:5:0
4	import math
5	import pickle
6	import random

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/gis_tests/geos_tests/test_geos.py:1025:28
1024	                pnt = mp[i]
1025	                new = Point(random.randint(21, 100), random.randint(21, 100))
1026	                # Testing the assignment

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/gis_tests/geos_tests/test_geos.py:1025:53
1024	                pnt = mp[i]
1025	                new = Point(random.randint(21, 100), random.randint(21, 100))
1026	                # Testing the assignment

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/gis_tests/geos_tests/test_geos.py:1406:17
1405	            s1 = pickle.dumps(geom)
1406	            g1 = pickle.loads(s1)
1407	            self.assertEqual(geom, g1)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/handlers/tests_custom_error_handlers.py:15:8
14	        # TemplateResponse-based exception response.
15	        assert response.content
16	        return response

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/httpwrappers/tests.py:4:0
3	import os
4	import pickle
5	import unittest

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/httpwrappers/tests.py:230:13
229	        q = QueryDict()
230	        q1 = pickle.loads(pickle.dumps(q, 2))
231	        self.assertEqual(q, q1)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/httpwrappers/tests.py:233:13
232	        q = QueryDict("a=b&c=d")
233	        q1 = pickle.loads(pickle.dumps(q, 2))
234	        self.assertEqual(q, q1)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/httpwrappers/tests.py:236:13
235	        q = QueryDict("a=b&c=d&a=1")
236	        q1 = pickle.loads(pickle.dumps(q, 2))
237	        self.assertEqual(q, q1)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/httpwrappers/tests.py:973:17
972	        for proto in range(pickle.HIGHEST_PROTOCOL + 1):
973	            C1 = pickle.loads(pickle.dumps(C, protocol=proto))
974	            self.assertEqual(C1.output(), expected_output)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/humanize_tests/tests.py:511:8
510	        result_list_with_tz_support = result_list[:]
511	        assert result_list_with_tz_support[-4] == "2\xa0days, 6\xa0hours from now"
512	        result_list_with_tz_support[-4] == "2\xa0days, 5\xa0hours from now"

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/i18n/test_compilation.py:7:0
6	from pathlib import Path
7	from subprocess import run
8	from unittest import mock

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/i18n/test_compilation.py:272:36
271	            "django.core.management.utils.run",
272	            lambda *args, **kwargs: run(*args, env=env, **kwargs),
273	        ):

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/i18n/tests.py:5:0
4	import os
5	import pickle
6	import re

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/i18n/tests.py:255:13
254	        self.assertEqual(str(s1), "test")
255	        s2 = pickle.loads(pickle.dumps(s1))
256	        self.assertEqual(str(s2), "test")

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/i18n/tests.py:392:13
391	        self.assertEqual(s1 % 8, "8 good results")
392	        s2 = pickle.loads(pickle.dumps(s1))
393	        self.assertEqual(s2 % 1, "1 good result")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/i18n/tests.py:412:16
411	            self.assertEqual("", gettext(""))
412	            s = mark_safe("")
413	            self.assertEqual(s, gettext(s))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/i18n/tests.py:423:13
422	        trans_real._translations = {}
423	        s1 = mark_safe("Password")
424	        s2 = mark_safe("May")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/i18n/tests.py:424:13
423	        s1 = mark_safe("Password")
424	        s2 = mark_safe("May")
425	        with translation.override("de", deactivate=True):

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/i18n/tests.py:430:43
429	        self.assertEqual("Passworda", s1 + SafeString("a"))
430	        self.assertEqual("Passworda", s1 + mark_safe("a"))
431	        self.assertEqual("aPassword", mark_safe("a") + s1)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/i18n/tests.py:431:38
430	        self.assertEqual("Passworda", s1 + mark_safe("a"))
431	        self.assertEqual("aPassword", mark_safe("a") + s1)
432	        self.assertEqual("as", mark_safe("a") + mark_safe("s"))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/i18n/tests.py:432:31
431	        self.assertEqual("aPassword", mark_safe("a") + s1)
432	        self.assertEqual("as", mark_safe("a") + mark_safe("s"))
433	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/i18n/tests.py:432:48
431	        self.assertEqual("aPassword", mark_safe("a") + s1)
432	        self.assertEqual("as", mark_safe("a") + mark_safe("s"))
433	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/inline_formsets/tests.py:207:16
206	            def __init__(self, *args, **kwargs):
207	                assert "poet" in self._meta.fields
208	                super().__init__(*args, **kwargs)

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/lookup/tests.py:409:12
408	        self.assertSequenceEqual(
409	            Article.objects.filter(id=self.a1.id).extra(select=data).values(*data),
410	            [

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/mail/tests.py:1932:15
1931	        """
1932	        conn = mail.get_connection(username="", password="")
1933	        conn.close()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/mail/tests.py:1941:15
1940	        closed = [False]
1941	        conn = mail.get_connection(username="", password="")
1942	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/mail/tests.py:2203:5
2202	
2203	    @override_settings(
2204	        EMAIL_HOST_USER="not empty username",
2205	        EMAIL_HOST_PASSWORD="not empty password",
2206	    )
2207	    def test_email_authentication_use_settings(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/mail/tests.py:2217:18
2216	    def test_email_authentication_override_settings(self):
2217	        backend = smtp.EmailBackend(username="username", password="password")
2218	        self.assertEqual(backend.username, "username")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/mail/tests.py:2212:5
2211	
2212	    @override_settings(
2213	        EMAIL_HOST_USER="not empty username",
2214	        EMAIL_HOST_PASSWORD="not empty password",
2215	    )
2216	    def test_email_authentication_override_settings(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/mail/tests.py:2226:18
2225	    def test_email_disabled_authentication(self):
2226	        backend = smtp.EmailBackend(username="", password="")
2227	        self.assertEqual(backend.username, "")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/mail/tests.py:2221:5
2220	
2221	    @override_settings(
2222	        EMAIL_HOST_USER="not empty username",
2223	        EMAIL_HOST_PASSWORD="not empty password",
2224	    )
2225	    def test_email_disabled_authentication(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/mail/tests.py:2235:18
2234	        """
2235	        backend = smtp.EmailBackend(
2236	            username="not empty username", password="not empty password"
2237	        )
2238	        with self.assertRaisesMessage(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/mail/tests.py:2248:18
2247	        """
2248	        backend = smtp.EmailBackend(username="", password="")
2249	        self.assertIsNone(backend.connection)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/mail/tests.py:2512:22
2511	        super().setUpClass()
2512	        cls.backend = smtp.EmailBackend(username="", password="")
2513	        cls.smtp_controller.stop()

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/many_to_one/tests.py:295:16
294	            (
295	                Article.objects.filter(reporter__first_name__exact="John").extra(
296	                    where=["many_to_one_reporter.last_name='%s'" % "Smith"]
297	                )
298	            ),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/messages_tests/test_cookie.py:190:31
189	        self.assertIsInstance(
190	            self.encode_decode(mark_safe("<b>Hello Django!</b>")).message,
191	            SafeData,

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/messages_tests/test_session.py:61:43
60	        storage = self.get_storage()
61	        message = Message(constants.DEBUG, mark_safe("<b>Hello Django!</b>"))
62	        set_session_data(storage, [message])

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/middleware/tests.py:848:17
847	    incompressible_string = b"".join(
848	        int2byte(random.randint(0, 255)) for _ in range(500)
849	    )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/migrations/test_multidb.py:112:14
111	
112	        sql = """
113	        INSERT INTO {0}_pony (pink, weight) VALUES (1, 3.55);
114	        INSERT INTO {0}_pony (pink, weight) VALUES (3, 5.0);
115	        """.format(
116	            app_label

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/migrations/test_operations.py:516:23
515	        self.assertTableExists(f"{app_label}_product")
516	        insert_sql = f"INSERT INTO {app_label}_product (id, price) VALUES (%d, %d)"
517	        with connection.cursor() as cursor:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/migrations/test_state.py:1952:8
1951	        test_name = "related_models_app"
1952	        assert not (abstract and proxy)
1953	        meta_contents = {

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b102_exec_used.html
   Location: ./tests/migrations/test_writer.py:267:12
266	        try:
267	            exec(string, globals(), d)
268	        except Exception as e:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/model_fields/test_filefield.py:2:0
1	import os
2	import pickle
3	import sys

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/model_fields/test_filefield.py:160:42
159	                        dump = pickle.dumps(document)
160	                        loaded_document = pickle.loads(dump)
161	                        self.assertEqual(document.myfile, loaded_document.myfile)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/model_fields/test_filefield.py:179:40
178	                        myfile_dump = pickle.dumps(document.myfile)
179	                        loaded_myfile = pickle.loads(myfile_dump)
180	                        self.assertEqual(document.myfile, loaded_myfile)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/model_fields/test_imagefield.py:175:8
174	        """
175	        import pickle
176	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/model_fields/test_imagefield.py:181:19
180	
181	        loaded_p = pickle.loads(dump)
182	        self.assertEqual(p.mugshot, loaded_p.mugshot)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/model_fields/test_imagefield.py:189:25
188	        mugshot_dump = pickle.dumps(p.mugshot)
189	        loaded_mugshot = pickle.loads(mugshot_dump)
190	        self.assertEqual(p.mugshot, loaded_mugshot)

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./tests/model_fields/test_jsonfield.py:457:15
456	    def test_key_transform_raw_expression(self):
457	        expr = RawSQL(self.raw_sql, ['{"x": "bar"}'])
458	        self.assertSequenceEqual(

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./tests/model_fields/test_jsonfield.py:464:15
463	    def test_nested_key_transform_raw_expression(self):
464	        expr = RawSQL(self.raw_sql, ['{"x": {"y": "bar"}}'])
465	        self.assertSequenceEqual(

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./tests/model_fields/test_jsonfield.py:1149:20
1148	                    "x",
1149	                    RawSQL(
1150	                        self.raw_sql,
1151	                        ['{"x": {"a": "b", "c": 1, "d": "e"}}'],
1152	                    ),
1153	                ),

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/model_fields/tests.py:1:0
1	import pickle
2	
3	from django import forms

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/model_forms/models.py:152:8
151	        been_here = getattr(self, "been_saved", False)
152	        assert not been_here, "save_form_data called more than once"
153	        setattr(self, "been_saved", True)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/model_formsets/models.py:34:8
33	        # Ensure author is always accessible in clean method
34	        assert self.author.name is not None
35	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/model_regress/test_pickle.py:1:0
1	import pickle
2	
3	import django

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/model_regress/test_pickle.py:27:12
26	        with self.assertRaisesMessage(RuntimeWarning, msg):
27	            pickle.loads(pickle.dumps(p))
28	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/model_regress/test_pickle.py:50:12
49	        with self.assertRaisesMessage(RuntimeWarning, msg):
50	            pickle.loads(pickle.dumps(p))
51	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/model_regress/test_pickle.py:67:19
66	        self.assertEqual(m.dont_pickle, 1)
67	        reloaded = pickle.loads(dumped)
68	        self.assertFalse(hasattr(reloaded, "dont_pickle"))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/modeladmin/test_actions.py:12:24
11	    def setUpTestData(cls):
12	        cls.superuser = User.objects.create_superuser(
13	            username="super", password="secret", email="super@example.com"
14	        )
15	        content_type = ContentType.objects.get_for_model(Band)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/modeladmin/test_actions.py:21:19
20	            username = "%suser" % user_type
21	            user = User.objects.create_user(
22	                username=username, password="secret", is_staff=True
23	            )
24	            permission = Permission.objects.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/modeladmin/tests.py:922:28
921	        mock_request = MockRequest()
922	        mock_request.user = User.objects.create_superuser(
923	            username="bob", email="bob@test.com", password="test"
924	        )
925	        self.site.register(Band, ModelAdmin)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/modeladmin/tests.py:944:28
943	        mock_request = MockRequest()
944	        mock_request.user = User.objects.create_superuser(
945	            username="bob", email="bob@test.com", password="test"
946	        )
947	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/multiple_database/tests.py:2:0
1	import datetime
2	import pickle
3	from io import StringIO

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/multiple_database/tests.py:2057:36
2056	            qs = Book.objects.all()
2057	            self.assertEqual(qs.db, pickle.loads(pickle.dumps(qs)).db)
2058	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'fake_hash'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/multiple_database/tests.py:2555:15
2554	    def test_reverse_one_to_one_relation(self):
2555	        user = User(username="Someone", password="fake_hash")
2556	        profile = UserProfile()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'abcdefg'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/postgres_tests/integration_settings.py:1:13
1	SECRET_KEY = "abcdefg"
2	
3	INSTALLED_APPS = [

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/postgres_tests/test_integration.py:2:0
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/postgres_tests/test_integration.py:14:17
13	        test_environ["PYTHONPATH"] = os.path.join(os.path.dirname(__file__), "../../")
14	        result = subprocess.run(
15	            [
16	                sys.executable,
17	                "-m",
18	                "django",
19	                "check",
20	                "--settings",
21	                "integration_settings",
22	            ],
23	            stdout=subprocess.DEVNULL,
24	            stderr=subprocess.PIPE,
25	            cwd=os.path.dirname(__file__),
26	            env=test_environ,
27	            encoding="utf-8",
28	        )
29	        self.assertEqual(result.returncode, 0, msg=result.stderr)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/queries/models.py:415:8
414	        # Ticket #23721
415	        assert False, "type checking should happen without calling model __iter__"
416	

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: ./tests/queries/test_bulk_update.py:258:61
257	                models = [
258	                    CustomDbColumn.objects.create(ip_address="0.0.0.0")
259	                    for _ in range(10)

--------------------------------------------------
>> Issue: [B405:blacklist] Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b405-import-xml-etree
   Location: ./tests/queries/test_explain.py:3:0
2	import unittest
3	import xml.etree.ElementTree
4	

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
   Location: ./tests/queries/test_explain.py:51:32
50	                            try:
51	                                xml.etree.ElementTree.fromstring(result)
52	                            except xml.etree.ElementTree.ParseError as e:

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/queries/test_qs_combinators.py:297:12
296	        qs1 = (
297	            Number.objects.filter(num=1)
298	            .extra(
299	                select={"count": 0},
300	            )
301	            .values_list("num", "count")

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/queries/test_qs_combinators.py:303:14
302	        )
303	        qs2 = Number.objects.filter(num=2).extra(select={"count": 1})
304	        self.assertCountEqual(qs1.union(qs2), [(1, 0), (2, 1)])

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b611_django_rawsql_used.html
   Location: ./tests/queries/test_query.py:172:29
171	            sql = f"CASE WHEN {sql} THEN 1 ELSE 0 END"
172	        query.add_annotation(RawSQL(sql, (1,), BooleanField()), "_check")
173	        result = query.get_compiler(using=DEFAULT_DB_ALIAS).execute_sql(SINGLE)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/queries/tests.py:2:0
1	import datetime
2	import pickle
3	import sys

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/queries/tests.py:756:12
755	        self.assertSequenceEqual(
756	            Item.objects.datetimes("created", "day").extra(select={"a": 1}),
757	            [

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/queries/tests.py:763:12
762	        self.assertSequenceEqual(
763	            Item.objects.extra(select={"a": 1}).datetimes("created", "day"),
764	            [

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queries/tests.py:854:17
853	        query = qs.query.get_compiler(qs.db).as_sql()[0]
854	        query2 = pickle.loads(pickle.dumps(qs.query))
855	        self.assertEqual(query2.get_compiler(qs.db).as_sql()[0], query)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queries/tests.py:860:13
859	        qs = Item.objects.defer("name", "creator")
860	        q2 = pickle.loads(pickle.dumps(qs))
861	        self.assertEqual(list(qs), list(q2))

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queries/tests.py:862:13
861	        self.assertEqual(list(qs), list(q2))
862	        q3 = pickle.loads(pickle.dumps(qs, pickle.HIGHEST_PROTOCOL))
863	        self.assertEqual(list(qs), list(q3))

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queries/tests.py:912:8
911	        qs = Item.objects.datetimes("created", "month")
912	        pickle.loads(pickle.dumps(qs))
913	

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/queries/tests.py:1865:13
1864	        sql = "case when %s > 2 then 1 else 0 end" % connection.ops.quote_name("rank")
1865	        qs = Ranking.objects.extra(select={"good": sql})
1866	        self.assertEqual(

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/queries/tests.py:1883:13
1882	        sql = "case when %s > 2 then 1 else 0 end" % connection.ops.quote_name("rank")
1883	        qs = Ranking.objects.extra(select={"good": sql})
1884	        dicts = qs.values().order_by("id")

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b610_django_extra_used.html
   Location: ./tests/queries/tests.py:1968:12
1967	        with self.assertRaisesMessage(ValueError, msg):
1968	            Note.objects.extra(select={crafted_alias: "1"})
1969	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queries/tests.py:2808:25
2807	        self.assertEqual(value, (72, None))
2808	        self.assertEqual(pickle.loads(pickle.dumps(value)), value)
2809	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/queryset_pickle/tests.py:2:0
1	import datetime
2	import pickle
3	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:27:30
26	    def assert_pickles(self, qs):
27	        self.assertEqual(list(pickle.loads(pickle.dumps(qs))), list(qs))
28	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:58:20
57	        original = Event.DoesNotExist("Doesn't exist")
58	        unpickled = pickle.loads(pickle.dumps(original))
59	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:67:22
66	        klass = Event.DoesNotExist
67	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
68	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:71:22
70	        klass = Event.MultipleObjectsReturned
71	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
72	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:76:22
75	        klass = Event.group.RelatedObjectDoesNotExist
76	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
77	        # ForwardOneToOneDescriptor

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:79:22
78	        klass = Happening.event.RelatedObjectDoesNotExist
79	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
80	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:83:22
82	        klass = Event.happening.RelatedObjectDoesNotExist
83	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
84	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:86:8
85	    def test_manager_pickle(self):
86	        pickle.loads(pickle.dumps(Happening.objects))
87	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:94:19
93	        dumped = pickle.dumps(original)
94	        reloaded = pickle.loads(dumped)
95	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:100:19
99	        dumped = pickle.dumps(original)
100	        reloaded = pickle.loads(dumped)
101	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:114:19
113	        dumped = pickle.dumps(original)
114	        reloaded = pickle.loads(dumped)
115	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:128:19
127	        dumped = pickle.dumps(original)
128	        reloaded = pickle.loads(dumped)
129	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:147:17
146	        # First pickling
147	        groups = pickle.loads(pickle.dumps(groups))
148	        self.assertSequenceEqual(groups, [g])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:151:17
150	        # Second pickling
151	        groups = pickle.loads(pickle.dumps(groups))
152	        self.assertSequenceEqual(groups, [g])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:161:22
160	        with self.assertNumQueries(1):
161	            events2 = pickle.loads(pickle.dumps(events))
162	        with self.assertNumQueries(0):

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:170:18
169	        )
170	        groups2 = pickle.loads(pickle.dumps(groups))
171	        self.assertSequenceEqual(groups2.filter(id__gte=0), [g])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:180:12
179	        with self.assertNumQueries(0):
180	            pickle.loads(pickle.dumps(groups))
181	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:193:15
192	        m2ms = M2MModel.objects.prefetch_related("groups")
193	        m2ms = pickle.loads(pickle.dumps(m2ms))
194	        self.assertSequenceEqual(m2ms, [m2m])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:206:18
205	        )
206	        groups2 = pickle.loads(pickle.dumps(groups))
207	        self.assertSequenceEqual(groups2, [group])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:217:18
216	        )
217	        groups2 = pickle.loads(pickle.dumps(groups))
218	        self.assertSequenceEqual(groups2.filter(has_event=True), [group])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:272:23
271	        ).annotate(sum_number=models.Sum("big_events__happening__number1"))
272	        groups_query = pickle.loads(pickle.dumps(groups.query))
273	        groups = Group.objects.all()

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:287:23
286	        ).annotate(count_groups=models.Count("first_m2mmodels__groups"))
287	        groups_query = pickle.loads(pickle.dumps(groups.query))
288	        groups = Group.objects.all()

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:300:25
299	        reloaded = Happening.objects.all()
300	        reloaded.query = pickle.loads(pickle.dumps(qs.query))
301	        self.assertEqual(

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:316:33
315	                reloaded = Happening.objects.all()
316	                reloaded.query = pickle.loads(pickle.dumps(qs.query))
317	                self.assertEqual(reloaded.get(), {"name": "test"})

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:333:12
332	        with self.assertRaisesMessage(RuntimeWarning, msg):
333	            pickle.loads(pickle.dumps(qs))
334	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:346:12
345	        with self.assertRaisesMessage(RuntimeWarning, msg):
346	            pickle.loads(pickle.dumps(qs))
347	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:373:23
372	        with self.assertNumQueries(0):
373	            reloaded = pickle.loads(dumped)
374	            reloaded_events = Event.objects.none()

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/queryset_pickle/tests.py:386:23
385	        with self.assertNumQueries(0):
386	            reloaded = pickle.loads(dumped)
387	            reloaded_events = Event.objects.none()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/raw_query/models.py:15:12
14	        for k in kwargs:
15	            assert k in [f.attname for f in self._meta.fields], (
16	                "Author.__init__ got an unexpected parameter: %s" % k
17	            )
18	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/raw_query/tests.py:187:20
186	        for select in selects:
187	            query = "SELECT %s FROM raw_query_author" % select
188	            authors = Author.objects.all()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/runtests.py:10:0
9	import socket
10	import subprocess
11	import sys

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/runtests.py:191:16
190	            if not start_at:
191	                assert start_after
192	                # Skip the current one before starting.

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/runtests.py:481:21
480	        print("***** Test labels: %s" % " ".join(test_labels_a))
481	        failures_a = subprocess.run(subprocess_args + test_labels_a)
482	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/runtests.py:486:21
485	        print("")
486	        failures_b = subprocess.run(subprocess_args + test_labels_b)
487	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/runtests.py:528:19
527	        )
528	        failures = subprocess.call(subprocess_args + [label, paired_test])
529	        if failures:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/schema/tests.py:260:16
259	            cursor.execute(
260	                "SELECT {} FROM {};".format(field_name, model._meta.db_table)
261	            )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/schema/tests.py:4898:18
4897	            cursor.execute(
4898	                f"SELECT name_with_comment_default FROM {Author._meta.db_table};"
4899	            )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/select_for_update/tests.py:66:14
65	        self.cursor = self.new_connection.cursor()
66	        sql = "SELECT * FROM %(db_table)s %(for_update)s;" % {
67	            "db_table": Person._meta.db_table,
68	            "for_update": self.new_connection.ops.for_update_sql(),
69	        }
70	        self.cursor.execute(sql, ())

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/select_for_update/tests.py:613:24
612	                    Person.objects.raw(
613	                        "SELECT * FROM %s %s"
614	                        % (
615	                            Person._meta.db_table,
616	                            connection.ops.for_update_sql(nowait=True),
617	                        )
618	                    )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/select_related/tests.py:28:8
27	        models = [Domain, Kingdom, Phylum, Klass, Order, Family, Genus, Species]
28	        assert len(names) == len(models), (names, models)
29	

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: ./tests/serializers/test_xml.py:1:0
1	from xml.dom import minidom
2	
3	from django.core import serializers

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/serializers/test_xml.py:36:12
35	        try:
36	            minidom.parseString(serial_str)
37	        except Exception:

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/serializers/test_xml.py:45:14
44	        ret_list = []
45	        dom = minidom.parseString(serial_str)
46	        fields = dom.getElementsByTagName("object")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/serializers/test_xml.py:54:14
53	        ret_list = []
54	        dom = minidom.parseString(serial_str)
55	        fields = dom.getElementsByTagName("field")

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: ./tests/servers/tests.py:43:15
42	    def urlopen(self, url):
43	        return urlopen(self.live_server_url + url)
44	

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: ./tests/servers/views.py:39:9
38	def subview_calling_view(request):
39	    with urlopen(request.GET["url"] + "/subview/") as response:
40	        return HttpResponse("subview calling view: {}".format(response.read().decode()))

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: ./tests/servers/views.py:44:9
43	def check_model_instance_from_subview(request):
44	    with urlopen(request.GET["url"] + "/create_model_instance/"):
45	        pass

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: ./tests/servers/views.py:46:9
45	        pass
46	    with urlopen(request.GET["url"] + "/model_view/") as response:
47	        return HttpResponse("subview calling view: {}".format(response.read().decode()))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/settings_tests/tests.py:298:5
297	
298	    @override_settings(SECRET_KEY="")
299	    def test_no_secret_key(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/settings_tests/tests.py:419:8
418	        s = LazySettings()
419	        s.configure(SECRET_KEY="foo")
420	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/settings_tests/tests.py:425:37
424	        settings_module = ModuleType("fake_settings_module")
425	        settings_module.SECRET_KEY = "foo"
426	        settings_module.USE_TZ = False

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/settings_tests/tests.py:483:37
482	        settings_module = ModuleType("fake_settings_module")
483	        settings_module.SECRET_KEY = "foo"
484	        msg = "The %s setting must be a list or a tuple."

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'BOTH'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/settings_tests/tests.py:558:17
557	        with self.assertRaises(SettingChangeEnterException):
558	            with override_settings(SETTING_PASS="BOTH", SETTING_BOTH="BOTH"):
559	                pass

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'ENTER'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/settings_tests/tests.py:568:17
567	        with self.assertRaises(SettingChangeEnterException):
568	            with override_settings(SETTING_PASS="ENTER", SETTING_ENTER="ENTER"):
569	                pass

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'EXIT'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/settings_tests/tests.py:578:17
577	        with self.assertRaises(SettingChangeExitException):
578	            with override_settings(SETTING_PASS="EXIT", SETTING_EXIT="EXIT"):
579	                pass

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/signing/tests.py:196:5
195	
196	    @override_settings(
197	        SECRET_KEY="secret",
198	        SECRET_KEY_FALLBACKS=["oldsecret"],
199	    )
200	    def test_sign_unsign_ignore_secret_key_fallbacks(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/signing/tests.py:207:5
206	
207	    @override_settings(
208	        SECRET_KEY="secret",
209	        SECRET_KEY_FALLBACKS=["oldsecret"],
210	    )
211	    def test_default_keys_verification(self):

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/staticfiles_tests/cases.py:95:8
94	    def _get_file(self, filepath):
95	        assert filepath, "filepath is empty."
96	        filepath = os.path.join(settings.STATIC_ROOT, filepath)

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: ./tests/staticfiles_tests/test_liveserver.py:68:15
67	    def urlopen(self, url):
68	        return urlopen(self.live_server_url + url)
69	

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: ./tests/syndication_tests/tests.py:2:0
1	import datetime
2	from xml.dom import minidom
3	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:99:14
98	        response = self.client.get("/syndication/rss2/")
99	        doc = minidom.parseString(response.content)
100	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:205:14
204	        response = self.client.get("/syndication/rss2/with-callable-object/")
205	        doc = minidom.parseString(response.content)
206	        chan = doc.getElementsByTagName("rss")[0].getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:211:14
210	        response = self.client.get("/syndication/rss2/with-decorated-methods/")
211	        doc = minidom.parseString(response.content)
212	        chan = doc.getElementsByTagName("rss")[0].getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:248:14
247	        response = self.client.get("/syndication/rss2/guid_ispermalink_false/")
248	        doc = minidom.parseString(response.content)
249	        chan = doc.getElementsByTagName("rss")[0].getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:265:14
264	        response = self.client.get("/syndication/rss2/guid_ispermalink_true/")
265	        doc = minidom.parseString(response.content)
266	        chan = doc.getElementsByTagName("rss")[0].getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:278:14
277	        response = self.client.get("/syndication/rss2/single-enclosure/")
278	        doc = minidom.parseString(response.content)
279	        chan = doc.getElementsByTagName("rss")[0].getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:298:14
297	        response = self.client.get("/syndication/rss091/")
298	        doc = minidom.parseString(response.content)
299	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:363:15
362	        response = self.client.get("/syndication/atom/")
363	        feed = minidom.parseString(response.content).firstChild
364	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:413:15
412	        response = self.client.get("/syndication/atom/")
413	        feed = minidom.parseString(response.content).firstChild
414	        entries = feed.getElementsByTagName("entry")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:423:15
422	        response = self.client.get("/syndication/atom/single-enclosure/")
423	        feed = minidom.parseString(response.content).firstChild
424	        items = feed.getElementsByTagName("entry")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:432:15
431	        response = self.client.get("/syndication/atom/multiple-enclosure/")
432	        feed = minidom.parseString(response.content).firstChild
433	        items = feed.getElementsByTagName("entry")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:446:15
445	        response = self.client.get("/syndication/atom/")
446	        feed = minidom.parseString(response.content).firstChild
447	        updated = feed.getElementsByTagName("updated")[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:456:15
455	        response = self.client.get("/syndication/latest/")
456	        feed = minidom.parseString(response.content).firstChild
457	        updated = feed.getElementsByTagName("updated")[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:466:15
465	        response = self.client.get("/syndication/custom/")
466	        feed = minidom.parseString(response.content).firstChild
467	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:510:15
509	        response = self.client.get("/syndication/language/")
510	        feed = minidom.parseString(response.content).firstChild
511	        self.assertEqual(

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:521:14
520	        response = self.client.get("/syndication/rss2/")
521	        doc = minidom.parseString(response.content)
522	        for item in doc.getElementsByTagName("item"):

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:535:14
534	        response = self.client.get("/syndication/naive-dates/")
535	        doc = minidom.parseString(response.content)
536	        updated = doc.getElementsByTagName("updated")[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:548:14
547	        response = self.client.get("/syndication/aware-dates/")
548	        doc = minidom.parseString(response.content)
549	        published = doc.getElementsByTagName("published")[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:640:14
639	        response = self.client.get("/syndication/stylesheet/")
640	        doc = minidom.parseString(response.content)
641	        self.assertEqual(doc.childNodes[0].nodeName, "xml-stylesheet")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:715:14
714	        response = self.client.get("/syndication/feedurl/")
715	        doc = minidom.parseString(response.content)
716	        for link in doc.getElementsByTagName("link"):

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:732:14
731	        )
732	        doc = minidom.parseString(response.content)
733	        chan = doc.getElementsByTagName("channel")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:760:14
759	        response = self.client.get("/syndication/template/")
760	        doc = minidom.parseString(response.content)
761	        feed = doc.getElementsByTagName("rss")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:780:14
779	        response = self.client.get("/syndication/template_context/")
780	        doc = minidom.parseString(response.content)
781	        feed = doc.getElementsByTagName("rss")[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/syndication_tests/tests.py:826:14
825	        response = self.client.get("/syndication/rss2/articles/%s/" % self.e1.pk)
826	        doc = minidom.parseString(response.content)
827	        feed = doc.getElementsByTagName("rss")[0]

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_addslashes.py:19:47
18	        output = self.engine.render_to_string(
19	            "addslashes01", {"a": "<a>'", "b": mark_safe("<a>'")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_addslashes.py:26:47
25	        output = self.engine.render_to_string(
26	            "addslashes02", {"a": "<a>'", "b": mark_safe("<a>'")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_capfirst.py:19:46
18	        output = self.engine.render_to_string(
19	            "capfirst01", {"a": "fred>", "b": mark_safe("fred&gt;")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_capfirst.py:26:46
25	        output = self.engine.render_to_string(
26	            "capfirst02", {"a": "fred>", "b": mark_safe("fred&gt;")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_center.py:19:42
18	        output = self.engine.render_to_string(
19	            "center01", {"a": "a&b", "b": mark_safe("a&b")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_center.py:26:42
25	        output = self.engine.render_to_string(
26	            "center02", {"a": "a&b", "b": mark_safe("a&b")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_chaining.py:15:46
14	        output = self.engine.render_to_string(
15	            "chaining01", {"a": "a < b", "b": mark_safe("a < b")}
16	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_chaining.py:29:46
28	        output = self.engine.render_to_string(
29	            "chaining02", {"a": "a < b", "b": mark_safe("a < b")}
30	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_chaining.py:37:46
36	        output = self.engine.render_to_string(
37	            "chaining03", {"a": "a < b", "b": mark_safe("a < b")}
38	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_chaining.py:51:46
50	        output = self.engine.render_to_string(
51	            "chaining04", {"a": "a < b", "b": mark_safe("a < b")}
52	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_cut.py:18:39
17	        output = self.engine.render_to_string(
18	            "cut01", {"a": "x&y", "b": mark_safe("x&amp;y")}
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_cut.py:25:39
24	        output = self.engine.render_to_string(
25	            "cut02", {"a": "x&y", "b": mark_safe("x&amp;y")}
26	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_cut.py:38:39
37	        output = self.engine.render_to_string(
38	            "cut03", {"a": "x&y", "b": mark_safe("x&amp;y")}
39	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_cut.py:45:39
44	        output = self.engine.render_to_string(
45	            "cut04", {"a": "x&y", "b": mark_safe("x&amp;y")}
46	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_cut.py:60:39
59	        output = self.engine.render_to_string(
60	            "cut05", {"a": "x&y", "b": mark_safe("x&amp;y")}
61	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_cut.py:67:39
66	        output = self.engine.render_to_string(
67	            "cut06", {"a": "x&y", "b": mark_safe("x&amp;y")}
68	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_default.py:29:65
28	    def test_default03(self):
29	        output = self.engine.render_to_string("default03", {"a": mark_safe("x>")})
30	        self.assertEqual(output, "x>")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_default.py:34:65
33	    def test_default04(self):
34	        output = self.engine.render_to_string("default04", {"a": mark_safe("x>")})
35	        self.assertEqual(output, "x>")

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'abc'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/template_tests/filter_tests/test_dictsort.py:6:15
5	class User:
6	    password = "abc"
7	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_escape.py:18:42
17	        output = self.engine.render_to_string(
18	            "escape01", {"a": "x&y", "b": mark_safe("x&y")}
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_escape.py:31:42
30	        output = self.engine.render_to_string(
31	            "escape02", {"a": "x&y", "b": mark_safe("x&y")}
32	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_escapeseq.py:23:40
22	            "escapeseq_basic",
23	            {"a": ["x&y", "<p>"], "b": [mark_safe("x&y"), mark_safe("<p>")]},
24	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_escapeseq.py:23:58
22	            "escapeseq_basic",
23	            {"a": ["x&y", "<p>"], "b": [mark_safe("x&y"), mark_safe("<p>")]},
24	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_escapeseq.py:39:40
38	            "escapeseq_autoescape_off",
39	            {"a": ["x&y", "<p>"], "b": [mark_safe("x&y"), mark_safe("<p>")]},
40	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_escapeseq.py:39:58
38	            "escapeseq_autoescape_off",
39	            {"a": ["x&y", "<p>"], "b": [mark_safe("x&y"), mark_safe("<p>")]},
40	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_first.py:12:49
11	        output = self.engine.render_to_string(
12	            "first01", {"a": ["a&b", "x"], "b": [mark_safe("a&b"), "x"]}
13	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_first.py:25:49
24	        output = self.engine.render_to_string(
25	            "first02", {"a": ["a&b", "x"], "b": [mark_safe("a&b"), "x"]}
26	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_floatformat.py:23:48
22	        output = self.engine.render_to_string(
23	            "floatformat01", {"a": "1.42", "b": mark_safe("1.42")}
24	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_floatformat.py:30:48
29	        output = self.engine.render_to_string(
30	            "floatformat02", {"a": "1.42", "b": mark_safe("1.42")}
31	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_iriencode.py:28:35
27	        output = self.engine.render_to_string(
28	            "iriencode03", {"url": mark_safe("?test=1&me=2")}
29	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_iriencode.py:37:35
36	        output = self.engine.render_to_string(
37	            "iriencode04", {"url": mark_safe("?test=1&me=2")}
38	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_join.py:40:59
39	        output = self.engine.render_to_string(
40	            "join06", {"a": ["alpha", "beta & me"], "var": mark_safe(" & ")}
41	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_join.py:54:59
53	        output = self.engine.render_to_string(
54	            "join08", {"a": ["Alpha", "Beta & me"], "var": mark_safe(" & ")}
55	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_last.py:11:53
10	        output = self.engine.render_to_string(
11	            "last01", {"a": ["x", "a&b"], "b": ["x", mark_safe("a&b")]}
12	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_last.py:20:53
19	        output = self.engine.render_to_string(
20	            "last02", {"a": ["x", "a&b"], "b": ["x", mark_safe("a&b")]}
21	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_length.py:34:35
33	        output = self.engine.render_to_string(
34	            "length05", {"string": mark_safe("django")}
35	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_length.py:55:32
54	    def test_safestring(self):
55	        self.assertEqual(length(mark_safe("1234")), 4)
56	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_linebreaks.py:18:48
17	        output = self.engine.render_to_string(
18	            "linebreaks01", {"a": "x&\ny", "b": mark_safe("x&\ny")}
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_linebreaks.py:32:48
31	        output = self.engine.render_to_string(
32	            "linebreaks02", {"a": "x&\ny", "b": mark_safe("x&\ny")}
33	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_linebreaksbr.py:17:50
16	        output = self.engine.render_to_string(
17	            "linebreaksbr01", {"a": "x&\ny", "b": mark_safe("x&\ny")}
18	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_linebreaksbr.py:31:50
30	        output = self.engine.render_to_string(
31	            "linebreaksbr02", {"a": "x&\ny", "b": mark_safe("x&\ny")}
32	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_linenumbers.py:18:44
17	            "linenumbers01",
18	            {"a": "one\n<two>\nthree", "b": mark_safe("one\n&lt;two&gt;\nthree")},
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_linenumbers.py:35:44
34	            "linenumbers02",
35	            {"a": "one\n<two>\nthree", "b": mark_safe("one\n&lt;two&gt;\nthree")},
36	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_ljust.py:19:41
18	        output = self.engine.render_to_string(
19	            "ljust01", {"a": "a&b", "b": mark_safe("a&b")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_ljust.py:26:41
25	        output = self.engine.render_to_string(
26	            "ljust02", {"a": "a&b", "b": mark_safe("a&b")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_lower.py:18:52
17	        output = self.engine.render_to_string(
18	            "lower01", {"a": "Apple & banana", "b": mark_safe("Apple &amp; banana")}
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_lower.py:25:52
24	        output = self.engine.render_to_string(
25	            "lower02", {"a": "Apple & banana", "b": mark_safe("Apple &amp; banana")}
26	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_make_list.py:16:67
15	    def test_make_list01(self):
16	        output = self.engine.render_to_string("make_list01", {"a": mark_safe("&")})
17	        self.assertEqual(output, "['&']")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_make_list.py:21:67
20	    def test_make_list02(self):
21	        output = self.engine.render_to_string("make_list02", {"a": mark_safe("&")})
22	        self.assertEqual(output, "[&#x27;&amp;&#x27;]")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_make_list.py:33:67
32	    def test_make_list03(self):
33	        output = self.engine.render_to_string("make_list03", {"a": mark_safe("&")})
34	        self.assertEqual(output, "['&']")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_make_list.py:38:67
37	    def test_make_list04(self):
38	        output = self.engine.render_to_string("make_list04", {"a": mark_safe("&")})
39	        self.assertEqual(output, "['&']")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_phone2numeric.py:13:42
12	            "phone2numeric01",
13	            {"a": "<1-800-call-me>", "b": mark_safe("<1-800-call-me>")},
14	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_phone2numeric.py:28:42
27	            "phone2numeric02",
28	            {"a": "<1-800-call-me>", "b": mark_safe("<1-800-call-me>")},
29	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_random.py:11:52
10	        output = self.engine.render_to_string(
11	            "random01", {"a": ["a&b", "a&b"], "b": [mark_safe("a&b"), mark_safe("a&b")]}
12	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_random.py:11:70
10	        output = self.engine.render_to_string(
11	            "random01", {"a": ["a&b", "a&b"], "b": [mark_safe("a&b"), mark_safe("a&b")]}
12	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_random.py:24:52
23	        output = self.engine.render_to_string(
24	            "random02", {"a": ["a&b", "a&b"], "b": [mark_safe("a&b"), mark_safe("a&b")]}
25	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_random.py:24:70
23	        output = self.engine.render_to_string(
24	            "random02", {"a": ["a&b", "a&b"], "b": [mark_safe("a&b"), mark_safe("a&b")]}
25	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_rjust.py:19:41
18	        output = self.engine.render_to_string(
19	            "rjust01", {"a": "a&b", "b": mark_safe("a&b")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_rjust.py:26:41
25	        output = self.engine.render_to_string(
26	            "rjust02", {"a": "a&b", "b": mark_safe("a&b")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_slice.py:12:41
11	        output = self.engine.render_to_string(
12	            "slice01", {"a": "a&b", "b": mark_safe("a&b")}
13	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_slice.py:26:41
25	        output = self.engine.render_to_string(
26	            "slice02", {"a": "a&b", "b": mark_safe("a&b")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_slugify.py:24:45
23	        output = self.engine.render_to_string(
24	            "slugify01", {"a": "a & b", "b": mark_safe("a &amp; b")}
25	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_slugify.py:31:45
30	        output = self.engine.render_to_string(
31	            "slugify02", {"a": "a & b", "b": mark_safe("a &amp; b")}
32	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_stringformat.py:24:48
23	        output = self.engine.render_to_string(
24	            "stringformat01", {"a": "a<b", "b": mark_safe("a<b")}
25	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_stringformat.py:33:48
32	        output = self.engine.render_to_string(
33	            "stringformat02", {"a": "a<b", "b": mark_safe("a<b")}
34	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_striptags.py:16:21
15	                "a": "<a>x</a> <p><b>y</b></p>",
16	                "b": mark_safe("<a>x</a> <p><b>y</b></p>"),
17	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_striptags.py:34:21
33	                "a": "<a>x</a> <p><b>y</b></p>",
34	                "b": mark_safe("<a>x</a> <p><b>y</b></p>"),
35	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_truncatewords.py:20:40
19	            "truncatewords01",
20	            {"a": "alpha & bravo", "b": mark_safe("alpha &amp; bravo")},
21	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_truncatewords.py:28:40
27	            "truncatewords02",
28	            {"a": "alpha & bravo", "b": mark_safe("alpha &amp; bravo")},
29	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_unordered_list.py:31:46
30	        output = self.engine.render_to_string(
31	            "unordered_list03", {"a": ["x>", [mark_safe("<y")]]}
32	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_unordered_list.py:46:46
45	        output = self.engine.render_to_string(
46	            "unordered_list04", {"a": ["x>", [mark_safe("<y")]]}
47	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_upper.py:23:43
22	        output = self.engine.render_to_string(
23	            "upper01", {"a": "a & b", "b": mark_safe("a &amp; b")}
24	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_upper.py:30:43
29	        output = self.engine.render_to_string(
30	            "upper02", {"a": "a & b", "b": mark_safe("a &amp; b")}
31	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_urlize.py:25:21
24	                "a": "http://example.com/?x=&y=",
25	                "b": mark_safe("http://example.com?x=&amp;y=&lt;2&gt;"),
26	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_urlize.py:42:21
41	                "a": "http://example.com/?x=&y=",
42	                "b": mark_safe("http://example.com?x=&amp;y="),
43	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_urlize.py:55:64
54	    def test_urlize03(self):
55	        output = self.engine.render_to_string("urlize03", {"a": mark_safe("a &amp; b")})
56	        self.assertEqual(output, "a &amp; b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_urlize.py:60:64
59	    def test_urlize04(self):
60	        output = self.engine.render_to_string("urlize04", {"a": mark_safe("a &amp; b")})
61	        self.assertEqual(output, "a &amp; b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_urlizetrunc.py:22:21
21	                "a": '"Unsafe" http://example.com/x=&y=',
22	                "b": mark_safe("&quot;Safe&quot; http://example.com?x=&amp;y="),
23	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_urlizetrunc.py:39:21
38	                "a": '"Unsafe" http://example.com/x=&y=',
39	                "b": mark_safe("&quot;Safe&quot; http://example.com?x=&amp;y="),
40	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_wordcount.py:19:47
18	        output = self.engine.render_to_string(
19	            "wordcount01", {"a": "a & b", "b": mark_safe("a &amp; b")}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_wordcount.py:26:47
25	        output = self.engine.render_to_string(
26	            "wordcount02", {"a": "a & b", "b": mark_safe("a &amp; b")}
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_wordwrap.py:20:46
19	        output = self.engine.render_to_string(
20	            "wordwrap01", {"a": "a & b", "b": mark_safe("a & b")}
21	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/filter_tests/test_wordwrap.py:27:46
26	        output = self.engine.render_to_string(
27	            "wordwrap02", {"a": "a & b", "b": mark_safe("a & b")}
28	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:202:67
201	    def test_i18n21(self):
202	        output = self.engine.render_to_string("i18n21", {"andrew": mark_safe("a & b")})
203	        self.assertEqual(output, "a & b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/syntax_tests/i18n/test_translate.py:82:67
81	    def test_i18n22(self):
82	        output = self.engine.render_to_string("i18n22", {"andrew": mark_safe("a & b")})
83	        self.assertEqual(output, "a & b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/syntax_tests/test_autoescape.py:53:42
52	        output = self.engine.render_to_string(
53	            "autoescape-tag06", {"first": mark_safe("<b>first</b>")}
54	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/syntax_tests/test_autoescape.py:60:42
59	        output = self.engine.render_to_string(
60	            "autoescape-tag07", {"first": mark_safe("<b>Apple</b>")}
61	        )

--------------------------------------------------
>> Issue: [B103:set_bad_file_permissions] Chmod setting a permissive mask 0o222 on file (tmppath).
   Severity: High   Confidence: High
   CWE: CWE-732 (https://cwe.mitre.org/data/definitions/732.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b103_set_bad_file_permissions.html
   Location: ./tests/template_tests/test_loaders.py:224:12
223	            tmppath = os.path.join(tmpdir, tmpfile.name)
224	            os.chmod(tmppath, 0o0222)
225	            with self.set_dirs([tmpdir]):

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/template_tests/test_response.py:1:0
1	import pickle
2	import time
3	from datetime import datetime

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/template_tests/test_response.py:188:29
187	        pickled_response = pickle.dumps(response)
188	        unpickled_response = pickle.loads(pickled_response)
189	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/template_tests/test_response.py:220:29
219	        pickled_response = pickle.dumps(response)
220	        unpickled_response = pickle.loads(pickled_response)
221	        pickle.dumps(unpickled_response)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/template_tests/test_response.py:236:29
235	        pickled_response = pickle.dumps(response, pickle.HIGHEST_PROTOCOL)
236	        unpickled_response = pickle.loads(pickled_response)
237	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/template_tests/test_response.py:326:29
325	        pickled_response = pickle.dumps(response)
326	        unpickled_response = pickle.loads(pickled_response)
327	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/template_tests/test_response.py:363:29
362	        pickled_response = pickle.dumps(response)
363	        unpickled_response = pickle.loads(pickled_response)
364	        pickle.dumps(unpickled_response)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/template_tests/utils.py:185:15
184	    def __str__(self):
185	        return mark_safe("you &gt; me")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client/tests.py:68:17
67	    def setUpTestData(cls):
68	        cls.u1 = User.objects.create_user(username="testclient", password="password")
69	        cls.u2 = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client/tests.py:69:17
68	        cls.u1 = User.objects.create_user(username="testclient", password="password")
69	        cls.u2 = User.objects.create_user(
70	            username="inactive", password="password", is_active=False
71	        )
72	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client/tests.py:552:16
551	        # Log in
552	        login = self.client.login(username="testclient", password="password")
553	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client/tests.py:591:16
590	        # Log in
591	        login = self.client.login(username="testclient", password="password")
592	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client/tests.py:629:16
628	        # Log in
629	        login = self.client.login(username="testclient", password="password")
630	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'nopassword'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client/tests.py:660:16
659	
660	        login = self.client.login(username="otheruser", password="nopassword")
661	        self.assertFalse(login)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client/tests.py:703:8
702	        # Log in
703	        self.client.login(username="testclient", password="password")
704	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client/tests.py:804:16
803	        # Log in
804	        login = self.client.login(username="testclient", password="password")
805	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client/tests.py:826:16
825	        # Log in
826	        login = self.client.login(username="testclient", password="password")
827	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client/tests.py:843:16
842	        # Log in
843	        login = self.client.login(username="testclient", password="password")
844	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B408:blacklist] Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: ./tests/test_client/views.py:3:0
2	from urllib.parse import urlencode
3	from xml.dom.minidom import parseString
4	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/test_client/views.py:139:15
138	    if request.method == "POST":
139	        root = parseString(request.body)
140	        first_book = root.firstChild.firstChild

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:32:17
31	    def setUpTestData(cls):
32	        cls.u1 = User.objects.create_user(username="testclient", password="password")
33	        cls.staff = User.objects.create_user(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:33:20
32	        cls.u1 = User.objects.create_user(username="testclient", password="password")
33	        cls.staff = User.objects.create_user(
34	            username="staff", password="password", is_staff=True
35	        )
36	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:695:16
694	        c = Client()
695	        login = c.login(username="testclient", password="password")
696	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:713:16
712	        "A session engine that modifies the session key can be used to log in"
713	        login = self.client.login(username="testclient", password="password")
714	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:756:16
755	
756	        login = self.client.login(username="testclient", password="password")
757	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:764:16
763	        # This next operation should be successful; if it isn't we have a problem.
764	        login = self.client.login(username="staff", password="password")
765	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:906:16
905	        # Log in
906	        login = self.client.login(username="testclient", password="password")
907	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:925:16
924	        self.client.logout()
925	        login = self.client.login(username="testclient", password="password")
926	        self.assertTrue(login, "Could not log in")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:940:8
939	        user_logged_out.connect(listener)
940	        self.client.login(username="testclient", password="password")
941	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:959:8
958	        user_logged_out.connect(listener)
959	        self.client.login(username="test@test.com", password="password")
960	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:983:8
982	        user_logged_out.connect(listener)
983	        self.client.login(username="test@test.com", password="password")
984	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:998:8
997	        user_logged_out.connect(listener)
998	        self.client.login(username="incorrect", password="password")
999	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:1014:8
1013	        user_logged_in.connect(listener)
1014	        self.client.login(username="testclient", password="password")
1015	        user_logged_out.disconnect(listener)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/test_client_regress/tests.py:1028:8
1027	        user_logged_in.connect(listener)
1028	        self.client.login(username="incorrect", password="password")
1029	        user_logged_in.disconnect(listener)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/test_runner/test_parallel.py:1:0
1	import pickle
2	import sys
3	import unittest

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/test_runner/test_parallel.py:158:24
157	        result = RemoteTestResult()
158	        loaded_result = pickle.loads(pickle.dumps(result))
159	        self.assertEqual(result.events, loaded_result.events)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'django_tests_secret_key'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./tests/test_sqlite.py:24:13
23	
24	SECRET_KEY = "django_tests_secret_key"
25	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/test_utils/test_testcase.py:1:0
1	import pickle
2	from functools import wraps
3	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/test_utils/test_testcase.py:25:31
24	        self.non_picklable = lambda: 0
25	        self.assertEqual(self, pickle.loads(pickle.dumps(self)))
26	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/test_utils/tests.py:1847:39
1846	        """
1847	        with self.settings(STATIC_ROOT="/tmp/test"):
1848	            self.assertEqual(staticfiles_storage.location, os.path.abspath("/tmp/test"))

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/test_utils/tests.py:1848:75
1847	        with self.settings(STATIC_ROOT="/tmp/test"):
1848	            self.assertEqual(staticfiles_storage.location, os.path.abspath("/tmp/test"))
1849	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/test_utils/tests.py:1880:20
1879	        finder = get_finder("django.contrib.staticfiles.finders.FileSystemFinder")
1880	        test_path = "/tmp/test"
1881	        expected_location = ("", test_path)

--------------------------------------------------
>> Issue: [B408:blacklist] Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: ./tests/timezones/tests.py:7:0
6	from unittest import SkipTest, skipIf
7	from xml.dom.minidom import parseString
8	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: ./tests/timezones/tests.py:739:16
738	    def assert_xml_contains_datetime(self, xml, dt):
739	        field = parseString(xml).getElementsByTagName("field")[0]
740	        self.assertXMLEqual(field.childNodes[0].wholeText, dt)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/timezones/tests.py:1337:17
1336	    def setUpTestData(cls):
1337	        cls.u1 = User.objects.create_user(
1338	            password="secret",
1339	            last_login=datetime.datetime(2007, 5, 30, 13, 20, 10, tzinfo=UTC),
1340	            is_superuser=True,
1341	            username="super",
1342	            first_name="Super",
1343	            last_name="User",
1344	            email="super@example.com",
1345	            is_staff=True,
1346	            is_active=True,
1347	            date_joined=datetime.datetime(2007, 5, 30, 13, 20, 10, tzinfo=UTC),
1348	        )
1349	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/urlpatterns_reverse/tests.py:5:0
4	
5	import pickle
6	import sys

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/urlpatterns_reverse/tests.py:774:17
773	    def test_user_permission_with_lazy_reverse(self):
774	        alfred = User.objects.create_user(
775	            "alfred", "alfred@example.com", password="testpw"
776	        )
777	        response = self.client.get("/login_required_view/")

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/utils_tests/test_archive.py:85:39
84	            ("traversal.tar", ".."),
85	            ("traversal_absolute.tar", "/tmp/evil.py"),
86	        ]

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/utils_tests/test_autoreload.py:15:0
14	from pathlib import Path
15	from subprocess import CompletedProcess
16	from unittest import mock, skip, skipIf

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b324_hashlib.html
   Location: ./tests/utils_tests/test_crypto.py:32:33
31	                ("salt", "value"),
32	                {"secret": "x" * hashlib.sha1().block_size},
33	                "bd3749347b412b1b0a9ea65220e55767ac8e96b0",

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/utils_tests/test_datastructures.py:7:0
6	import copy
7	import pickle
8	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/utils_tests/test_datastructures.py:143:28
142	        x = MultiValueDict({"a": ["1", "2"], "b": ["3"]})
143	        self.assertEqual(x, pickle.loads(pickle.dumps(x)))
144	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_html.py:63:16
62	                "< Dangerous >",
63	                mark_safe("<b>safe</b>"),
64	                third="< dangerous again",

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_html.py:65:23
64	                third="< dangerous again",
65	                fourth=mark_safe("<i>safe again</i>"),
66	            ),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_html.py:319:44
318	        self.assertEqual(conditional_escape(s), "&lt;h1&gt;interop&lt;/h1&gt;")
319	        self.assertEqual(conditional_escape(mark_safe(s)), s)
320	        self.assertEqual(conditional_escape(lazystr(mark_safe(s))), s)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_html.py:320:52
319	        self.assertEqual(conditional_escape(mark_safe(s)), s)
320	        self.assertEqual(conditional_escape(lazystr(mark_safe(s))), s)
321	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/utils_tests/test_lazyobject.py:2:0
1	import copy
2	import pickle
3	import sys

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/utils_tests/test_lazyobject.py:229:20
228	        pickled = pickle.dumps(obj)
229	        unpickled = pickle.loads(pickled)
230	        self.assertIsInstance(unpickled, Foo)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/utils_tests/test_lazyobject.py:485:28
484	                pickled = pickle.dumps(obj, protocol)
485	                unpickled = pickle.loads(pickled)
486	                self.assertEqual(unpickled, obj)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/utils_tests/test_lazyobject.py:503:20
502	                self.assertEqual(
503	                    pickle.loads(pickle.dumps(lazy_category, protocol)), category
504	                )

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/utils_tests/test_lazyobject.py:506:20
505	                self.assertEqual(
506	                    pickle.loads(pickle.dumps(lazy_category_2, protocol)), category
507	                )

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/utils_tests/test_os_utils.py:34:21
33	    def test_to_path(self):
34	        for path in ("/tmp/some_file.txt", Path("/tmp/some_file.txt")):
35	            with self.subTest(path):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/utils_tests/test_os_utils.py:34:48
33	    def test_to_path(self):
34	        for path in ("/tmp/some_file.txt", Path("/tmp/some_file.txt")):
35	            with self.subTest(path):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/utils_tests/test_os_utils.py:36:53
35	            with self.subTest(path):
36	                self.assertEqual(to_path(path), Path("/tmp/some_file.txt"))
37	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:23:12
22	    def test_mark_safe(self):
23	        s = mark_safe("a&b")
24	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:32:12
31	        """
32	        s = mark_safe("a&b")
33	        self.assertIsInstance(str(s), type(s))

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/utils_tests/test_safestring.py:37:12
36	        e = customescape("<a&b>")
37	        s = mark_safe(e)
38	        self.assertIs(s, e)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:37:12
36	        e = customescape("<a&b>")
37	        s = mark_safe(e)
38	        self.assertIs(s, e)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/utils_tests/test_safestring.py:44:17
43	    def test_mark_safe_lazy(self):
44	        safe_s = mark_safe(lazystr("a&b"))
45	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:44:17
43	    def test_mark_safe_lazy(self):
44	        safe_s = mark_safe(lazystr("a&b"))
45	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/utils_tests/test_safestring.py:51:12
50	    def test_mark_safe_lazy_i18n(self):
51	        s = mark_safe(gettext_lazy("name"))
52	        tpl = Template("{{ s }}")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:51:12
50	    def test_mark_safe_lazy_i18n(self):
51	        s = mark_safe(gettext_lazy("name"))
52	        tpl = Template("{{ s }}")

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/utils_tests/test_safestring.py:61:12
60	
61	        s = mark_safe(Obj())
62	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:61:12
60	
61	        s = mark_safe(Obj())
62	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:66:25
65	    def test_mark_safe_result_implements_dunder_html(self):
66	        self.assertEqual(mark_safe("a&b").__html__(), "a&b")
67	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/utils_tests/test_safestring.py:69:25
68	    def test_mark_safe_lazy_result_implements_dunder_html(self):
69	        self.assertEqual(mark_safe(lazystr("a&b")).__html__(), "a&b")
70	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:69:25
68	    def test_mark_safe_lazy_result_implements_dunder_html(self):
69	        self.assertEqual(mark_safe(lazystr("a&b")).__html__(), "a&b")
70	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:73:13
72	        s = html.escape(lazystr("a"))
73	        s += mark_safe("&b")
74	        self.assertRenderEqual("{{ s }}", "a&b", s=s)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:77:13
76	        s = html.escapejs(lazystr("a"))
77	        s += mark_safe("&b")
78	        self.assertRenderEqual("{{ s }}", "a&b", s=s)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/utils_tests/test_safestring.py:89:25
88	
89	        self.assertEqual(mark_safe(clean_string_provider)(), clean_string_provider())
90	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:89:25
88	
89	        self.assertEqual(mark_safe(clean_string_provider)(), clean_string_provider())
90	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/utils_tests/test_safestring.py:100:22
99	
100	        self.assertIs(mark_safe(SafeStringContainer), SafeStringContainer)
101	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:100:22
99	
100	        self.assertIs(mark_safe(SafeStringContainer), SafeStringContainer)
101	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/utils_tests/test_safestring.py:111:25
110	        lazy_str = lazy(html_str, str)()
111	        self.assertEqual(mark_safe(lazy_str), html_str())
112	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:111:25
110	        lazy_str = lazy(html_str, str)()
111	        self.assertEqual(mark_safe(lazy_str), html_str())
112	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/utils_tests/test_safestring.py:147:23
146	            def __add__(self, other):
147	                return mark_safe(base_str) + other
148	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:147:23
146	            def __add__(self, other):
147	                return mark_safe(base_str) + other
148	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b703_django_mark_safe.html
   Location: ./tests/utils_tests/test_safestring.py:155:31
154	            def __radd__(self, other):
155	                return other + mark_safe(base_str)
156	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:155:31
154	            def __radd__(self, other):
155	                return other + mark_safe(base_str)
156	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:162:20
161	            (Add(), add_str, left_add_expected, str),
162	            (Add(), mark_safe(add_str), left_add_expected, str),
163	            (AddSafe(), add_str, left_add_expected, str),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:164:24
163	            (AddSafe(), add_str, left_add_expected, str),
164	            (AddSafe(), mark_safe(add_str), left_add_expected, SafeString),
165	            # Right-add test cases.

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:167:13
166	            (add_str, Radd(), right_add_expected, str),
167	            (mark_safe(add_str), Radd(), right_add_expected, str),
168	            (add_str, Radd(), right_add_expected, str),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/utils_tests/test_safestring.py:169:13
168	            (add_str, Radd(), right_add_expected, str),
169	            (mark_safe(add_str), RaddSafe(), right_add_expected, SafeString),
170	        ]

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/utils_tests/test_simplelazyobject.py:1:0
1	import pickle
2	
3	from django.contrib.auth.models import User

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./tests/validation/test_picklable.py:1:0
1	import pickle
2	from unittest import TestCase
3	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/validation/test_picklable.py:10:20
9	        original = ValidationError("a", code="something")
10	        unpickled = pickle.loads(pickle.dumps(original))
11	        self.assertIs(unpickled, unpickled.error_list[0])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/validation/test_picklable.py:16:20
15	        original = ValidationError("a", code="something")
16	        unpickled = pickle.loads(pickle.dumps(ValidationError(original)))
17	        self.assertIs(unpickled, unpickled.error_list[0])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/validation/test_picklable.py:22:20
21	        original = ValidationError(["a", "b"])
22	        unpickled = pickle.loads(pickle.dumps(original))
23	        self.assertEqual(

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/validation/test_picklable.py:31:20
30	        original = ValidationError(["a", "b"])
31	        unpickled = pickle.loads(pickle.dumps(ValidationError(original)))
32	        self.assertEqual(

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/validation/test_picklable.py:40:20
39	        original = ValidationError([ValidationError("a"), ValidationError("b")])
40	        unpickled = pickle.loads(pickle.dumps(original))
41	        self.assertIs(unpickled.args[0][0], unpickled.error_list[0])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b301-pickle
   Location: ./tests/validation/test_picklable.py:51:20
50	        original = ValidationError(message_dict)
51	        unpickled = pickle.loads(pickle.dumps(original))
52	        self.assertEqual(unpickled.message_dict, message_dict)

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: ./tests/validators/tests.py:381:28
380	    (validate_ipv4_address, "255.0.0.0", None),
381	    (validate_ipv4_address, "0.0.0.0", None),
382	    (validate_ipv4_address, "256.1.1.1", ValidationError),

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: ./tests/validators/tests.py:411:29
410	    (validate_ipv46_address, "255.0.0.0", None),
411	    (validate_ipv46_address, "0.0.0.0", None),
412	    (validate_ipv46_address, ipaddress.IPv4Address("1.1.1.1"), None),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/view_tests/tests/test_debug.py:705:29
704	                err.add_note("Second Note")
705	                err.add_note(mark_safe("<script>alert(1);</script>"))
706	                raise err

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/view_tests/tests/test_debug.py:768:37
767	            try:
768	                raise AttributeError(mark_safe("<p>Top level</p>"))
769	            except AttributeError as explicit:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/view_tests/tests/test_debug.py:771:37
770	                try:
771	                    raise ValueError(mark_safe("<p>Second exception</p>")) from explicit
772	                except ValueError:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/view_tests/tests/test_debug.py:773:37
772	                except ValueError:
773	                    raise IndexError(mark_safe("<p>Final exception</p>"))
774	        except Exception:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/view_tests/tests/test_debug.py:814:37
813	                try:
814	                    raise ValueError(mark_safe("<p>2nd exception</p>")) from explicit
815	                except ValueError:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b102_exec_used.html
   Location: ./tests/view_tests/tests/test_debug.py:879:12
878	            code = compile(source, "generated", "exec")
879	            exec(code, namespace)
880	        except Exception:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b102_exec_used.html
   Location: ./tests/view_tests/tests/test_debug.py:914:12
913	            code = compile(source, "generated", "exec")
914	            exec(code, namespace)
915	        except Exception:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/view_tests/tests/test_debug.py:1046:20
1045	        try:
1046	            local = mark_safe("<p>Local variable</p>")
1047	            raise ValueError(local)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_calls.html#b308-mark-safe
   Location: ./tests/view_tests/tests/test_debug.py:1100:12
1099	        try:
1100	            mark_safe("abcdefghijkl<p>mnὀp</p>qrstuwxyz").encode("ascii")
1101	        except Exception:

--------------------------------------------------

Code scanned:
	Total lines of code: 398998
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 558
		Medium: 529
		High: 14
	Total issues (by confidence):
		Undefined: 0
		Low: 31
		Medium: 494
		High: 576
Files skipped (1):
	./tests/test_runner_apps/tagged/tests_syntax_error.py (syntax error while parsing AST from file)
